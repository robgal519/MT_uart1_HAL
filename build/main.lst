ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	huart1,64,4
  18              		.comm	hdma_usart1_tx,96,4
  19              		.comm	hdma_usart1_rx,96,4
  20              		.section	.text.init_Hal_UART,"ax",%progbits
  21              		.align	1
  22              		.global	init_Hal_UART
  23              		.arch armv7e-m
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  27              		.fpu fpv4-sp-d16
  29              	init_Hal_UART:
  30              	.LFB133:
  31              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #define bool uint8_t
  27:Src/main.c    **** #define false 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 2


  28:Src/main.c    **** #define true 1
  29:Src/main.c    **** #include "stdio.h"
  30:Src/main.c    **** #include "string.h"
  31:Src/main.c    **** /* USER CODE END Includes */
  32:Src/main.c    **** 
  33:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  34:Src/main.c    **** /* USER CODE BEGIN PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE END PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PD */
  40:Src/main.c    **** /* USER CODE END PD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** UART_HandleTypeDef huart1;
  49:Src/main.c    **** DMA_HandleTypeDef hdma_usart1_tx;
  50:Src/main.c    **** DMA_HandleTypeDef hdma_usart1_rx;
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** void SystemClock_Config(void);
  58:Src/main.c    **** static void MX_GPIO_Init(void);
  59:Src/main.c    **** static void MX_DMA_Init(void);
  60:Src/main.c    **** static void MX_USART1_UART_Init(void);
  61:Src/main.c    **** /* USER CODE BEGIN PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  66:Src/main.c    **** /* USER CODE BEGIN 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** void init_Hal_UART(UART_HandleTypeDef *huart, size_t baudrate)
  69:Src/main.c    **** {
  32              		.loc 1 69 1
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 8
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 80B5     		push	{r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 82B0     		sub	sp, sp, #8
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              	.LCFI2:
  46              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 3


  47 0006 7860     		str	r0, [r7, #4]
  48 0008 3960     		str	r1, [r7]
  70:Src/main.c    ****   huart->Instance = USART1;
  49              		.loc 1 70 19
  50 000a 7B68     		ldr	r3, [r7, #4]
  51 000c 114A     		ldr	r2, .L4
  52 000e 1A60     		str	r2, [r3]
  71:Src/main.c    ****   huart->Init.BaudRate = baudrate;
  53              		.loc 1 71 24
  54 0010 7B68     		ldr	r3, [r7, #4]
  55 0012 3A68     		ldr	r2, [r7]
  56 0014 5A60     		str	r2, [r3, #4]
  72:Src/main.c    ****   huart->Init.WordLength = UART_WORDLENGTH_8B;
  57              		.loc 1 72 26
  58 0016 7B68     		ldr	r3, [r7, #4]
  59 0018 0022     		movs	r2, #0
  60 001a 9A60     		str	r2, [r3, #8]
  73:Src/main.c    ****   huart->Init.StopBits = UART_STOPBITS_1;
  61              		.loc 1 73 24
  62 001c 7B68     		ldr	r3, [r7, #4]
  63 001e 0022     		movs	r2, #0
  64 0020 DA60     		str	r2, [r3, #12]
  74:Src/main.c    ****   huart->Init.Parity = UART_PARITY_NONE;
  65              		.loc 1 74 22
  66 0022 7B68     		ldr	r3, [r7, #4]
  67 0024 0022     		movs	r2, #0
  68 0026 1A61     		str	r2, [r3, #16]
  75:Src/main.c    ****   huart->Init.Mode = UART_MODE_TX_RX;
  69              		.loc 1 75 20
  70 0028 7B68     		ldr	r3, [r7, #4]
  71 002a 0C22     		movs	r2, #12
  72 002c 5A61     		str	r2, [r3, #20]
  76:Src/main.c    ****   huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
  73              		.loc 1 76 25
  74 002e 7B68     		ldr	r3, [r7, #4]
  75 0030 0022     		movs	r2, #0
  76 0032 9A61     		str	r2, [r3, #24]
  77:Src/main.c    ****   huart->Init.OverSampling = UART_OVERSAMPLING_16;
  77              		.loc 1 77 28
  78 0034 7B68     		ldr	r3, [r7, #4]
  79 0036 0022     		movs	r2, #0
  80 0038 DA61     		str	r2, [r3, #28]
  78:Src/main.c    ****   if (HAL_UART_Init(huart) != HAL_OK)
  81              		.loc 1 78 7
  82 003a 7868     		ldr	r0, [r7, #4]
  83 003c FFF7FEFF 		bl	HAL_UART_Init
  84 0040 0346     		mov	r3, r0
  85              		.loc 1 78 6
  86 0042 002B     		cmp	r3, #0
  87 0044 01D0     		beq	.L3
  79:Src/main.c    ****   {
  80:Src/main.c    ****     Error_Handler();
  88              		.loc 1 80 5
  89 0046 FFF7FEFF 		bl	Error_Handler
  90              	.L3:
  81:Src/main.c    ****   }
  82:Src/main.c    **** }
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 4


  91              		.loc 1 82 1
  92 004a 00BF     		nop
  93 004c 0837     		adds	r7, r7, #8
  94              	.LCFI3:
  95              		.cfi_def_cfa_offset 8
  96 004e BD46     		mov	sp, r7
  97              	.LCFI4:
  98              		.cfi_def_cfa_register 13
  99              		@ sp needed
 100 0050 80BD     		pop	{r7, pc}
 101              	.L5:
 102 0052 00BF     		.align	2
 103              	.L4:
 104 0054 00100140 		.word	1073811456
 105              		.cfi_endproc
 106              	.LFE133:
 108              		.section	.text.initGPIOA,"ax",%progbits
 109              		.align	1
 110              		.global	initGPIOA
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	initGPIOA:
 117              	.LFB134:
  83:Src/main.c    **** void initGPIOA()
  84:Src/main.c    **** {
 118              		.loc 1 84 1
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122 0000 80B5     		push	{r7, lr}
 123              	.LCFI5:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 7, -8
 126              		.cfi_offset 14, -4
 127 0002 00AF     		add	r7, sp, #0
 128              	.LCFI6:
 129              		.cfi_def_cfa_register 7
  85:Src/main.c    ****   static GPIO_InitTypeDef outputPins;
  86:Src/main.c    ****   outputPins.Pin = GPIO_PIN_4;
 130              		.loc 1 86 18
 131 0004 084B     		ldr	r3, .L7
 132 0006 1022     		movs	r2, #16
 133 0008 1A60     		str	r2, [r3]
  87:Src/main.c    ****   outputPins.Mode = GPIO_MODE_OUTPUT_PP;
 134              		.loc 1 87 19
 135 000a 074B     		ldr	r3, .L7
 136 000c 0122     		movs	r2, #1
 137 000e 5A60     		str	r2, [r3, #4]
  88:Src/main.c    ****   outputPins.Pull = GPIO_PULLDOWN;
 138              		.loc 1 88 19
 139 0010 054B     		ldr	r3, .L7
 140 0012 0222     		movs	r2, #2
 141 0014 9A60     		str	r2, [r3, #8]
  89:Src/main.c    ****   outputPins.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 142              		.loc 1 89 20
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 5


 143 0016 044B     		ldr	r3, .L7
 144 0018 0322     		movs	r2, #3
 145 001a DA60     		str	r2, [r3, #12]
  90:Src/main.c    ****   // outputPins.Alternate  not set
  91:Src/main.c    **** 
  92:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &outputPins);
 146              		.loc 1 92 3
 147 001c 0249     		ldr	r1, .L7
 148 001e 0348     		ldr	r0, .L7+4
 149 0020 FFF7FEFF 		bl	HAL_GPIO_Init
  93:Src/main.c    **** }
 150              		.loc 1 93 1
 151 0024 00BF     		nop
 152 0026 80BD     		pop	{r7, pc}
 153              	.L8:
 154              		.align	2
 155              	.L7:
 156 0028 00000000 		.word	outputPins.8873
 157 002c 00000240 		.word	1073872896
 158              		.cfi_endproc
 159              	.LFE134:
 161              		.section	.bss.dummy,"aw",%nobits
 162              		.align	2
 165              	dummy:
 166 0000 00000000 		.space	500
 166      00000000 
 166      00000000 
 166      00000000 
 166      00000000 
 167              		.section	.text.randomizeData,"ax",%progbits
 168              		.align	1
 169              		.global	randomizeData
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
 175              	randomizeData:
 176              	.LFB135:
  94:Src/main.c    **** 
  95:Src/main.c    **** static uint8_t dummy[500];
  96:Src/main.c    **** void randomizeData(uint8_t *buffor, size_t size)
  97:Src/main.c    **** {
 177              		.loc 1 97 1
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 16
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181 0000 80B5     		push	{r7, lr}
 182              	.LCFI7:
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 7, -8
 185              		.cfi_offset 14, -4
 186 0002 84B0     		sub	sp, sp, #16
 187              	.LCFI8:
 188              		.cfi_def_cfa_offset 24
 189 0004 00AF     		add	r7, sp, #0
 190              	.LCFI9:
 191              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 6


 192 0006 7860     		str	r0, [r7, #4]
 193 0008 3960     		str	r1, [r7]
 194              	.LBB2:
  98:Src/main.c    ****   for (size_t i = 0; i < size; i++)
 195              		.loc 1 98 15
 196 000a 0023     		movs	r3, #0
 197 000c FB60     		str	r3, [r7, #12]
 198              		.loc 1 98 3
 199 000e 15E0     		b	.L10
 200              	.L11:
 201              	.LBB3:
  99:Src/main.c    ****   {
 100:Src/main.c    ****     buffor[i] = rand() % ((uint8_t)(-1));
 202              		.loc 1 100 17 discriminator 3
 203 0010 FFF7FEFF 		bl	rand
 204 0014 0246     		mov	r2, r0
 205              		.loc 1 100 24 discriminator 3
 206 0016 0E4B     		ldr	r3, .L12
 207 0018 83FB0213 		smull	r1, r3, r3, r2
 208 001c 1344     		add	r3, r3, r2
 209 001e D911     		asrs	r1, r3, #7
 210 0020 D317     		asrs	r3, r2, #31
 211 0022 C91A     		subs	r1, r1, r3
 212 0024 0B46     		mov	r3, r1
 213 0026 1B02     		lsls	r3, r3, #8
 214 0028 5B1A     		subs	r3, r3, r1
 215 002a D11A     		subs	r1, r2, r3
 216              		.loc 1 100 11 discriminator 3
 217 002c 7A68     		ldr	r2, [r7, #4]
 218 002e FB68     		ldr	r3, [r7, #12]
 219 0030 1344     		add	r3, r3, r2
 220              		.loc 1 100 15 discriminator 3
 221 0032 CAB2     		uxtb	r2, r1
 222 0034 1A70     		strb	r2, [r3]
 223              	.LBE3:
  98:Src/main.c    ****   for (size_t i = 0; i < size; i++)
 224              		.loc 1 98 33 discriminator 3
 225 0036 FB68     		ldr	r3, [r7, #12]
 226 0038 0133     		adds	r3, r3, #1
 227 003a FB60     		str	r3, [r7, #12]
 228              	.L10:
  98:Src/main.c    ****   for (size_t i = 0; i < size; i++)
 229              		.loc 1 98 3 discriminator 1
 230 003c FA68     		ldr	r2, [r7, #12]
 231 003e 3B68     		ldr	r3, [r7]
 232 0040 9A42     		cmp	r2, r3
 233 0042 E5D3     		bcc	.L11
 234              	.LBE2:
 101:Src/main.c    ****   }
 102:Src/main.c    **** }
 235              		.loc 1 102 1
 236 0044 00BF     		nop
 237 0046 00BF     		nop
 238 0048 1037     		adds	r7, r7, #16
 239              	.LCFI10:
 240              		.cfi_def_cfa_offset 8
 241 004a BD46     		mov	sp, r7
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 7


 242              	.LCFI11:
 243              		.cfi_def_cfa_register 13
 244              		@ sp needed
 245 004c 80BD     		pop	{r7, pc}
 246              	.L13:
 247 004e 00BF     		.align	2
 248              	.L12:
 249 0050 81808080 		.word	-2139062143
 250              		.cfi_endproc
 251              	.LFE135:
 253              		.global	UART1_TransferComplete
 254              		.section	.bss.UART1_TransferComplete,"aw",%nobits
 257              	UART1_TransferComplete:
 258 0000 00       		.space	1
 259              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 260              		.align	1
 261              		.global	HAL_UART_TxCpltCallback
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	HAL_UART_TxCpltCallback:
 268              	.LFB136:
 103:Src/main.c    **** volatile bool UART1_TransferComplete = false;
 104:Src/main.c    **** void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
 105:Src/main.c    **** {
 269              		.loc 1 105 1
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 8
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 274 0000 80B4     		push	{r7}
 275              	.LCFI12:
 276              		.cfi_def_cfa_offset 4
 277              		.cfi_offset 7, -4
 278 0002 83B0     		sub	sp, sp, #12
 279              	.LCFI13:
 280              		.cfi_def_cfa_offset 16
 281 0004 00AF     		add	r7, sp, #0
 282              	.LCFI14:
 283              		.cfi_def_cfa_register 7
 284 0006 7860     		str	r0, [r7, #4]
 106:Src/main.c    ****   if (huart == &huart1)
 285              		.loc 1 106 6
 286 0008 7B68     		ldr	r3, [r7, #4]
 287 000a 064A     		ldr	r2, .L17
 288 000c 9342     		cmp	r3, r2
 289 000e 02D1     		bne	.L16
 107:Src/main.c    ****     UART1_TransferComplete = true;
 290              		.loc 1 107 28
 291 0010 054B     		ldr	r3, .L17+4
 292 0012 0122     		movs	r2, #1
 293 0014 1A70     		strb	r2, [r3]
 294              	.L16:
 108:Src/main.c    **** }
 295              		.loc 1 108 1
 296 0016 00BF     		nop
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 8


 297 0018 0C37     		adds	r7, r7, #12
 298              	.LCFI15:
 299              		.cfi_def_cfa_offset 4
 300 001a BD46     		mov	sp, r7
 301              	.LCFI16:
 302              		.cfi_def_cfa_register 13
 303              		@ sp needed
 304 001c 5DF8047B 		ldr	r7, [sp], #4
 305              	.LCFI17:
 306              		.cfi_restore 7
 307              		.cfi_def_cfa_offset 0
 308 0020 7047     		bx	lr
 309              	.L18:
 310 0022 00BF     		.align	2
 311              	.L17:
 312 0024 00000000 		.word	huart1
 313 0028 00000000 		.word	UART1_TransferComplete
 314              		.cfi_endproc
 315              	.LFE136:
 317              		.section	.text.testBaudrateHAL,"ax",%progbits
 318              		.align	1
 319              		.global	testBaudrateHAL
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu fpv4-sp-d16
 325              	testBaudrateHAL:
 326              	.LFB137:
 109:Src/main.c    **** 
 110:Src/main.c    **** size_t testBaudrateHAL(size_t baudrate, UART_HandleTypeDef *uart)
 111:Src/main.c    **** {
 327              		.loc 1 111 1
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 16
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331 0000 80B5     		push	{r7, lr}
 332              	.LCFI18:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 7, -8
 335              		.cfi_offset 14, -4
 336 0002 84B0     		sub	sp, sp, #16
 337              	.LCFI19:
 338              		.cfi_def_cfa_offset 24
 339 0004 00AF     		add	r7, sp, #0
 340              	.LCFI20:
 341              		.cfi_def_cfa_register 7
 342 0006 7860     		str	r0, [r7, #4]
 343 0008 3960     		str	r1, [r7]
 112:Src/main.c    ****   static size_t counter = 0;
 113:Src/main.c    **** 
 114:Src/main.c    ****   init_Hal_UART(uart, baudrate);
 344              		.loc 1 114 3
 345 000a 7968     		ldr	r1, [r7, #4]
 346 000c 3868     		ldr	r0, [r7]
 347 000e FFF7FEFF 		bl	init_Hal_UART
 115:Src/main.c    ****   counter = 0;
 348              		.loc 1 115 11
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 9


 349 0012 1A4B     		ldr	r3, .L24
 350 0014 0022     		movs	r2, #0
 351 0016 1A60     		str	r2, [r3]
 116:Src/main.c    ****   UART1_TransferComplete = false;
 352              		.loc 1 116 26
 353 0018 194B     		ldr	r3, .L24+4
 354 001a 0022     		movs	r2, #0
 355 001c 1A70     		strb	r2, [r3]
 117:Src/main.c    ****   randomizeData(dummy, sizeof(dummy));
 356              		.loc 1 117 3
 357 001e 4FF4FA71 		mov	r1, #500
 358 0022 1848     		ldr	r0, .L24+8
 359 0024 FFF7FEFF 		bl	randomizeData
 118:Src/main.c    ****   HAL_StatusTypeDef status = HAL_UART_Transmit_IT(uart, dummy, sizeof(dummy));
 360              		.loc 1 118 30
 361 0028 4FF4FA72 		mov	r2, #500
 362 002c 1549     		ldr	r1, .L24+8
 363 002e 3868     		ldr	r0, [r7]
 364 0030 FFF7FEFF 		bl	HAL_UART_Transmit_IT
 365 0034 0346     		mov	r3, r0
 366 0036 FB73     		strb	r3, [r7, #15]
 119:Src/main.c    ****   if (status != HAL_OK)
 367              		.loc 1 119 6
 368 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 369 003a 002B     		cmp	r3, #0
 370 003c 14D1     		bne	.L20
 120:Src/main.c    ****   {
 121:Src/main.c    ****     // Error !!!
 122:Src/main.c    ****   }
 123:Src/main.c    ****   else
 124:Src/main.c    ****   {
 125:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 371              		.loc 1 125 5
 372 003e 0122     		movs	r2, #1
 373 0040 1021     		movs	r1, #16
 374 0042 1148     		ldr	r0, .L24+12
 375 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 126:Src/main.c    ****     while (!UART1_TransferComplete)
 376              		.loc 1 126 11
 377 0048 04E0     		b	.L21
 378              	.L22:
 127:Src/main.c    ****     {
 128:Src/main.c    ****       counter++;
 379              		.loc 1 128 14
 380 004a 0C4B     		ldr	r3, .L24
 381 004c 1B68     		ldr	r3, [r3]
 382 004e 0133     		adds	r3, r3, #1
 383 0050 0A4A     		ldr	r2, .L24
 384 0052 1360     		str	r3, [r2]
 385              	.L21:
 126:Src/main.c    ****     while (!UART1_TransferComplete)
 386              		.loc 1 126 12
 387 0054 0A4B     		ldr	r3, .L24+4
 388 0056 1B78     		ldrb	r3, [r3]
 389 0058 DBB2     		uxtb	r3, r3
 126:Src/main.c    ****     while (!UART1_TransferComplete)
 390              		.loc 1 126 11
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 10


 391 005a 002B     		cmp	r3, #0
 392 005c F5D0     		beq	.L22
 129:Src/main.c    ****     }
 130:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
 393              		.loc 1 130 5
 394 005e 0022     		movs	r2, #0
 395 0060 1021     		movs	r1, #16
 396 0062 0948     		ldr	r0, .L24+12
 397 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 398              	.L20:
 131:Src/main.c    ****   }
 132:Src/main.c    ****   HAL_UART_DeInit(uart);
 399              		.loc 1 132 3
 400 0068 3868     		ldr	r0, [r7]
 401 006a FFF7FEFF 		bl	HAL_UART_DeInit
 133:Src/main.c    ****   return counter;
 402              		.loc 1 133 10
 403 006e 034B     		ldr	r3, .L24
 404 0070 1B68     		ldr	r3, [r3]
 134:Src/main.c    **** }
 405              		.loc 1 134 1
 406 0072 1846     		mov	r0, r3
 407 0074 1037     		adds	r7, r7, #16
 408              	.LCFI21:
 409              		.cfi_def_cfa_offset 8
 410 0076 BD46     		mov	sp, r7
 411              	.LCFI22:
 412              		.cfi_def_cfa_register 13
 413              		@ sp needed
 414 0078 80BD     		pop	{r7, pc}
 415              	.L25:
 416 007a 00BF     		.align	2
 417              	.L24:
 418 007c 00000000 		.word	counter.8893
 419 0080 00000000 		.word	UART1_TransferComplete
 420 0084 00000000 		.word	dummy
 421 0088 00000240 		.word	1073872896
 422              		.cfi_endproc
 423              	.LFE137:
 425              		.section	.text.testBaudrate_DMA,"ax",%progbits
 426              		.align	1
 427              		.global	testBaudrate_DMA
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu fpv4-sp-d16
 433              	testBaudrate_DMA:
 434              	.LFB138:
 135:Src/main.c    **** 
 136:Src/main.c    **** size_t testBaudrate_DMA(size_t baudrate, UART_HandleTypeDef *uart)
 137:Src/main.c    **** {
 435              		.loc 1 137 1
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 16
 438              		@ frame_needed = 1, uses_anonymous_args = 0
 439 0000 80B5     		push	{r7, lr}
 440              	.LCFI23:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 11


 441              		.cfi_def_cfa_offset 8
 442              		.cfi_offset 7, -8
 443              		.cfi_offset 14, -4
 444 0002 84B0     		sub	sp, sp, #16
 445              	.LCFI24:
 446              		.cfi_def_cfa_offset 24
 447 0004 00AF     		add	r7, sp, #0
 448              	.LCFI25:
 449              		.cfi_def_cfa_register 7
 450 0006 7860     		str	r0, [r7, #4]
 451 0008 3960     		str	r1, [r7]
 138:Src/main.c    ****   static size_t counter = 0;
 139:Src/main.c    **** 
 140:Src/main.c    ****   init_Hal_UART(uart, baudrate);
 452              		.loc 1 140 3
 453 000a 7968     		ldr	r1, [r7, #4]
 454 000c 3868     		ldr	r0, [r7]
 455 000e FFF7FEFF 		bl	init_Hal_UART
 141:Src/main.c    ****   counter = 0;
 456              		.loc 1 141 11
 457 0012 1A4B     		ldr	r3, .L31
 458 0014 0022     		movs	r2, #0
 459 0016 1A60     		str	r2, [r3]
 142:Src/main.c    ****   UART1_TransferComplete = false;
 460              		.loc 1 142 26
 461 0018 194B     		ldr	r3, .L31+4
 462 001a 0022     		movs	r2, #0
 463 001c 1A70     		strb	r2, [r3]
 143:Src/main.c    ****   randomizeData(dummy, sizeof(dummy));
 464              		.loc 1 143 3
 465 001e 4FF4FA71 		mov	r1, #500
 466 0022 1848     		ldr	r0, .L31+8
 467 0024 FFF7FEFF 		bl	randomizeData
 144:Src/main.c    ****   HAL_StatusTypeDef status = HAL_UART_Transmit_DMA(uart, dummy, sizeof(dummy));
 468              		.loc 1 144 30
 469 0028 4FF4FA72 		mov	r2, #500
 470 002c 1549     		ldr	r1, .L31+8
 471 002e 3868     		ldr	r0, [r7]
 472 0030 FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 473 0034 0346     		mov	r3, r0
 474 0036 FB73     		strb	r3, [r7, #15]
 145:Src/main.c    ****   if (status != HAL_OK)
 475              		.loc 1 145 6
 476 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 477 003a 002B     		cmp	r3, #0
 478 003c 14D1     		bne	.L27
 146:Src/main.c    ****   {
 147:Src/main.c    ****     // Error !!!
 148:Src/main.c    ****   }
 149:Src/main.c    ****   else
 150:Src/main.c    ****   {
 151:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 479              		.loc 1 151 5
 480 003e 0122     		movs	r2, #1
 481 0040 1021     		movs	r1, #16
 482 0042 1148     		ldr	r0, .L31+12
 483 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 12


 152:Src/main.c    ****     while (!UART1_TransferComplete)
 484              		.loc 1 152 11
 485 0048 04E0     		b	.L28
 486              	.L29:
 153:Src/main.c    ****     {
 154:Src/main.c    ****       counter++;
 487              		.loc 1 154 14
 488 004a 0C4B     		ldr	r3, .L31
 489 004c 1B68     		ldr	r3, [r3]
 490 004e 0133     		adds	r3, r3, #1
 491 0050 0A4A     		ldr	r2, .L31
 492 0052 1360     		str	r3, [r2]
 493              	.L28:
 152:Src/main.c    ****     while (!UART1_TransferComplete)
 494              		.loc 1 152 12
 495 0054 0A4B     		ldr	r3, .L31+4
 496 0056 1B78     		ldrb	r3, [r3]
 497 0058 DBB2     		uxtb	r3, r3
 152:Src/main.c    ****     while (!UART1_TransferComplete)
 498              		.loc 1 152 11
 499 005a 002B     		cmp	r3, #0
 500 005c F5D0     		beq	.L29
 155:Src/main.c    ****     }
 156:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
 501              		.loc 1 156 5
 502 005e 0022     		movs	r2, #0
 503 0060 1021     		movs	r1, #16
 504 0062 0948     		ldr	r0, .L31+12
 505 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 506              	.L27:
 157:Src/main.c    ****   }
 158:Src/main.c    ****   HAL_UART_DeInit(uart);
 507              		.loc 1 158 3
 508 0068 3868     		ldr	r0, [r7]
 509 006a FFF7FEFF 		bl	HAL_UART_DeInit
 159:Src/main.c    ****   return counter;
 510              		.loc 1 159 10
 511 006e 034B     		ldr	r3, .L31
 512 0070 1B68     		ldr	r3, [r3]
 160:Src/main.c    **** }
 513              		.loc 1 160 1
 514 0072 1846     		mov	r0, r3
 515 0074 1037     		adds	r7, r7, #16
 516              	.LCFI26:
 517              		.cfi_def_cfa_offset 8
 518 0076 BD46     		mov	sp, r7
 519              	.LCFI27:
 520              		.cfi_def_cfa_register 13
 521              		@ sp needed
 522 0078 80BD     		pop	{r7, pc}
 523              	.L32:
 524 007a 00BF     		.align	2
 525              	.L31:
 526 007c 00000000 		.word	counter.8902
 527 0080 00000000 		.word	UART1_TransferComplete
 528 0084 00000000 		.word	dummy
 529 0088 00000240 		.word	1073872896
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 13


 530              		.cfi_endproc
 531              	.LFE138:
 533              		.section	.rodata
 534              		.align	2
 535              	.LC0:
 536 0000 25647C00 		.ascii	"%d|\000"
 537              		.section	.text.printResultHAL,"ax",%progbits
 538              		.align	1
 539              		.global	printResultHAL
 540              		.syntax unified
 541              		.thumb
 542              		.thumb_func
 543              		.fpu fpv4-sp-d16
 545              	printResultHAL:
 546              	.LFB139:
 161:Src/main.c    **** 
 162:Src/main.c    **** void printResultHAL(size_t *results, size_t size, UART_HandleTypeDef *uart)
 163:Src/main.c    **** {
 547              		.loc 1 163 1
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 24
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 0000 80B5     		push	{r7, lr}
 552              	.LCFI28:
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 7, -8
 555              		.cfi_offset 14, -4
 556 0002 86B0     		sub	sp, sp, #24
 557              	.LCFI29:
 558              		.cfi_def_cfa_offset 32
 559 0004 00AF     		add	r7, sp, #0
 560              	.LCFI30:
 561              		.cfi_def_cfa_register 7
 562 0006 F860     		str	r0, [r7, #12]
 563 0008 B960     		str	r1, [r7, #8]
 564 000a 7A60     		str	r2, [r7, #4]
 164:Src/main.c    ****   init_Hal_UART(uart, 9600);
 565              		.loc 1 164 3
 566 000c 4FF41651 		mov	r1, #9600
 567 0010 7868     		ldr	r0, [r7, #4]
 568 0012 FFF7FEFF 		bl	init_Hal_UART
 569              	.LBB4:
 165:Src/main.c    ****   for (size_t d = 0; d < size; d++)
 570              		.loc 1 165 15
 571 0016 0023     		movs	r3, #0
 572 0018 7B61     		str	r3, [r7, #20]
 573              		.loc 1 165 3
 574 001a 17E0     		b	.L34
 575              	.L35:
 576              	.LBB5:
 166:Src/main.c    ****   {
 167:Src/main.c    ****     static char message[10];
 168:Src/main.c    ****     sprintf(message, "%d|", results[d]);
 577              		.loc 1 168 36 discriminator 3
 578 001c 7B69     		ldr	r3, [r7, #20]
 579 001e 9B00     		lsls	r3, r3, #2
 580 0020 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 14


 581 0022 1344     		add	r3, r3, r2
 582              		.loc 1 168 5 discriminator 3
 583 0024 1B68     		ldr	r3, [r3]
 584 0026 1A46     		mov	r2, r3
 585 0028 0E49     		ldr	r1, .L36
 586 002a 0F48     		ldr	r0, .L36+4
 587 002c FFF7FEFF 		bl	sprintf
 169:Src/main.c    ****     HAL_UART_Transmit(uart, (uint8_t *)message, strlen(message), 0xffff);
 588              		.loc 1 169 49 discriminator 3
 589 0030 0D48     		ldr	r0, .L36+4
 590 0032 FFF7FEFF 		bl	strlen
 591 0036 0346     		mov	r3, r0
 592              		.loc 1 169 5 discriminator 3
 593 0038 9AB2     		uxth	r2, r3
 594 003a 4FF6FF73 		movw	r3, #65535
 595 003e 0A49     		ldr	r1, .L36+4
 596 0040 7868     		ldr	r0, [r7, #4]
 597 0042 FFF7FEFF 		bl	HAL_UART_Transmit
 598              	.LBE5:
 165:Src/main.c    ****   for (size_t d = 0; d < size; d++)
 599              		.loc 1 165 33 discriminator 3
 600 0046 7B69     		ldr	r3, [r7, #20]
 601 0048 0133     		adds	r3, r3, #1
 602 004a 7B61     		str	r3, [r7, #20]
 603              	.L34:
 165:Src/main.c    ****   for (size_t d = 0; d < size; d++)
 604              		.loc 1 165 3 discriminator 1
 605 004c 7A69     		ldr	r2, [r7, #20]
 606 004e BB68     		ldr	r3, [r7, #8]
 607 0050 9A42     		cmp	r2, r3
 608 0052 E3D3     		bcc	.L35
 609              	.LBE4:
 170:Src/main.c    ****   }
 171:Src/main.c    ****   HAL_UART_DeInit(uart);
 610              		.loc 1 171 3
 611 0054 7868     		ldr	r0, [r7, #4]
 612 0056 FFF7FEFF 		bl	HAL_UART_DeInit
 172:Src/main.c    **** }
 613              		.loc 1 172 1
 614 005a 00BF     		nop
 615 005c 1837     		adds	r7, r7, #24
 616              	.LCFI31:
 617              		.cfi_def_cfa_offset 8
 618 005e BD46     		mov	sp, r7
 619              	.LCFI32:
 620              		.cfi_def_cfa_register 13
 621              		@ sp needed
 622 0060 80BD     		pop	{r7, pc}
 623              	.L37:
 624 0062 00BF     		.align	2
 625              	.L36:
 626 0064 00000000 		.word	.LC0
 627 0068 00000000 		.word	message.8913
 628              		.cfi_endproc
 629              	.LFE139:
 631              		.section	.data.baudrates,"aw"
 632              		.align	2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 15


 635              	baudrates:
 636 0000 C0120000 		.word	4800
 637 0004 80250000 		.word	9600
 638 0008 004B0000 		.word	19200
 639 000c 00960000 		.word	38400
 640 0010 00E10000 		.word	57600
 641 0014 00C20100 		.word	115200
 642 0018 00840300 		.word	230400
 643 001c 00080700 		.word	460800
 644 0020 00100E00 		.word	921600
 645              		.section	.text.TEST_HAL,"ax",%progbits
 646              		.align	1
 647              		.global	TEST_HAL
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 651              		.fpu fpv4-sp-d16
 653              	TEST_HAL:
 654              	.LFB140:
 173:Src/main.c    **** 
 174:Src/main.c    **** static size_t baudrates[] = {
 175:Src/main.c    ****     4800, 9600, 19200, 38400, 57600, 115200, 230400, 460800, 921600};
 176:Src/main.c    **** #define TEST_COUNT (sizeof(baudrates) / sizeof(*baudrates))
 177:Src/main.c    **** #define RETRY 3
 178:Src/main.c    **** 
 179:Src/main.c    **** void TEST_HAL()
 180:Src/main.c    **** {
 655              		.loc 1 180 1
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 8
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659 0000 90B5     		push	{r4, r7, lr}
 660              	.LCFI33:
 661              		.cfi_def_cfa_offset 12
 662              		.cfi_offset 4, -12
 663              		.cfi_offset 7, -8
 664              		.cfi_offset 14, -4
 665 0002 83B0     		sub	sp, sp, #12
 666              	.LCFI34:
 667              		.cfi_def_cfa_offset 24
 668 0004 00AF     		add	r7, sp, #0
 669              	.LCFI35:
 670              		.cfi_def_cfa_register 7
 671              	.LBB6:
 181:Src/main.c    ****   static size_t results[TEST_COUNT * RETRY] = {0};
 182:Src/main.c    **** 
 183:Src/main.c    ****   for (size_t test = 0; test < TEST_COUNT; test++)
 672              		.loc 1 183 15
 673 0006 0023     		movs	r3, #0
 674 0008 7B60     		str	r3, [r7, #4]
 675              		.loc 1 183 3
 676 000a 1CE0     		b	.L39
 677              	.L42:
 678              	.LBB7:
 184:Src/main.c    ****   {
 185:Src/main.c    ****     for (size_t retry = 0; retry < RETRY; retry++)
 679              		.loc 1 185 17
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 16


 680 000c 0023     		movs	r3, #0
 681 000e 3B60     		str	r3, [r7]
 682              		.loc 1 185 5
 683 0010 13E0     		b	.L40
 684              	.L41:
 186:Src/main.c    ****     {
 187:Src/main.c    ****       //results[test * RETRY + retry] = testBaudrateHAL(baudrates[test], &huart1);
 188:Src/main.c    ****       results[test*RETRY+retry] = testBaudrate_DMA(baudrates[test],&huart1);
 685              		.loc 1 188 35 discriminator 3
 686 0012 134A     		ldr	r2, .L43
 687 0014 7B68     		ldr	r3, [r7, #4]
 688 0016 52F82300 		ldr	r0, [r2, r3, lsl #2]
 689              		.loc 1 188 19 discriminator 3
 690 001a 7A68     		ldr	r2, [r7, #4]
 691 001c 1346     		mov	r3, r2
 692 001e 5B00     		lsls	r3, r3, #1
 693 0020 1A44     		add	r2, r2, r3
 694              		.loc 1 188 25 discriminator 3
 695 0022 3B68     		ldr	r3, [r7]
 696 0024 D418     		adds	r4, r2, r3
 697              		.loc 1 188 35 discriminator 3
 698 0026 0F49     		ldr	r1, .L43+4
 699 0028 FFF7FEFF 		bl	testBaudrate_DMA
 700 002c 0346     		mov	r3, r0
 701              		.loc 1 188 33 discriminator 3
 702 002e 0E4A     		ldr	r2, .L43+8
 703 0030 42F82430 		str	r3, [r2, r4, lsl #2]
 185:Src/main.c    ****     {
 704              		.loc 1 185 48 discriminator 3
 705 0034 3B68     		ldr	r3, [r7]
 706 0036 0133     		adds	r3, r3, #1
 707 0038 3B60     		str	r3, [r7]
 708              	.L40:
 185:Src/main.c    ****     {
 709              		.loc 1 185 5 discriminator 1
 710 003a 3B68     		ldr	r3, [r7]
 711 003c 022B     		cmp	r3, #2
 712 003e E8D9     		bls	.L41
 713              	.LBE7:
 183:Src/main.c    ****   {
 714              		.loc 1 183 48 discriminator 2
 715 0040 7B68     		ldr	r3, [r7, #4]
 716 0042 0133     		adds	r3, r3, #1
 717 0044 7B60     		str	r3, [r7, #4]
 718              	.L39:
 183:Src/main.c    ****   {
 719              		.loc 1 183 3 discriminator 1
 720 0046 7B68     		ldr	r3, [r7, #4]
 721 0048 082B     		cmp	r3, #8
 722 004a DFD9     		bls	.L42
 723              	.LBE6:
 189:Src/main.c    ****     }
 190:Src/main.c    ****   }
 191:Src/main.c    ****   printResultHAL(results, TEST_COUNT * RETRY, &huart1);
 724              		.loc 1 191 3
 725 004c 054A     		ldr	r2, .L43+4
 726 004e 1B21     		movs	r1, #27
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 17


 727 0050 0548     		ldr	r0, .L43+8
 728 0052 FFF7FEFF 		bl	printResultHAL
 192:Src/main.c    **** }
 729              		.loc 1 192 1
 730 0056 00BF     		nop
 731 0058 0C37     		adds	r7, r7, #12
 732              	.LCFI36:
 733              		.cfi_def_cfa_offset 12
 734 005a BD46     		mov	sp, r7
 735              	.LCFI37:
 736              		.cfi_def_cfa_register 13
 737              		@ sp needed
 738 005c 90BD     		pop	{r4, r7, pc}
 739              	.L44:
 740 005e 00BF     		.align	2
 741              	.L43:
 742 0060 00000000 		.word	baudrates
 743 0064 00000000 		.word	huart1
 744 0068 00000000 		.word	results.8920
 745              		.cfi_endproc
 746              	.LFE140:
 748              		.section	.text.main,"ax",%progbits
 749              		.align	1
 750              		.global	main
 751              		.syntax unified
 752              		.thumb
 753              		.thumb_func
 754              		.fpu fpv4-sp-d16
 756              	main:
 757              	.LFB141:
 193:Src/main.c    **** /* USER CODE END 0 */
 194:Src/main.c    **** 
 195:Src/main.c    **** /**
 196:Src/main.c    ****   * @brief  The application entry point.
 197:Src/main.c    ****   * @retval int
 198:Src/main.c    ****   */
 199:Src/main.c    **** int main(void)
 200:Src/main.c    **** {
 758              		.loc 1 200 1
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 8
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762 0000 80B5     		push	{r7, lr}
 763              	.LCFI38:
 764              		.cfi_def_cfa_offset 8
 765              		.cfi_offset 7, -8
 766              		.cfi_offset 14, -4
 767 0002 82B0     		sub	sp, sp, #8
 768              	.LCFI39:
 769              		.cfi_def_cfa_offset 16
 770 0004 00AF     		add	r7, sp, #0
 771              	.LCFI40:
 772              		.cfi_def_cfa_register 7
 201:Src/main.c    ****   /* USER CODE BEGIN 1 */
 202:Src/main.c    **** 
 203:Src/main.c    ****   /* USER CODE END 1 */
 204:Src/main.c    **** 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 18


 205:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 206:Src/main.c    **** 
 207:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 208:Src/main.c    ****   HAL_Init();
 773              		.loc 1 208 3
 774 0006 FFF7FEFF 		bl	HAL_Init
 209:Src/main.c    **** 
 210:Src/main.c    ****   /* USER CODE BEGIN Init */
 211:Src/main.c    **** 
 212:Src/main.c    ****   /* USER CODE END Init */
 213:Src/main.c    **** 
 214:Src/main.c    ****   /* Configure the system clock */
 215:Src/main.c    ****   SystemClock_Config();
 775              		.loc 1 215 3
 776 000a FFF7FEFF 		bl	SystemClock_Config
 777              	.LBB8:
 216:Src/main.c    **** 
 217:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 218:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 778              		.loc 1 218 3
 779 000e 0023     		movs	r3, #0
 780 0010 7B60     		str	r3, [r7, #4]
 781 0012 0D4B     		ldr	r3, .L47
 782 0014 1B6B     		ldr	r3, [r3, #48]
 783 0016 0C4A     		ldr	r2, .L47
 784 0018 43F00103 		orr	r3, r3, #1
 785 001c 1363     		str	r3, [r2, #48]
 786 001e 0A4B     		ldr	r3, .L47
 787 0020 1B6B     		ldr	r3, [r3, #48]
 788 0022 03F00103 		and	r3, r3, #1
 789 0026 7B60     		str	r3, [r7, #4]
 790 0028 7B68     		ldr	r3, [r7, #4]
 791              	.LBE8:
 219:Src/main.c    ****   initGPIOA();
 792              		.loc 1 219 3
 793 002a FFF7FEFF 		bl	initGPIOA
 220:Src/main.c    ****   /* USER CODE END SysInit */
 221:Src/main.c    **** 
 222:Src/main.c    ****   /* Initialize all configured peripherals */
 223:Src/main.c    ****   MX_GPIO_Init();
 794              		.loc 1 223 3
 795 002e FFF7FEFF 		bl	MX_GPIO_Init
 224:Src/main.c    ****   MX_DMA_Init();
 796              		.loc 1 224 3
 797 0032 FFF7FEFF 		bl	MX_DMA_Init
 225:Src/main.c    ****   MX_USART1_UART_Init();
 798              		.loc 1 225 3
 799 0036 FFF7FEFF 		bl	MX_USART1_UART_Init
 226:Src/main.c    ****   /* USER CODE BEGIN 2 */
 227:Src/main.c    ****   HAL_UART_DeInit(&huart1);
 800              		.loc 1 227 3
 801 003a 0448     		ldr	r0, .L47+4
 802 003c FFF7FEFF 		bl	HAL_UART_DeInit
 228:Src/main.c    **** 
 229:Src/main.c    ****   TEST_HAL();
 803              		.loc 1 229 3
 804 0040 FFF7FEFF 		bl	TEST_HAL
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 19


 805              	.L46:
 230:Src/main.c    ****   /* USER CODE END 2 */
 231:Src/main.c    **** 
 232:Src/main.c    ****   /* Infinite loop */
 233:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 234:Src/main.c    ****   while (1)
 806              		.loc 1 234 9 discriminator 1
 807 0044 FEE7     		b	.L46
 808              	.L48:
 809 0046 00BF     		.align	2
 810              	.L47:
 811 0048 00380240 		.word	1073887232
 812 004c 00000000 		.word	huart1
 813              		.cfi_endproc
 814              	.LFE141:
 816              		.section	.text.SystemClock_Config,"ax",%progbits
 817              		.align	1
 818              		.global	SystemClock_Config
 819              		.syntax unified
 820              		.thumb
 821              		.thumb_func
 822              		.fpu fpv4-sp-d16
 824              	SystemClock_Config:
 825              	.LFB142:
 235:Src/main.c    ****   {
 236:Src/main.c    ****     /* USER CODE END WHILE */
 237:Src/main.c    **** 
 238:Src/main.c    ****     /* USER CODE BEGIN 3 */
 239:Src/main.c    ****   }
 240:Src/main.c    ****   /* USER CODE END 3 */
 241:Src/main.c    **** }
 242:Src/main.c    **** 
 243:Src/main.c    **** /**
 244:Src/main.c    ****   * @brief System Clock Configuration
 245:Src/main.c    ****   * @retval None
 246:Src/main.c    ****   */
 247:Src/main.c    **** void SystemClock_Config(void)
 248:Src/main.c    **** {
 826              		.loc 1 248 1
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 80
 829              		@ frame_needed = 1, uses_anonymous_args = 0
 830 0000 80B5     		push	{r7, lr}
 831              	.LCFI41:
 832              		.cfi_def_cfa_offset 8
 833              		.cfi_offset 7, -8
 834              		.cfi_offset 14, -4
 835 0002 94B0     		sub	sp, sp, #80
 836              	.LCFI42:
 837              		.cfi_def_cfa_offset 88
 838 0004 00AF     		add	r7, sp, #0
 839              	.LCFI43:
 840              		.cfi_def_cfa_register 7
 249:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 841              		.loc 1 249 22
 842 0006 07F12003 		add	r3, r7, #32
 843 000a 3022     		movs	r2, #48
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 20


 844 000c 0021     		movs	r1, #0
 845 000e 1846     		mov	r0, r3
 846 0010 FFF7FEFF 		bl	memset
 250:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 847              		.loc 1 250 22
 848 0014 07F10C03 		add	r3, r7, #12
 849 0018 0022     		movs	r2, #0
 850 001a 1A60     		str	r2, [r3]
 851 001c 5A60     		str	r2, [r3, #4]
 852 001e 9A60     		str	r2, [r3, #8]
 853 0020 DA60     		str	r2, [r3, #12]
 854 0022 1A61     		str	r2, [r3, #16]
 855              	.LBB9:
 251:Src/main.c    **** 
 252:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 253:Src/main.c    ****   */
 254:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 856              		.loc 1 254 3
 857 0024 0023     		movs	r3, #0
 858 0026 BB60     		str	r3, [r7, #8]
 859 0028 224B     		ldr	r3, .L53
 860 002a 1B6C     		ldr	r3, [r3, #64]
 861 002c 214A     		ldr	r2, .L53
 862 002e 43F08053 		orr	r3, r3, #268435456
 863 0032 1364     		str	r3, [r2, #64]
 864 0034 1F4B     		ldr	r3, .L53
 865 0036 1B6C     		ldr	r3, [r3, #64]
 866 0038 03F08053 		and	r3, r3, #268435456
 867 003c BB60     		str	r3, [r7, #8]
 868 003e BB68     		ldr	r3, [r7, #8]
 869              	.LBE9:
 870              	.LBB10:
 255:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 871              		.loc 1 255 3
 872 0040 0023     		movs	r3, #0
 873 0042 7B60     		str	r3, [r7, #4]
 874 0044 1C4B     		ldr	r3, .L53+4
 875 0046 1B68     		ldr	r3, [r3]
 876 0048 1B4A     		ldr	r2, .L53+4
 877 004a 43F48043 		orr	r3, r3, #16384
 878 004e 1360     		str	r3, [r2]
 879 0050 194B     		ldr	r3, .L53+4
 880 0052 1B68     		ldr	r3, [r3]
 881 0054 03F48043 		and	r3, r3, #16384
 882 0058 7B60     		str	r3, [r7, #4]
 883 005a 7B68     		ldr	r3, [r7, #4]
 884              	.LBE10:
 256:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 257:Src/main.c    ****   */
 258:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 885              		.loc 1 258 36
 886 005c 0223     		movs	r3, #2
 887 005e 3B62     		str	r3, [r7, #32]
 259:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 888              		.loc 1 259 30
 889 0060 0123     		movs	r3, #1
 890 0062 FB62     		str	r3, [r7, #44]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 21


 260:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 891              		.loc 1 260 41
 892 0064 1023     		movs	r3, #16
 893 0066 3B63     		str	r3, [r7, #48]
 261:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 894              		.loc 1 261 34
 895 0068 0023     		movs	r3, #0
 896 006a BB63     		str	r3, [r7, #56]
 262:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 897              		.loc 1 262 7
 898 006c 07F12003 		add	r3, r7, #32
 899 0070 1846     		mov	r0, r3
 900 0072 FFF7FEFF 		bl	HAL_RCC_OscConfig
 901 0076 0346     		mov	r3, r0
 902              		.loc 1 262 6
 903 0078 002B     		cmp	r3, #0
 904 007a 01D0     		beq	.L50
 263:Src/main.c    ****   {
 264:Src/main.c    ****     Error_Handler();
 905              		.loc 1 264 5
 906 007c FFF7FEFF 		bl	Error_Handler
 907              	.L50:
 265:Src/main.c    ****   }
 266:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 267:Src/main.c    ****   */
 268:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 908              		.loc 1 268 31
 909 0080 0F23     		movs	r3, #15
 910 0082 FB60     		str	r3, [r7, #12]
 269:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 911              		.loc 1 269 34
 912 0084 0023     		movs	r3, #0
 913 0086 3B61     		str	r3, [r7, #16]
 270:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 914              		.loc 1 270 35
 915 0088 0023     		movs	r3, #0
 916 008a 7B61     		str	r3, [r7, #20]
 271:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 917              		.loc 1 271 36
 918 008c 0023     		movs	r3, #0
 919 008e BB61     		str	r3, [r7, #24]
 272:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 920              		.loc 1 272 36
 921 0090 0023     		movs	r3, #0
 922 0092 FB61     		str	r3, [r7, #28]
 273:Src/main.c    **** 
 274:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 923              		.loc 1 274 7
 924 0094 07F10C03 		add	r3, r7, #12
 925 0098 0021     		movs	r1, #0
 926 009a 1846     		mov	r0, r3
 927 009c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 928 00a0 0346     		mov	r3, r0
 929              		.loc 1 274 6
 930 00a2 002B     		cmp	r3, #0
 931 00a4 01D0     		beq	.L52
 275:Src/main.c    ****   {
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 22


 276:Src/main.c    ****     Error_Handler();
 932              		.loc 1 276 5
 933 00a6 FFF7FEFF 		bl	Error_Handler
 934              	.L52:
 277:Src/main.c    ****   }
 278:Src/main.c    **** }
 935              		.loc 1 278 1
 936 00aa 00BF     		nop
 937 00ac 5037     		adds	r7, r7, #80
 938              	.LCFI44:
 939              		.cfi_def_cfa_offset 8
 940 00ae BD46     		mov	sp, r7
 941              	.LCFI45:
 942              		.cfi_def_cfa_register 13
 943              		@ sp needed
 944 00b0 80BD     		pop	{r7, pc}
 945              	.L54:
 946 00b2 00BF     		.align	2
 947              	.L53:
 948 00b4 00380240 		.word	1073887232
 949 00b8 00700040 		.word	1073770496
 950              		.cfi_endproc
 951              	.LFE142:
 953              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 954              		.align	1
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu fpv4-sp-d16
 960              	MX_USART1_UART_Init:
 961              	.LFB143:
 279:Src/main.c    **** 
 280:Src/main.c    **** /**
 281:Src/main.c    ****   * @brief USART1 Initialization Function
 282:Src/main.c    ****   * @param None
 283:Src/main.c    ****   * @retval None
 284:Src/main.c    ****   */
 285:Src/main.c    **** static void MX_USART1_UART_Init(void)
 286:Src/main.c    **** {
 962              		.loc 1 286 1
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966 0000 80B5     		push	{r7, lr}
 967              	.LCFI46:
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 00AF     		add	r7, sp, #0
 972              	.LCFI47:
 973              		.cfi_def_cfa_register 7
 287:Src/main.c    **** 
 288:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 289:Src/main.c    **** 
 290:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 291:Src/main.c    **** 
 292:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 23


 293:Src/main.c    **** 
 294:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 295:Src/main.c    ****   huart1.Instance = USART1;
 974              		.loc 1 295 19
 975 0004 114B     		ldr	r3, .L58
 976 0006 124A     		ldr	r2, .L58+4
 977 0008 1A60     		str	r2, [r3]
 296:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 978              		.loc 1 296 24
 979 000a 104B     		ldr	r3, .L58
 980 000c 4FF4E132 		mov	r2, #115200
 981 0010 5A60     		str	r2, [r3, #4]
 297:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 982              		.loc 1 297 26
 983 0012 0E4B     		ldr	r3, .L58
 984 0014 0022     		movs	r2, #0
 985 0016 9A60     		str	r2, [r3, #8]
 298:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 986              		.loc 1 298 24
 987 0018 0C4B     		ldr	r3, .L58
 988 001a 0022     		movs	r2, #0
 989 001c DA60     		str	r2, [r3, #12]
 299:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 990              		.loc 1 299 22
 991 001e 0B4B     		ldr	r3, .L58
 992 0020 0022     		movs	r2, #0
 993 0022 1A61     		str	r2, [r3, #16]
 300:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 994              		.loc 1 300 20
 995 0024 094B     		ldr	r3, .L58
 996 0026 0C22     		movs	r2, #12
 997 0028 5A61     		str	r2, [r3, #20]
 301:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 998              		.loc 1 301 25
 999 002a 084B     		ldr	r3, .L58
 1000 002c 0022     		movs	r2, #0
 1001 002e 9A61     		str	r2, [r3, #24]
 302:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1002              		.loc 1 302 28
 1003 0030 064B     		ldr	r3, .L58
 1004 0032 0022     		movs	r2, #0
 1005 0034 DA61     		str	r2, [r3, #28]
 303:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1006              		.loc 1 303 7
 1007 0036 0548     		ldr	r0, .L58
 1008 0038 FFF7FEFF 		bl	HAL_UART_Init
 1009 003c 0346     		mov	r3, r0
 1010              		.loc 1 303 6
 1011 003e 002B     		cmp	r3, #0
 1012 0040 01D0     		beq	.L57
 304:Src/main.c    ****   {
 305:Src/main.c    ****     Error_Handler();
 1013              		.loc 1 305 5
 1014 0042 FFF7FEFF 		bl	Error_Handler
 1015              	.L57:
 306:Src/main.c    ****   }
 307:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 24


 308:Src/main.c    **** 
 309:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 310:Src/main.c    **** }
 1016              		.loc 1 310 1
 1017 0046 00BF     		nop
 1018 0048 80BD     		pop	{r7, pc}
 1019              	.L59:
 1020 004a 00BF     		.align	2
 1021              	.L58:
 1022 004c 00000000 		.word	huart1
 1023 0050 00100140 		.word	1073811456
 1024              		.cfi_endproc
 1025              	.LFE143:
 1027              		.section	.text.MX_DMA_Init,"ax",%progbits
 1028              		.align	1
 1029              		.syntax unified
 1030              		.thumb
 1031              		.thumb_func
 1032              		.fpu fpv4-sp-d16
 1034              	MX_DMA_Init:
 1035              	.LFB144:
 311:Src/main.c    **** 
 312:Src/main.c    **** /** 
 313:Src/main.c    ****   * Enable DMA controller clock
 314:Src/main.c    ****   */
 315:Src/main.c    **** static void MX_DMA_Init(void)
 316:Src/main.c    **** {
 1036              		.loc 1 316 1
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 8
 1039              		@ frame_needed = 1, uses_anonymous_args = 0
 1040 0000 80B5     		push	{r7, lr}
 1041              	.LCFI48:
 1042              		.cfi_def_cfa_offset 8
 1043              		.cfi_offset 7, -8
 1044              		.cfi_offset 14, -4
 1045 0002 82B0     		sub	sp, sp, #8
 1046              	.LCFI49:
 1047              		.cfi_def_cfa_offset 16
 1048 0004 00AF     		add	r7, sp, #0
 1049              	.LCFI50:
 1050              		.cfi_def_cfa_register 7
 1051              	.LBB11:
 317:Src/main.c    **** 
 318:Src/main.c    ****   /* DMA controller clock enable */
 319:Src/main.c    ****   __HAL_RCC_DMA2_CLK_ENABLE();
 1052              		.loc 1 319 3
 1053 0006 0023     		movs	r3, #0
 1054 0008 7B60     		str	r3, [r7, #4]
 1055 000a 104B     		ldr	r3, .L61
 1056 000c 1B6B     		ldr	r3, [r3, #48]
 1057 000e 0F4A     		ldr	r2, .L61
 1058 0010 43F48003 		orr	r3, r3, #4194304
 1059 0014 1363     		str	r3, [r2, #48]
 1060 0016 0D4B     		ldr	r3, .L61
 1061 0018 1B6B     		ldr	r3, [r3, #48]
 1062 001a 03F48003 		and	r3, r3, #4194304
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 25


 1063 001e 7B60     		str	r3, [r7, #4]
 1064 0020 7B68     		ldr	r3, [r7, #4]
 1065              	.LBE11:
 320:Src/main.c    **** 
 321:Src/main.c    ****   /* DMA interrupt init */
 322:Src/main.c    ****   /* DMA2_Stream2_IRQn interrupt configuration */
 323:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 1066              		.loc 1 323 3
 1067 0022 0022     		movs	r2, #0
 1068 0024 0021     		movs	r1, #0
 1069 0026 3A20     		movs	r0, #58
 1070 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 324:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 1071              		.loc 1 324 3
 1072 002c 3A20     		movs	r0, #58
 1073 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 325:Src/main.c    ****   /* DMA2_Stream7_IRQn interrupt configuration */
 326:Src/main.c    ****   HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 0, 0);
 1074              		.loc 1 326 3
 1075 0032 0022     		movs	r2, #0
 1076 0034 0021     		movs	r1, #0
 1077 0036 4620     		movs	r0, #70
 1078 0038 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 327:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 1079              		.loc 1 327 3
 1080 003c 4620     		movs	r0, #70
 1081 003e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 328:Src/main.c    **** }
 1082              		.loc 1 328 1
 1083 0042 00BF     		nop
 1084 0044 0837     		adds	r7, r7, #8
 1085              	.LCFI51:
 1086              		.cfi_def_cfa_offset 8
 1087 0046 BD46     		mov	sp, r7
 1088              	.LCFI52:
 1089              		.cfi_def_cfa_register 13
 1090              		@ sp needed
 1091 0048 80BD     		pop	{r7, pc}
 1092              	.L62:
 1093 004a 00BF     		.align	2
 1094              	.L61:
 1095 004c 00380240 		.word	1073887232
 1096              		.cfi_endproc
 1097              	.LFE144:
 1099              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1100              		.align	1
 1101              		.syntax unified
 1102              		.thumb
 1103              		.thumb_func
 1104              		.fpu fpv4-sp-d16
 1106              	MX_GPIO_Init:
 1107              	.LFB145:
 329:Src/main.c    **** 
 330:Src/main.c    **** /**
 331:Src/main.c    ****   * @brief GPIO Initialization Function
 332:Src/main.c    ****   * @param None
 333:Src/main.c    ****   * @retval None
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 26


 334:Src/main.c    ****   */
 335:Src/main.c    **** static void MX_GPIO_Init(void)
 336:Src/main.c    **** {
 1108              		.loc 1 336 1
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 8
 1111              		@ frame_needed = 1, uses_anonymous_args = 0
 1112              		@ link register save eliminated.
 1113 0000 80B4     		push	{r7}
 1114              	.LCFI53:
 1115              		.cfi_def_cfa_offset 4
 1116              		.cfi_offset 7, -4
 1117 0002 83B0     		sub	sp, sp, #12
 1118              	.LCFI54:
 1119              		.cfi_def_cfa_offset 16
 1120 0004 00AF     		add	r7, sp, #0
 1121              	.LCFI55:
 1122              		.cfi_def_cfa_register 7
 1123              	.LBB12:
 337:Src/main.c    **** 
 338:Src/main.c    ****   /* GPIO Ports Clock Enable */
 339:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1124              		.loc 1 339 3
 1125 0006 0023     		movs	r3, #0
 1126 0008 7B60     		str	r3, [r7, #4]
 1127 000a 094B     		ldr	r3, .L64
 1128 000c 1B6B     		ldr	r3, [r3, #48]
 1129 000e 084A     		ldr	r2, .L64
 1130 0010 43F00103 		orr	r3, r3, #1
 1131 0014 1363     		str	r3, [r2, #48]
 1132 0016 064B     		ldr	r3, .L64
 1133 0018 1B6B     		ldr	r3, [r3, #48]
 1134 001a 03F00103 		and	r3, r3, #1
 1135 001e 7B60     		str	r3, [r7, #4]
 1136 0020 7B68     		ldr	r3, [r7, #4]
 1137              	.LBE12:
 340:Src/main.c    **** }
 1138              		.loc 1 340 1
 1139 0022 00BF     		nop
 1140 0024 0C37     		adds	r7, r7, #12
 1141              	.LCFI56:
 1142              		.cfi_def_cfa_offset 4
 1143 0026 BD46     		mov	sp, r7
 1144              	.LCFI57:
 1145              		.cfi_def_cfa_register 13
 1146              		@ sp needed
 1147 0028 5DF8047B 		ldr	r7, [sp], #4
 1148              	.LCFI58:
 1149              		.cfi_restore 7
 1150              		.cfi_def_cfa_offset 0
 1151 002c 7047     		bx	lr
 1152              	.L65:
 1153 002e 00BF     		.align	2
 1154              	.L64:
 1155 0030 00380240 		.word	1073887232
 1156              		.cfi_endproc
 1157              	.LFE145:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 27


 1159              		.section	.text.Error_Handler,"ax",%progbits
 1160              		.align	1
 1161              		.global	Error_Handler
 1162              		.syntax unified
 1163              		.thumb
 1164              		.thumb_func
 1165              		.fpu fpv4-sp-d16
 1167              	Error_Handler:
 1168              	.LFB146:
 341:Src/main.c    **** 
 342:Src/main.c    **** /* USER CODE BEGIN 4 */
 343:Src/main.c    **** 
 344:Src/main.c    **** /* USER CODE END 4 */
 345:Src/main.c    **** 
 346:Src/main.c    **** /**
 347:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 348:Src/main.c    ****   * @retval None
 349:Src/main.c    ****   */
 350:Src/main.c    **** void Error_Handler(void)
 351:Src/main.c    **** {
 1169              		.loc 1 351 1
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 1, uses_anonymous_args = 0
 1173              		@ link register save eliminated.
 1174 0000 80B4     		push	{r7}
 1175              	.LCFI59:
 1176              		.cfi_def_cfa_offset 4
 1177              		.cfi_offset 7, -4
 1178 0002 00AF     		add	r7, sp, #0
 1179              	.LCFI60:
 1180              		.cfi_def_cfa_register 7
 352:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 353:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 354:Src/main.c    **** 
 355:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 356:Src/main.c    **** }
 1181              		.loc 1 356 1
 1182 0004 00BF     		nop
 1183 0006 BD46     		mov	sp, r7
 1184              	.LCFI61:
 1185              		.cfi_def_cfa_register 13
 1186              		@ sp needed
 1187 0008 5DF8047B 		ldr	r7, [sp], #4
 1188              	.LCFI62:
 1189              		.cfi_restore 7
 1190              		.cfi_def_cfa_offset 0
 1191 000c 7047     		bx	lr
 1192              		.cfi_endproc
 1193              	.LFE146:
 1195              		.section	.bss.outputPins.8873,"aw",%nobits
 1196              		.align	2
 1199              	outputPins.8873:
 1200 0000 00000000 		.space	20
 1200      00000000 
 1200      00000000 
 1200      00000000 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 28


 1200      00000000 
 1201              		.section	.bss.counter.8893,"aw",%nobits
 1202              		.align	2
 1205              	counter.8893:
 1206 0000 00000000 		.space	4
 1207              		.section	.bss.counter.8902,"aw",%nobits
 1208              		.align	2
 1211              	counter.8902:
 1212 0000 00000000 		.space	4
 1213              		.section	.bss.message.8913,"aw",%nobits
 1214              		.align	2
 1217              	message.8913:
 1218 0000 00000000 		.space	10
 1218      00000000 
 1218      0000
 1219              		.section	.bss.results.8920,"aw",%nobits
 1220              		.align	2
 1223              	results.8920:
 1224 0000 00000000 		.space	108
 1224      00000000 
 1224      00000000 
 1224      00000000 
 1224      00000000 
 1225              		.text
 1226              	.Letext0:
 1227              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 1228              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 1229              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1230              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1231              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1232              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi
 1233              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1234              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1235              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1236              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1237              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1238              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1239              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1240              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 1241              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 1242              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
                            *COM*:00000040 huart1
                            *COM*:00000060 hdma_usart1_tx
                            *COM*:00000060 hdma_usart1_rx
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:21     .text.init_Hal_UART:00000000 $t
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:29     .text.init_Hal_UART:00000000 init_Hal_UART
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1167   .text.Error_Handler:00000000 Error_Handler
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:104    .text.init_Hal_UART:00000054 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:109    .text.initGPIOA:00000000 $t
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:116    .text.initGPIOA:00000000 initGPIOA
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:156    .text.initGPIOA:00000028 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1199   .bss.outputPins.8873:00000000 outputPins.8873
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:162    .bss.dummy:00000000 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:165    .bss.dummy:00000000 dummy
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:168    .text.randomizeData:00000000 $t
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:175    .text.randomizeData:00000000 randomizeData
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:249    .text.randomizeData:00000050 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:257    .bss.UART1_TransferComplete:00000000 UART1_TransferComplete
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:258    .bss.UART1_TransferComplete:00000000 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:260    .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:267    .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:312    .text.HAL_UART_TxCpltCallback:00000024 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:318    .text.testBaudrateHAL:00000000 $t
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:325    .text.testBaudrateHAL:00000000 testBaudrateHAL
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:418    .text.testBaudrateHAL:0000007c $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1205   .bss.counter.8893:00000000 counter.8893
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:426    .text.testBaudrate_DMA:00000000 $t
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:433    .text.testBaudrate_DMA:00000000 testBaudrate_DMA
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:526    .text.testBaudrate_DMA:0000007c $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1211   .bss.counter.8902:00000000 counter.8902
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:534    .rodata:00000000 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:538    .text.printResultHAL:00000000 $t
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:545    .text.printResultHAL:00000000 printResultHAL
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:626    .text.printResultHAL:00000064 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1217   .bss.message.8913:00000000 message.8913
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:632    .data.baudrates:00000000 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:635    .data.baudrates:00000000 baudrates
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:646    .text.TEST_HAL:00000000 $t
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:653    .text.TEST_HAL:00000000 TEST_HAL
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:742    .text.TEST_HAL:00000060 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1223   .bss.results.8920:00000000 results.8920
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:749    .text.main:00000000 $t
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:756    .text.main:00000000 main
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:824    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1106   .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1034   .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:960    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:811    .text.main:00000048 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:817    .text.SystemClock_Config:00000000 $t
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:948    .text.SystemClock_Config:000000b4 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:954    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1022   .text.MX_USART1_UART_Init:0000004c $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1028   .text.MX_DMA_Init:00000000 $t
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1095   .text.MX_DMA_Init:0000004c $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1100   .text.MX_GPIO_Init:00000000 $t
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1155   .text.MX_GPIO_Init:00000030 $d
ARM GAS  C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s 			page 30


C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1160   .text.Error_Handler:00000000 $t
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1196   .bss.outputPins.8873:00000000 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1202   .bss.counter.8893:00000000 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1208   .bss.counter.8902:00000000 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1214   .bss.message.8913:00000000 $d
C:\Users\Robert\AppData\Local\Temp\ccsYQdNr.s:1220   .bss.results.8920:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
HAL_GPIO_Init
rand
HAL_UART_Transmit_IT
HAL_GPIO_WritePin
HAL_UART_DeInit
HAL_UART_Transmit_DMA
sprintf
strlen
HAL_UART_Transmit
HAL_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
