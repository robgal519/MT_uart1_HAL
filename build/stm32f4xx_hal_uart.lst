ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_UART_Init:
  27              	.LFB130:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure these UART pins (TX as alternate function pull-up, RX as alternate func
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx stream.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx stream.
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ##### Callback registration #####
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ==================================
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and a pointer to the user callback function.
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     weak (surcharged) function.
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and the Callback ID.
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function allows to reset following callbacks:
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =============================================
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------------------|---------------------------------------|
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * All rights reserved.</center></h2>
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     procedures (details for the procedures are available in reference manual
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (RM0430 for STM32F4X3xx MCUs and RM0402 for STM32F412xx MCUs
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0383 for STM32F411xC/E MCUs and RM0401 for STM32F410xx MCUs
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0090 for STM32F4X5xx/STM32F4X7xx/STM32F429xx/STM32F439xx MCUs
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0390 for STM32F446xx MCUs and RM0386 for STM32F469xx/STM32F479xx MCUs)).
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 7


 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  29              		.loc 1 318 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
  45              		.loc 1 320 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
  49              		.loc 1 322 12
  50 000e 0123     		movs	r3, #1
  51 0010 3FE0     		b	.L3
  52              	.L2:
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6.
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Except for STM32F446xx devices, that is available for USART1, USART2, USART3, USART6, UART4 
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     */
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  53              		.loc 1 341 12
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 93F83930 		ldrb	r3, [r3, #57]
  56 0018 DBB2     		uxtb	r3, r3
  57              		.loc 1 341 6
  58 001a 002B     		cmp	r3, #0
  59 001c 06D1     		bne	.L4
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 8


 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  60              		.loc 1 344 17
  61 001e 7B68     		ldr	r3, [r7, #4]
  62 0020 0022     		movs	r2, #0
  63 0022 83F83820 		strb	r2, [r3, #56]
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  64              		.loc 1 358 5
  65 0026 7868     		ldr	r0, [r7, #4]
  66 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  67              	.L4:
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  68              		.loc 1 362 17
  69 002c 7B68     		ldr	r3, [r7, #4]
  70 002e 2422     		movs	r2, #36
  71 0030 83F83920 		strb	r2, [r3, #57]
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  72              		.loc 1 365 3
  73 0034 7B68     		ldr	r3, [r7, #4]
  74 0036 1B68     		ldr	r3, [r3]
  75 0038 DA68     		ldr	r2, [r3, #12]
  76 003a 7B68     		ldr	r3, [r7, #4]
  77 003c 1B68     		ldr	r3, [r3]
  78 003e 22F40052 		bic	r2, r2, #8192
  79 0042 DA60     		str	r2, [r3, #12]
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
  80              		.loc 1 368 3
  81 0044 7868     		ldr	r0, [r7, #4]
  82 0046 FFF7FEFF 		bl	UART_SetConfig
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  83              		.loc 1 373 3
  84 004a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 9


  85 004c 1B68     		ldr	r3, [r3]
  86 004e 1A69     		ldr	r2, [r3, #16]
  87 0050 7B68     		ldr	r3, [r7, #4]
  88 0052 1B68     		ldr	r3, [r3]
  89 0054 22F49042 		bic	r2, r2, #18432
  90 0058 1A61     		str	r2, [r3, #16]
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
  91              		.loc 1 374 3
  92 005a 7B68     		ldr	r3, [r7, #4]
  93 005c 1B68     		ldr	r3, [r3]
  94 005e 5A69     		ldr	r2, [r3, #20]
  95 0060 7B68     		ldr	r3, [r7, #4]
  96 0062 1B68     		ldr	r3, [r3]
  97 0064 22F02A02 		bic	r2, r2, #42
  98 0068 5A61     		str	r2, [r3, #20]
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
  99              		.loc 1 377 3
 100 006a 7B68     		ldr	r3, [r7, #4]
 101 006c 1B68     		ldr	r3, [r3]
 102 006e DA68     		ldr	r2, [r3, #12]
 103 0070 7B68     		ldr	r3, [r7, #4]
 104 0072 1B68     		ldr	r3, [r3]
 105 0074 42F40052 		orr	r2, r2, #8192
 106 0078 DA60     		str	r2, [r3, #12]
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 107              		.loc 1 380 20
 108 007a 7B68     		ldr	r3, [r7, #4]
 109 007c 0022     		movs	r2, #0
 110 007e DA63     		str	r2, [r3, #60]
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 111              		.loc 1 381 17
 112 0080 7B68     		ldr	r3, [r7, #4]
 113 0082 2022     		movs	r2, #32
 114 0084 83F83920 		strb	r2, [r3, #57]
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 115              		.loc 1 382 18
 116 0088 7B68     		ldr	r3, [r7, #4]
 117 008a 2022     		movs	r2, #32
 118 008c 83F83A20 		strb	r2, [r3, #58]
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 119              		.loc 1 384 10
 120 0090 0023     		movs	r3, #0
 121              	.L3:
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 122              		.loc 1 385 1
 123 0092 1846     		mov	r0, r3
 124 0094 0837     		adds	r7, r7, #8
 125              	.LCFI3:
 126              		.cfi_def_cfa_offset 8
 127 0096 BD46     		mov	sp, r7
 128              	.LCFI4:
 129              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 10


 130              		@ sp needed
 131 0098 80BD     		pop	{r7, pc}
 132              		.cfi_endproc
 133              	.LFE130:
 135              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 136              		.align	1
 137              		.global	HAL_HalfDuplex_Init
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	HAL_HalfDuplex_Init:
 144              	.LFB131:
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 145              		.loc 1 395 1
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              	.LCFI5:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 82B0     		sub	sp, sp, #8
 155              	.LCFI6:
 156              		.cfi_def_cfa_offset 16
 157 0004 00AF     		add	r7, sp, #0
 158              	.LCFI7:
 159              		.cfi_def_cfa_register 7
 160 0006 7860     		str	r0, [r7, #4]
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 161              		.loc 1 397 6
 162 0008 7B68     		ldr	r3, [r7, #4]
 163 000a 002B     		cmp	r3, #0
 164 000c 01D1     		bne	.L6
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 165              		.loc 1 399 12
 166 000e 0123     		movs	r3, #1
 167 0010 47E0     		b	.L7
 168              	.L6:
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 11


 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 169              		.loc 1 407 12
 170 0012 7B68     		ldr	r3, [r7, #4]
 171 0014 93F83930 		ldrb	r3, [r3, #57]
 172 0018 DBB2     		uxtb	r3, r3
 173              		.loc 1 407 6
 174 001a 002B     		cmp	r3, #0
 175 001c 06D1     		bne	.L8
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 176              		.loc 1 410 17
 177 001e 7B68     		ldr	r3, [r7, #4]
 178 0020 0022     		movs	r2, #0
 179 0022 83F83820 		strb	r2, [r3, #56]
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 180              		.loc 1 424 5
 181 0026 7868     		ldr	r0, [r7, #4]
 182 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 183              	.L8:
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 184              		.loc 1 428 17
 185 002c 7B68     		ldr	r3, [r7, #4]
 186 002e 2422     		movs	r2, #36
 187 0030 83F83920 		strb	r2, [r3, #57]
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 188              		.loc 1 431 3
 189 0034 7B68     		ldr	r3, [r7, #4]
 190 0036 1B68     		ldr	r3, [r3]
 191 0038 DA68     		ldr	r2, [r3, #12]
 192 003a 7B68     		ldr	r3, [r7, #4]
 193 003c 1B68     		ldr	r3, [r3]
 194 003e 22F40052 		bic	r2, r2, #8192
 195 0042 DA60     		str	r2, [r3, #12]
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 196              		.loc 1 434 3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 12


 197 0044 7868     		ldr	r0, [r7, #4]
 198 0046 FFF7FEFF 		bl	UART_SetConfig
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 199              		.loc 1 439 3
 200 004a 7B68     		ldr	r3, [r7, #4]
 201 004c 1B68     		ldr	r3, [r3]
 202 004e 1A69     		ldr	r2, [r3, #16]
 203 0050 7B68     		ldr	r3, [r7, #4]
 204 0052 1B68     		ldr	r3, [r3]
 205 0054 22F49042 		bic	r2, r2, #18432
 206 0058 1A61     		str	r2, [r3, #16]
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 207              		.loc 1 440 3
 208 005a 7B68     		ldr	r3, [r7, #4]
 209 005c 1B68     		ldr	r3, [r3]
 210 005e 5A69     		ldr	r2, [r3, #20]
 211 0060 7B68     		ldr	r3, [r7, #4]
 212 0062 1B68     		ldr	r3, [r3]
 213 0064 22F02202 		bic	r2, r2, #34
 214 0068 5A61     		str	r2, [r3, #20]
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 215              		.loc 1 443 3
 216 006a 7B68     		ldr	r3, [r7, #4]
 217 006c 1B68     		ldr	r3, [r3]
 218 006e 5A69     		ldr	r2, [r3, #20]
 219 0070 7B68     		ldr	r3, [r7, #4]
 220 0072 1B68     		ldr	r3, [r3]
 221 0074 42F00802 		orr	r2, r2, #8
 222 0078 5A61     		str	r2, [r3, #20]
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 223              		.loc 1 446 3
 224 007a 7B68     		ldr	r3, [r7, #4]
 225 007c 1B68     		ldr	r3, [r3]
 226 007e DA68     		ldr	r2, [r3, #12]
 227 0080 7B68     		ldr	r3, [r7, #4]
 228 0082 1B68     		ldr	r3, [r3]
 229 0084 42F40052 		orr	r2, r2, #8192
 230 0088 DA60     		str	r2, [r3, #12]
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 231              		.loc 1 449 20
 232 008a 7B68     		ldr	r3, [r7, #4]
 233 008c 0022     		movs	r2, #0
 234 008e DA63     		str	r2, [r3, #60]
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 235              		.loc 1 450 17
 236 0090 7B68     		ldr	r3, [r7, #4]
 237 0092 2022     		movs	r2, #32
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 13


 238 0094 83F83920 		strb	r2, [r3, #57]
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 239              		.loc 1 451 18
 240 0098 7B68     		ldr	r3, [r7, #4]
 241 009a 2022     		movs	r2, #32
 242 009c 83F83A20 		strb	r2, [r3, #58]
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 243              		.loc 1 453 10
 244 00a0 0023     		movs	r3, #0
 245              	.L7:
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 246              		.loc 1 454 1
 247 00a2 1846     		mov	r0, r3
 248 00a4 0837     		adds	r7, r7, #8
 249              	.LCFI8:
 250              		.cfi_def_cfa_offset 8
 251 00a6 BD46     		mov	sp, r7
 252              	.LCFI9:
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 00a8 80BD     		pop	{r7, pc}
 256              		.cfi_endproc
 257              	.LFE131:
 259              		.section	.text.HAL_LIN_Init,"ax",%progbits
 260              		.align	1
 261              		.global	HAL_LIN_Init
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	HAL_LIN_Init:
 268              	.LFB132:
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 269              		.loc 1 468 1
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 8
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273 0000 80B5     		push	{r7, lr}
 274              	.LCFI10:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 278 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 14


 279              	.LCFI11:
 280              		.cfi_def_cfa_offset 16
 281 0004 00AF     		add	r7, sp, #0
 282              	.LCFI12:
 283              		.cfi_def_cfa_register 7
 284 0006 7860     		str	r0, [r7, #4]
 285 0008 3960     		str	r1, [r7]
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 286              		.loc 1 470 6
 287 000a 7B68     		ldr	r3, [r7, #4]
 288 000c 002B     		cmp	r3, #0
 289 000e 01D1     		bne	.L10
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 290              		.loc 1 472 12
 291 0010 0123     		movs	r3, #1
 292 0012 57E0     		b	.L11
 293              	.L10:
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the LIN UART instance */
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 294              		.loc 1 483 12
 295 0014 7B68     		ldr	r3, [r7, #4]
 296 0016 93F83930 		ldrb	r3, [r3, #57]
 297 001a DBB2     		uxtb	r3, r3
 298              		.loc 1 483 6
 299 001c 002B     		cmp	r3, #0
 300 001e 06D1     		bne	.L12
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 301              		.loc 1 486 17
 302 0020 7B68     		ldr	r3, [r7, #4]
 303 0022 0022     		movs	r2, #0
 304 0024 83F83820 		strb	r2, [r3, #56]
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 15


 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 305              		.loc 1 500 5
 306 0028 7868     		ldr	r0, [r7, #4]
 307 002a FFF7FEFF 		bl	HAL_UART_MspInit
 308              	.L12:
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 309              		.loc 1 504 17
 310 002e 7B68     		ldr	r3, [r7, #4]
 311 0030 2422     		movs	r2, #36
 312 0032 83F83920 		strb	r2, [r3, #57]
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 313              		.loc 1 507 3
 314 0036 7B68     		ldr	r3, [r7, #4]
 315 0038 1B68     		ldr	r3, [r3]
 316 003a DA68     		ldr	r2, [r3, #12]
 317 003c 7B68     		ldr	r3, [r7, #4]
 318 003e 1B68     		ldr	r3, [r3]
 319 0040 22F40052 		bic	r2, r2, #8192
 320 0044 DA60     		str	r2, [r3, #12]
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 321              		.loc 1 510 3
 322 0046 7868     		ldr	r0, [r7, #4]
 323 0048 FFF7FEFF 		bl	UART_SetConfig
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 324              		.loc 1 515 3
 325 004c 7B68     		ldr	r3, [r7, #4]
 326 004e 1B68     		ldr	r3, [r3]
 327 0050 1A69     		ldr	r2, [r3, #16]
 328 0052 7B68     		ldr	r3, [r7, #4]
 329 0054 1B68     		ldr	r3, [r3]
 330 0056 22F40062 		bic	r2, r2, #2048
 331 005a 1A61     		str	r2, [r3, #16]
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 332              		.loc 1 516 3
 333 005c 7B68     		ldr	r3, [r7, #4]
 334 005e 1B68     		ldr	r3, [r3]
 335 0060 5A69     		ldr	r2, [r3, #20]
 336 0062 7B68     		ldr	r3, [r7, #4]
 337 0064 1B68     		ldr	r3, [r3]
 338 0066 22F02A02 		bic	r2, r2, #42
 339 006a 5A61     		str	r2, [r3, #20]
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 340              		.loc 1 519 3
 341 006c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 16


 342 006e 1B68     		ldr	r3, [r3]
 343 0070 1A69     		ldr	r2, [r3, #16]
 344 0072 7B68     		ldr	r3, [r7, #4]
 345 0074 1B68     		ldr	r3, [r3]
 346 0076 42F48042 		orr	r2, r2, #16384
 347 007a 1A61     		str	r2, [r3, #16]
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 348              		.loc 1 522 3
 349 007c 7B68     		ldr	r3, [r7, #4]
 350 007e 1B68     		ldr	r3, [r3]
 351 0080 1A69     		ldr	r2, [r3, #16]
 352 0082 7B68     		ldr	r3, [r7, #4]
 353 0084 1B68     		ldr	r3, [r3]
 354 0086 22F02002 		bic	r2, r2, #32
 355 008a 1A61     		str	r2, [r3, #16]
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 356              		.loc 1 523 3
 357 008c 7B68     		ldr	r3, [r7, #4]
 358 008e 1B68     		ldr	r3, [r3]
 359 0090 1969     		ldr	r1, [r3, #16]
 360 0092 7B68     		ldr	r3, [r7, #4]
 361 0094 1B68     		ldr	r3, [r3]
 362 0096 3A68     		ldr	r2, [r7]
 363 0098 0A43     		orrs	r2, r2, r1
 364 009a 1A61     		str	r2, [r3, #16]
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 365              		.loc 1 526 3
 366 009c 7B68     		ldr	r3, [r7, #4]
 367 009e 1B68     		ldr	r3, [r3]
 368 00a0 DA68     		ldr	r2, [r3, #12]
 369 00a2 7B68     		ldr	r3, [r7, #4]
 370 00a4 1B68     		ldr	r3, [r3]
 371 00a6 42F40052 		orr	r2, r2, #8192
 372 00aa DA60     		str	r2, [r3, #12]
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 373              		.loc 1 529 20
 374 00ac 7B68     		ldr	r3, [r7, #4]
 375 00ae 0022     		movs	r2, #0
 376 00b0 DA63     		str	r2, [r3, #60]
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 377              		.loc 1 530 17
 378 00b2 7B68     		ldr	r3, [r7, #4]
 379 00b4 2022     		movs	r2, #32
 380 00b6 83F83920 		strb	r2, [r3, #57]
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 381              		.loc 1 531 18
 382 00ba 7B68     		ldr	r3, [r7, #4]
 383 00bc 2022     		movs	r2, #32
 384 00be 83F83A20 		strb	r2, [r3, #58]
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 17


 385              		.loc 1 533 10
 386 00c2 0023     		movs	r3, #0
 387              	.L11:
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 388              		.loc 1 534 1
 389 00c4 1846     		mov	r0, r3
 390 00c6 0837     		adds	r7, r7, #8
 391              	.LCFI13:
 392              		.cfi_def_cfa_offset 8
 393 00c8 BD46     		mov	sp, r7
 394              	.LCFI14:
 395              		.cfi_def_cfa_register 13
 396              		@ sp needed
 397 00ca 80BD     		pop	{r7, pc}
 398              		.cfi_endproc
 399              	.LFE132:
 401              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 402              		.align	1
 403              		.global	HAL_MultiProcessor_Init
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	HAL_MultiProcessor_Init:
 410              	.LFB133:
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 411              		.loc 1 549 1
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 16
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415 0000 80B5     		push	{r7, lr}
 416              	.LCFI15:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 7, -8
 419              		.cfi_offset 14, -4
 420 0002 84B0     		sub	sp, sp, #16
 421              	.LCFI16:
 422              		.cfi_def_cfa_offset 24
 423 0004 00AF     		add	r7, sp, #0
 424              	.LCFI17:
 425              		.cfi_def_cfa_register 7
 426 0006 F860     		str	r0, [r7, #12]
 427 0008 0B46     		mov	r3, r1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 18


 428 000a 7A60     		str	r2, [r7, #4]
 429 000c FB72     		strb	r3, [r7, #11]
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 430              		.loc 1 551 6
 431 000e FB68     		ldr	r3, [r7, #12]
 432 0010 002B     		cmp	r3, #0
 433 0012 01D1     		bne	.L14
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 434              		.loc 1 553 12
 435 0014 0123     		movs	r3, #1
 436 0016 5FE0     		b	.L15
 437              	.L14:
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 438              		.loc 1 565 12
 439 0018 FB68     		ldr	r3, [r7, #12]
 440 001a 93F83930 		ldrb	r3, [r3, #57]
 441 001e DBB2     		uxtb	r3, r3
 442              		.loc 1 565 6
 443 0020 002B     		cmp	r3, #0
 444 0022 06D1     		bne	.L16
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 445              		.loc 1 568 17
 446 0024 FB68     		ldr	r3, [r7, #12]
 447 0026 0022     		movs	r2, #0
 448 0028 83F83820 		strb	r2, [r3, #56]
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 449              		.loc 1 582 5
 450 002c F868     		ldr	r0, [r7, #12]
 451 002e FFF7FEFF 		bl	HAL_UART_MspInit
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 19


 452              	.L16:
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 453              		.loc 1 586 17
 454 0032 FB68     		ldr	r3, [r7, #12]
 455 0034 2422     		movs	r2, #36
 456 0036 83F83920 		strb	r2, [r3, #57]
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 457              		.loc 1 589 3
 458 003a FB68     		ldr	r3, [r7, #12]
 459 003c 1B68     		ldr	r3, [r3]
 460 003e DA68     		ldr	r2, [r3, #12]
 461 0040 FB68     		ldr	r3, [r7, #12]
 462 0042 1B68     		ldr	r3, [r3]
 463 0044 22F40052 		bic	r2, r2, #8192
 464 0048 DA60     		str	r2, [r3, #12]
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 465              		.loc 1 592 3
 466 004a F868     		ldr	r0, [r7, #12]
 467 004c FFF7FEFF 		bl	UART_SetConfig
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 468              		.loc 1 597 3
 469 0050 FB68     		ldr	r3, [r7, #12]
 470 0052 1B68     		ldr	r3, [r3]
 471 0054 1A69     		ldr	r2, [r3, #16]
 472 0056 FB68     		ldr	r3, [r7, #12]
 473 0058 1B68     		ldr	r3, [r3]
 474 005a 22F49042 		bic	r2, r2, #18432
 475 005e 1A61     		str	r2, [r3, #16]
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 476              		.loc 1 598 3
 477 0060 FB68     		ldr	r3, [r7, #12]
 478 0062 1B68     		ldr	r3, [r3]
 479 0064 5A69     		ldr	r2, [r3, #20]
 480 0066 FB68     		ldr	r3, [r7, #12]
 481 0068 1B68     		ldr	r3, [r3]
 482 006a 22F02A02 		bic	r2, r2, #42
 483 006e 5A61     		str	r2, [r3, #20]
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 484              		.loc 1 601 3
 485 0070 FB68     		ldr	r3, [r7, #12]
 486 0072 1B68     		ldr	r3, [r3]
 487 0074 1A69     		ldr	r2, [r3, #16]
 488 0076 FB68     		ldr	r3, [r7, #12]
 489 0078 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 20


 490 007a 22F00F02 		bic	r2, r2, #15
 491 007e 1A61     		str	r2, [r3, #16]
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 492              		.loc 1 602 3
 493 0080 FB68     		ldr	r3, [r7, #12]
 494 0082 1B68     		ldr	r3, [r3]
 495 0084 1969     		ldr	r1, [r3, #16]
 496 0086 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 497 0088 FB68     		ldr	r3, [r7, #12]
 498 008a 1B68     		ldr	r3, [r3]
 499 008c 0A43     		orrs	r2, r2, r1
 500 008e 1A61     		str	r2, [r3, #16]
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 501              		.loc 1 605 3
 502 0090 FB68     		ldr	r3, [r7, #12]
 503 0092 1B68     		ldr	r3, [r3]
 504 0094 DA68     		ldr	r2, [r3, #12]
 505 0096 FB68     		ldr	r3, [r7, #12]
 506 0098 1B68     		ldr	r3, [r3]
 507 009a 22F40062 		bic	r2, r2, #2048
 508 009e DA60     		str	r2, [r3, #12]
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 509              		.loc 1 606 3
 510 00a0 FB68     		ldr	r3, [r7, #12]
 511 00a2 1B68     		ldr	r3, [r3]
 512 00a4 D968     		ldr	r1, [r3, #12]
 513 00a6 FB68     		ldr	r3, [r7, #12]
 514 00a8 1B68     		ldr	r3, [r3]
 515 00aa 7A68     		ldr	r2, [r7, #4]
 516 00ac 0A43     		orrs	r2, r2, r1
 517 00ae DA60     		str	r2, [r3, #12]
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 518              		.loc 1 609 3
 519 00b0 FB68     		ldr	r3, [r7, #12]
 520 00b2 1B68     		ldr	r3, [r3]
 521 00b4 DA68     		ldr	r2, [r3, #12]
 522 00b6 FB68     		ldr	r3, [r7, #12]
 523 00b8 1B68     		ldr	r3, [r3]
 524 00ba 42F40052 		orr	r2, r2, #8192
 525 00be DA60     		str	r2, [r3, #12]
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 526              		.loc 1 612 20
 527 00c0 FB68     		ldr	r3, [r7, #12]
 528 00c2 0022     		movs	r2, #0
 529 00c4 DA63     		str	r2, [r3, #60]
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 530              		.loc 1 613 17
 531 00c6 FB68     		ldr	r3, [r7, #12]
 532 00c8 2022     		movs	r2, #32
 533 00ca 83F83920 		strb	r2, [r3, #57]
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 21


 534              		.loc 1 614 18
 535 00ce FB68     		ldr	r3, [r7, #12]
 536 00d0 2022     		movs	r2, #32
 537 00d2 83F83A20 		strb	r2, [r3, #58]
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 538              		.loc 1 616 10
 539 00d6 0023     		movs	r3, #0
 540              	.L15:
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 541              		.loc 1 617 1
 542 00d8 1846     		mov	r0, r3
 543 00da 1037     		adds	r7, r7, #16
 544              	.LCFI18:
 545              		.cfi_def_cfa_offset 8
 546 00dc BD46     		mov	sp, r7
 547              	.LCFI19:
 548              		.cfi_def_cfa_register 13
 549              		@ sp needed
 550 00de 80BD     		pop	{r7, pc}
 551              		.cfi_endproc
 552              	.LFE133:
 554              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 555              		.align	1
 556              		.global	HAL_UART_DeInit
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 560              		.fpu fpv4-sp-d16
 562              	HAL_UART_DeInit:
 563              	.LFB134:
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 564              		.loc 1 626 1
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 8
 567              		@ frame_needed = 1, uses_anonymous_args = 0
 568 0000 80B5     		push	{r7, lr}
 569              	.LCFI20:
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 82B0     		sub	sp, sp, #8
 574              	.LCFI21:
 575              		.cfi_def_cfa_offset 16
 576 0004 00AF     		add	r7, sp, #0
 577              	.LCFI22:
 578              		.cfi_def_cfa_register 7
 579 0006 7860     		str	r0, [r7, #4]
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 22


 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 580              		.loc 1 628 6
 581 0008 7B68     		ldr	r3, [r7, #4]
 582 000a 002B     		cmp	r3, #0
 583 000c 01D1     		bne	.L18
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 584              		.loc 1 630 12
 585 000e 0123     		movs	r3, #1
 586 0010 1EE0     		b	.L19
 587              	.L18:
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 588              		.loc 1 636 17
 589 0012 7B68     		ldr	r3, [r7, #4]
 590 0014 2422     		movs	r2, #36
 591 0016 83F83920 		strb	r2, [r3, #57]
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the Peripheral */
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 592              		.loc 1 639 3
 593 001a 7B68     		ldr	r3, [r7, #4]
 594 001c 1B68     		ldr	r3, [r3]
 595 001e DA68     		ldr	r2, [r3, #12]
 596 0020 7B68     		ldr	r3, [r7, #4]
 597 0022 1B68     		ldr	r3, [r3]
 598 0024 22F40052 		bic	r2, r2, #8192
 599 0028 DA60     		str	r2, [r3, #12]
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 600              		.loc 1 650 3
 601 002a 7868     		ldr	r0, [r7, #4]
 602 002c FFF7FEFF 		bl	HAL_UART_MspDeInit
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 603              		.loc 1 653 20
 604 0030 7B68     		ldr	r3, [r7, #4]
 605 0032 0022     		movs	r2, #0
 606 0034 DA63     		str	r2, [r3, #60]
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 607              		.loc 1 654 17
 608 0036 7B68     		ldr	r3, [r7, #4]
 609 0038 0022     		movs	r2, #0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 23


 610 003a 83F83920 		strb	r2, [r3, #57]
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 611              		.loc 1 655 18
 612 003e 7B68     		ldr	r3, [r7, #4]
 613 0040 0022     		movs	r2, #0
 614 0042 83F83A20 		strb	r2, [r3, #58]
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlock */
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 615              		.loc 1 658 3
 616 0046 7B68     		ldr	r3, [r7, #4]
 617 0048 0022     		movs	r2, #0
 618 004a 83F83820 		strb	r2, [r3, #56]
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 619              		.loc 1 660 10
 620 004e 0023     		movs	r3, #0
 621              	.L19:
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 622              		.loc 1 661 1
 623 0050 1846     		mov	r0, r3
 624 0052 0837     		adds	r7, r7, #8
 625              	.LCFI23:
 626              		.cfi_def_cfa_offset 8
 627 0054 BD46     		mov	sp, r7
 628              	.LCFI24:
 629              		.cfi_def_cfa_register 13
 630              		@ sp needed
 631 0056 80BD     		pop	{r7, pc}
 632              		.cfi_endproc
 633              	.LFE134:
 635              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 636              		.align	1
 637              		.weak	HAL_UART_MspInit
 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 641              		.fpu fpv4-sp-d16
 643              	HAL_UART_MspInit:
 644              	.LFB135:
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 645              		.loc 1 670 1
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 8
 648              		@ frame_needed = 1, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650 0000 80B4     		push	{r7}
 651              	.LCFI25:
 652              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 24


 653              		.cfi_offset 7, -4
 654 0002 83B0     		sub	sp, sp, #12
 655              	.LCFI26:
 656              		.cfi_def_cfa_offset 16
 657 0004 00AF     		add	r7, sp, #0
 658              	.LCFI27:
 659              		.cfi_def_cfa_register 7
 660 0006 7860     		str	r0, [r7, #4]
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 661              		.loc 1 676 1
 662 0008 00BF     		nop
 663 000a 0C37     		adds	r7, r7, #12
 664              	.LCFI28:
 665              		.cfi_def_cfa_offset 4
 666 000c BD46     		mov	sp, r7
 667              	.LCFI29:
 668              		.cfi_def_cfa_register 13
 669              		@ sp needed
 670 000e 5DF8047B 		ldr	r7, [sp], #4
 671              	.LCFI30:
 672              		.cfi_restore 7
 673              		.cfi_def_cfa_offset 0
 674 0012 7047     		bx	lr
 675              		.cfi_endproc
 676              	.LFE135:
 678              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 679              		.align	1
 680              		.weak	HAL_UART_MspDeInit
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 684              		.fpu fpv4-sp-d16
 686              	HAL_UART_MspDeInit:
 687              	.LFB136:
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 688              		.loc 1 685 1
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 8
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693 0000 80B4     		push	{r7}
 694              	.LCFI31:
 695              		.cfi_def_cfa_offset 4
 696              		.cfi_offset 7, -4
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 25


 697 0002 83B0     		sub	sp, sp, #12
 698              	.LCFI32:
 699              		.cfi_def_cfa_offset 16
 700 0004 00AF     		add	r7, sp, #0
 701              	.LCFI33:
 702              		.cfi_def_cfa_register 7
 703 0006 7860     		str	r0, [r7, #4]
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 704              		.loc 1 691 1
 705 0008 00BF     		nop
 706 000a 0C37     		adds	r7, r7, #12
 707              	.LCFI34:
 708              		.cfi_def_cfa_offset 4
 709 000c BD46     		mov	sp, r7
 710              	.LCFI35:
 711              		.cfi_def_cfa_register 13
 712              		@ sp needed
 713 000e 5DF8047B 		ldr	r7, [sp], #4
 714              	.LCFI36:
 715              		.cfi_restore 7
 716              		.cfi_def_cfa_offset 0
 717 0012 7047     		bx	lr
 718              		.cfi_endproc
 719              	.LFE136:
 721              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 722              		.align	1
 723              		.global	HAL_UART_Transmit
 724              		.syntax unified
 725              		.thumb
 726              		.thumb_func
 727              		.fpu fpv4-sp-d16
 729              	HAL_UART_Transmit:
 730              	.LFB137:
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 26


 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 27


 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 28


 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 29


 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 30


 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            after finishing transfer.
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or DMA, these API's return the HAL status.
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            using DMA mode.
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API's are :
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort()
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Errors are handled as follows :
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 31


 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 731              		.loc 1 1025 1
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 24
 734              		@ frame_needed = 1, uses_anonymous_args = 0
 735 0000 80B5     		push	{r7, lr}
 736              	.LCFI37:
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 7, -8
 739              		.cfi_offset 14, -4
 740 0002 88B0     		sub	sp, sp, #32
 741              	.LCFI38:
 742              		.cfi_def_cfa_offset 40
 743 0004 02AF     		add	r7, sp, #8
 744              	.LCFI39:
 745              		.cfi_def_cfa 7, 32
 746 0006 F860     		str	r0, [r7, #12]
 747 0008 B960     		str	r1, [r7, #8]
 748 000a 3B60     		str	r3, [r7]
 749 000c 1346     		mov	r3, r2	@ movhi
 750 000e FB80     		strh	r3, [r7, #6]	@ movhi
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 751              		.loc 1 1027 12
 752 0010 0023     		movs	r3, #0
 753 0012 7B61     		str	r3, [r7, #20]
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 32


1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 754              		.loc 1 1030 12
 755 0014 FB68     		ldr	r3, [r7, #12]
 756 0016 93F83930 		ldrb	r3, [r3, #57]
 757 001a DBB2     		uxtb	r3, r3
 758              		.loc 1 1030 6
 759 001c 202B     		cmp	r3, #32
 760 001e 40F08380 		bne	.L23
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 761              		.loc 1 1032 8
 762 0022 BB68     		ldr	r3, [r7, #8]
 763 0024 002B     		cmp	r3, #0
 764 0026 02D0     		beq	.L24
 765              		.loc 1 1032 25 discriminator 1
 766 0028 FB88     		ldrh	r3, [r7, #6]
 767 002a 002B     		cmp	r3, #0
 768 002c 01D1     		bne	.L25
 769              	.L24:
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 770              		.loc 1 1034 15
 771 002e 0123     		movs	r3, #1
 772 0030 7BE0     		b	.L26
 773              	.L25:
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 774              		.loc 1 1038 5
 775 0032 FB68     		ldr	r3, [r7, #12]
 776 0034 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 777 0038 012B     		cmp	r3, #1
 778 003a 01D1     		bne	.L27
 779              		.loc 1 1038 5 is_stmt 0 discriminator 1
 780 003c 0223     		movs	r3, #2
 781 003e 74E0     		b	.L26
 782              	.L27:
 783              		.loc 1 1038 5 discriminator 2
 784 0040 FB68     		ldr	r3, [r7, #12]
 785 0042 0122     		movs	r2, #1
 786 0044 83F83820 		strb	r2, [r3, #56]
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 787              		.loc 1 1040 22 is_stmt 1 discriminator 2
 788 0048 FB68     		ldr	r3, [r7, #12]
 789 004a 0022     		movs	r2, #0
 790 004c DA63     		str	r2, [r3, #60]
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 791              		.loc 1 1041 19 discriminator 2
 792 004e FB68     		ldr	r3, [r7, #12]
 793 0050 2122     		movs	r2, #33
 794 0052 83F83920 		strb	r2, [r3, #57]
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 795              		.loc 1 1044 17 discriminator 2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 33


 796 0056 FFF7FEFF 		bl	HAL_GetTick
 797 005a 7861     		str	r0, [r7, #20]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 798              		.loc 1 1046 23 discriminator 2
 799 005c FB68     		ldr	r3, [r7, #12]
 800 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 801 0060 9A84     		strh	r2, [r3, #36]	@ movhi
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 802              		.loc 1 1047 24 discriminator 2
 803 0062 FB68     		ldr	r3, [r7, #12]
 804 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 805 0066 DA84     		strh	r2, [r3, #38]	@ movhi
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 806              		.loc 1 1050 5 discriminator 2
 807 0068 FB68     		ldr	r3, [r7, #12]
 808 006a 0022     		movs	r2, #0
 809 006c 83F83820 		strb	r2, [r3, #56]
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 810              		.loc 1 1052 11 discriminator 2
 811 0070 42E0     		b	.L28
 812              	.L33:
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 813              		.loc 1 1054 12
 814 0072 FB68     		ldr	r3, [r7, #12]
 815 0074 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 816 0076 9BB2     		uxth	r3, r3
 817              		.loc 1 1054 25
 818 0078 013B     		subs	r3, r3, #1
 819 007a 9AB2     		uxth	r2, r3
 820 007c FB68     		ldr	r3, [r7, #12]
 821 007e DA84     		strh	r2, [r3, #38]	@ movhi
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 822              		.loc 1 1055 22
 823 0080 FB68     		ldr	r3, [r7, #12]
 824 0082 9B68     		ldr	r3, [r3, #8]
 825              		.loc 1 1055 10
 826 0084 B3F5805F 		cmp	r3, #4096
 827 0088 22D1     		bne	.L29
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 828              		.loc 1 1057 13
 829 008a 3B68     		ldr	r3, [r7]
 830 008c 0093     		str	r3, [sp]
 831 008e 7B69     		ldr	r3, [r7, #20]
 832 0090 0022     		movs	r2, #0
 833 0092 8021     		movs	r1, #128
 834 0094 F868     		ldr	r0, [r7, #12]
 835 0096 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 836 009a 0346     		mov	r3, r0
 837              		.loc 1 1057 12
 838 009c 002B     		cmp	r3, #0
 839 009e 01D0     		beq	.L30
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 34


1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 840              		.loc 1 1059 18
 841 00a0 0323     		movs	r3, #3
 842 00a2 42E0     		b	.L26
 843              	.L30:
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
 844              		.loc 1 1061 13
 845 00a4 BB68     		ldr	r3, [r7, #8]
 846 00a6 3B61     		str	r3, [r7, #16]
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 847              		.loc 1 1062 32
 848 00a8 3B69     		ldr	r3, [r7, #16]
 849 00aa 1B88     		ldrh	r3, [r3]
 850              		.loc 1 1062 37
 851 00ac 1A46     		mov	r2, r3
 852              		.loc 1 1062 14
 853 00ae FB68     		ldr	r3, [r7, #12]
 854 00b0 1B68     		ldr	r3, [r3]
 855              		.loc 1 1062 37
 856 00b2 C2F30802 		ubfx	r2, r2, #0, #9
 857              		.loc 1 1062 29
 858 00b6 5A60     		str	r2, [r3, #4]
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 859              		.loc 1 1063 24
 860 00b8 FB68     		ldr	r3, [r7, #12]
 861 00ba 1B69     		ldr	r3, [r3, #16]
 862              		.loc 1 1063 12
 863 00bc 002B     		cmp	r3, #0
 864 00be 03D1     		bne	.L31
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
 865              		.loc 1 1065 17
 866 00c0 BB68     		ldr	r3, [r7, #8]
 867 00c2 0233     		adds	r3, r3, #2
 868 00c4 BB60     		str	r3, [r7, #8]
 869 00c6 17E0     		b	.L28
 870              	.L31:
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 1U;
 871              		.loc 1 1069 17
 872 00c8 BB68     		ldr	r3, [r7, #8]
 873 00ca 0133     		adds	r3, r3, #1
 874 00cc BB60     		str	r3, [r7, #8]
 875 00ce 13E0     		b	.L28
 876              	.L29:
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 877              		.loc 1 1074 13
 878 00d0 3B68     		ldr	r3, [r7]
 879 00d2 0093     		str	r3, [sp]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 35


 880 00d4 7B69     		ldr	r3, [r7, #20]
 881 00d6 0022     		movs	r2, #0
 882 00d8 8021     		movs	r1, #128
 883 00da F868     		ldr	r0, [r7, #12]
 884 00dc FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 885 00e0 0346     		mov	r3, r0
 886              		.loc 1 1074 12
 887 00e2 002B     		cmp	r3, #0
 888 00e4 01D0     		beq	.L32
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 889              		.loc 1 1076 18
 890 00e6 0323     		movs	r3, #3
 891 00e8 1FE0     		b	.L26
 892              	.L32:
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 893              		.loc 1 1078 38
 894 00ea BB68     		ldr	r3, [r7, #8]
 895 00ec 5A1C     		adds	r2, r3, #1
 896 00ee BA60     		str	r2, [r7, #8]
 897              		.loc 1 1078 32
 898 00f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 899              		.loc 1 1078 14
 900 00f2 FB68     		ldr	r3, [r7, #12]
 901 00f4 1B68     		ldr	r3, [r3]
 902              		.loc 1 1078 29
 903 00f6 5A60     		str	r2, [r3, #4]
 904              	.L28:
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 905              		.loc 1 1052 17
 906 00f8 FB68     		ldr	r3, [r7, #12]
 907 00fa DB8C     		ldrh	r3, [r3, #38]	@ movhi
 908 00fc 9BB2     		uxth	r3, r3
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 909              		.loc 1 1052 11
 910 00fe 002B     		cmp	r3, #0
 911 0100 B7D1     		bne	.L33
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 912              		.loc 1 1082 9
 913 0102 3B68     		ldr	r3, [r7]
 914 0104 0093     		str	r3, [sp]
 915 0106 7B69     		ldr	r3, [r7, #20]
 916 0108 0022     		movs	r2, #0
 917 010a 4021     		movs	r1, #64
 918 010c F868     		ldr	r0, [r7, #12]
 919 010e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 920 0112 0346     		mov	r3, r0
 921              		.loc 1 1082 8
 922 0114 002B     		cmp	r3, #0
 923 0116 01D0     		beq	.L34
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 924              		.loc 1 1084 14
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 36


 925 0118 0323     		movs	r3, #3
 926 011a 06E0     		b	.L26
 927              	.L34:
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 928              		.loc 1 1088 19
 929 011c FB68     		ldr	r3, [r7, #12]
 930 011e 2022     		movs	r2, #32
 931 0120 83F83920 		strb	r2, [r3, #57]
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 932              		.loc 1 1090 12
 933 0124 0023     		movs	r3, #0
 934 0126 00E0     		b	.L26
 935              	.L23:
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 936              		.loc 1 1094 12
 937 0128 0223     		movs	r3, #2
 938              	.L26:
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 939              		.loc 1 1096 1
 940 012a 1846     		mov	r0, r3
 941 012c 1837     		adds	r7, r7, #24
 942              	.LCFI40:
 943              		.cfi_def_cfa_offset 8
 944 012e BD46     		mov	sp, r7
 945              	.LCFI41:
 946              		.cfi_def_cfa_register 13
 947              		@ sp needed
 948 0130 80BD     		pop	{r7, pc}
 949              		.cfi_endproc
 950              	.LFE137:
 952              		.section	.text.HAL_UART_Receive,"ax",%progbits
 953              		.align	1
 954              		.global	HAL_UART_Receive
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu fpv4-sp-d16
 960              	HAL_UART_Receive:
 961              	.LFB138:
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 37


1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 962              		.loc 1 1111 1
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 24
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966 0000 80B5     		push	{r7, lr}
 967              	.LCFI42:
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 88B0     		sub	sp, sp, #32
 972              	.LCFI43:
 973              		.cfi_def_cfa_offset 40
 974 0004 02AF     		add	r7, sp, #8
 975              	.LCFI44:
 976              		.cfi_def_cfa 7, 32
 977 0006 F860     		str	r0, [r7, #12]
 978 0008 B960     		str	r1, [r7, #8]
 979 000a 3B60     		str	r3, [r7]
 980 000c 1346     		mov	r3, r2	@ movhi
 981 000e FB80     		strh	r3, [r7, #6]	@ movhi
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 982              		.loc 1 1113 12
 983 0010 0023     		movs	r3, #0
 984 0012 7B61     		str	r3, [r7, #20]
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 985              		.loc 1 1116 12
 986 0014 FB68     		ldr	r3, [r7, #12]
 987 0016 93F83A30 		ldrb	r3, [r3, #58]
 988 001a DBB2     		uxtb	r3, r3
 989              		.loc 1 1116 6
 990 001c 202B     		cmp	r3, #32
 991 001e 40F09080 		bne	.L36
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 992              		.loc 1 1118 8
 993 0022 BB68     		ldr	r3, [r7, #8]
 994 0024 002B     		cmp	r3, #0
 995 0026 02D0     		beq	.L37
 996              		.loc 1 1118 25 discriminator 1
 997 0028 FB88     		ldrh	r3, [r7, #6]
 998 002a 002B     		cmp	r3, #0
 999 002c 01D1     		bne	.L38
 1000              	.L37:
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 1001              		.loc 1 1120 15
 1002 002e 0123     		movs	r3, #1
 1003 0030 88E0     		b	.L39
 1004              	.L38:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 38


1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1005              		.loc 1 1124 5
 1006 0032 FB68     		ldr	r3, [r7, #12]
 1007 0034 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1008 0038 012B     		cmp	r3, #1
 1009 003a 01D1     		bne	.L40
 1010              		.loc 1 1124 5 is_stmt 0 discriminator 1
 1011 003c 0223     		movs	r3, #2
 1012 003e 81E0     		b	.L39
 1013              	.L40:
 1014              		.loc 1 1124 5 discriminator 2
 1015 0040 FB68     		ldr	r3, [r7, #12]
 1016 0042 0122     		movs	r2, #1
 1017 0044 83F83820 		strb	r2, [r3, #56]
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1018              		.loc 1 1126 22 is_stmt 1 discriminator 2
 1019 0048 FB68     		ldr	r3, [r7, #12]
 1020 004a 0022     		movs	r2, #0
 1021 004c DA63     		str	r2, [r3, #60]
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1022              		.loc 1 1127 20 discriminator 2
 1023 004e FB68     		ldr	r3, [r7, #12]
 1024 0050 2222     		movs	r2, #34
 1025 0052 83F83A20 		strb	r2, [r3, #58]
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1026              		.loc 1 1130 17 discriminator 2
 1027 0056 FFF7FEFF 		bl	HAL_GetTick
 1028 005a 7861     		str	r0, [r7, #20]
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1029              		.loc 1 1132 23 discriminator 2
 1030 005c FB68     		ldr	r3, [r7, #12]
 1031 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1032 0060 9A85     		strh	r2, [r3, #44]	@ movhi
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1033              		.loc 1 1133 24 discriminator 2
 1034 0062 FB68     		ldr	r3, [r7, #12]
 1035 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1036 0066 DA85     		strh	r2, [r3, #46]	@ movhi
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1037              		.loc 1 1136 5 discriminator 2
 1038 0068 FB68     		ldr	r3, [r7, #12]
 1039 006a 0022     		movs	r2, #0
 1040 006c 83F83820 		strb	r2, [r3, #56]
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1041              		.loc 1 1139 11 discriminator 2
 1042 0070 5CE0     		b	.L41
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 39


 1043              	.L47:
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 1044              		.loc 1 1141 12
 1045 0072 FB68     		ldr	r3, [r7, #12]
 1046 0074 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1047 0076 9BB2     		uxth	r3, r3
 1048              		.loc 1 1141 25
 1049 0078 013B     		subs	r3, r3, #1
 1050 007a 9AB2     		uxth	r2, r3
 1051 007c FB68     		ldr	r3, [r7, #12]
 1052 007e DA85     		strh	r2, [r3, #46]	@ movhi
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 1053              		.loc 1 1142 22
 1054 0080 FB68     		ldr	r3, [r7, #12]
 1055 0082 9B68     		ldr	r3, [r3, #8]
 1056              		.loc 1 1142 10
 1057 0084 B3F5805F 		cmp	r3, #4096
 1058 0088 2BD1     		bne	.L42
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
 1059              		.loc 1 1144 13
 1060 008a 3B68     		ldr	r3, [r7]
 1061 008c 0093     		str	r3, [sp]
 1062 008e 7B69     		ldr	r3, [r7, #20]
 1063 0090 0022     		movs	r2, #0
 1064 0092 2021     		movs	r1, #32
 1065 0094 F868     		ldr	r0, [r7, #12]
 1066 0096 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1067 009a 0346     		mov	r3, r0
 1068              		.loc 1 1144 12
 1069 009c 002B     		cmp	r3, #0
 1070 009e 01D0     		beq	.L43
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1071              		.loc 1 1146 18
 1072 00a0 0323     		movs	r3, #3
 1073 00a2 4FE0     		b	.L39
 1074              	.L43:
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
 1075              		.loc 1 1148 13
 1076 00a4 BB68     		ldr	r3, [r7, #8]
 1077 00a6 3B61     		str	r3, [r7, #16]
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 1078              		.loc 1 1149 24
 1079 00a8 FB68     		ldr	r3, [r7, #12]
 1080 00aa 1B69     		ldr	r3, [r3, #16]
 1081              		.loc 1 1149 12
 1082 00ac 002B     		cmp	r3, #0
 1083 00ae 0CD1     		bne	.L44
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 1084              		.loc 1 1151 34
 1085 00b0 FB68     		ldr	r3, [r7, #12]
 1086 00b2 1B68     		ldr	r3, [r3]
 1087              		.loc 1 1151 44
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 40


 1088 00b4 5B68     		ldr	r3, [r3, #4]
 1089              		.loc 1 1151 18
 1090 00b6 9BB2     		uxth	r3, r3
 1091 00b8 C3F30803 		ubfx	r3, r3, #0, #9
 1092 00bc 9AB2     		uxth	r2, r3
 1093              		.loc 1 1151 16
 1094 00be 3B69     		ldr	r3, [r7, #16]
 1095 00c0 1A80     		strh	r2, [r3]	@ movhi
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 2U;
 1096              		.loc 1 1152 17
 1097 00c2 BB68     		ldr	r3, [r7, #8]
 1098 00c4 0233     		adds	r3, r3, #2
 1099 00c6 BB60     		str	r3, [r7, #8]
 1100 00c8 30E0     		b	.L41
 1101              	.L44:
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 1102              		.loc 1 1156 34
 1103 00ca FB68     		ldr	r3, [r7, #12]
 1104 00cc 1B68     		ldr	r3, [r3]
 1105              		.loc 1 1156 44
 1106 00ce 5B68     		ldr	r3, [r3, #4]
 1107              		.loc 1 1156 18
 1108 00d0 9BB2     		uxth	r3, r3
 1109 00d2 DBB2     		uxtb	r3, r3
 1110 00d4 9AB2     		uxth	r2, r3
 1111              		.loc 1 1156 16
 1112 00d6 3B69     		ldr	r3, [r7, #16]
 1113 00d8 1A80     		strh	r2, [r3]	@ movhi
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData += 1U;
 1114              		.loc 1 1157 17
 1115 00da BB68     		ldr	r3, [r7, #8]
 1116 00dc 0133     		adds	r3, r3, #1
 1117 00de BB60     		str	r3, [r7, #8]
 1118 00e0 24E0     		b	.L41
 1119              	.L42:
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK
 1120              		.loc 1 1163 13
 1121 00e2 3B68     		ldr	r3, [r7]
 1122 00e4 0093     		str	r3, [sp]
 1123 00e6 7B69     		ldr	r3, [r7, #20]
 1124 00e8 0022     		movs	r2, #0
 1125 00ea 2021     		movs	r1, #32
 1126 00ec F868     		ldr	r0, [r7, #12]
 1127 00ee FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1128 00f2 0346     		mov	r3, r0
 1129              		.loc 1 1163 12
 1130 00f4 002B     		cmp	r3, #0
 1131 00f6 01D0     		beq	.L45
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 41


1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 1132              		.loc 1 1165 18
 1133 00f8 0323     		movs	r3, #3
 1134 00fa 23E0     		b	.L39
 1135              	.L45:
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->Init.Parity == UART_PARITY_NONE)
 1136              		.loc 1 1167 24
 1137 00fc FB68     		ldr	r3, [r7, #12]
 1138 00fe 1B69     		ldr	r3, [r3, #16]
 1139              		.loc 1 1167 12
 1140 0100 002B     		cmp	r3, #0
 1141 0102 08D1     		bne	.L46
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1142              		.loc 1 1169 37
 1143 0104 FB68     		ldr	r3, [r7, #12]
 1144 0106 1B68     		ldr	r3, [r3]
 1145              		.loc 1 1169 47
 1146 0108 5968     		ldr	r1, [r3, #4]
 1147              		.loc 1 1169 17
 1148 010a BB68     		ldr	r3, [r7, #8]
 1149 010c 5A1C     		adds	r2, r3, #1
 1150 010e BA60     		str	r2, [r7, #8]
 1151              		.loc 1 1169 22
 1152 0110 CAB2     		uxtb	r2, r1
 1153              		.loc 1 1169 20
 1154 0112 1A70     		strb	r2, [r3]
 1155 0114 0AE0     		b	.L41
 1156              	.L46:
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 1157              		.loc 1 1173 37
 1158 0116 FB68     		ldr	r3, [r7, #12]
 1159 0118 1B68     		ldr	r3, [r3]
 1160              		.loc 1 1173 47
 1161 011a 5B68     		ldr	r3, [r3, #4]
 1162              		.loc 1 1173 22
 1163 011c DAB2     		uxtb	r2, r3
 1164              		.loc 1 1173 17
 1165 011e BB68     		ldr	r3, [r7, #8]
 1166 0120 591C     		adds	r1, r3, #1
 1167 0122 B960     		str	r1, [r7, #8]
 1168              		.loc 1 1173 22
 1169 0124 02F07F02 		and	r2, r2, #127
 1170 0128 D2B2     		uxtb	r2, r2
 1171              		.loc 1 1173 20
 1172 012a 1A70     		strb	r2, [r3]
 1173              	.L41:
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1174              		.loc 1 1139 17
 1175 012c FB68     		ldr	r3, [r7, #12]
 1176 012e DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1177 0130 9BB2     		uxth	r3, r3
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 42


 1178              		.loc 1 1139 11
 1179 0132 002B     		cmp	r3, #0
 1180 0134 9DD1     		bne	.L47
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1181              		.loc 1 1180 20
 1182 0136 FB68     		ldr	r3, [r7, #12]
 1183 0138 2022     		movs	r2, #32
 1184 013a 83F83A20 		strb	r2, [r3, #58]
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1185              		.loc 1 1182 12
 1186 013e 0023     		movs	r3, #0
 1187 0140 00E0     		b	.L39
 1188              	.L36:
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1189              		.loc 1 1186 12
 1190 0142 0223     		movs	r3, #2
 1191              	.L39:
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1192              		.loc 1 1188 1
 1193 0144 1846     		mov	r0, r3
 1194 0146 1837     		adds	r7, r7, #24
 1195              	.LCFI45:
 1196              		.cfi_def_cfa_offset 8
 1197 0148 BD46     		mov	sp, r7
 1198              	.LCFI46:
 1199              		.cfi_def_cfa_register 13
 1200              		@ sp needed
 1201 014a 80BD     		pop	{r7, pc}
 1202              		.cfi_endproc
 1203              	.LFE138:
 1205              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1206              		.align	1
 1207              		.global	HAL_UART_Transmit_IT
 1208              		.syntax unified
 1209              		.thumb
 1210              		.thumb_func
 1211              		.fpu fpv4-sp-d16
 1213              	HAL_UART_Transmit_IT:
 1214              	.LFB139:
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 43


1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1215              		.loc 1 1202 1
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 16
 1218              		@ frame_needed = 1, uses_anonymous_args = 0
 1219              		@ link register save eliminated.
 1220 0000 80B4     		push	{r7}
 1221              	.LCFI47:
 1222              		.cfi_def_cfa_offset 4
 1223              		.cfi_offset 7, -4
 1224 0002 85B0     		sub	sp, sp, #20
 1225              	.LCFI48:
 1226              		.cfi_def_cfa_offset 24
 1227 0004 00AF     		add	r7, sp, #0
 1228              	.LCFI49:
 1229              		.cfi_def_cfa_register 7
 1230 0006 F860     		str	r0, [r7, #12]
 1231 0008 B960     		str	r1, [r7, #8]
 1232 000a 1346     		mov	r3, r2
 1233 000c FB80     		strh	r3, [r7, #6]	@ movhi
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1234              		.loc 1 1204 12
 1235 000e FB68     		ldr	r3, [r7, #12]
 1236 0010 93F83930 		ldrb	r3, [r3, #57]
 1237 0014 DBB2     		uxtb	r3, r3
 1238              		.loc 1 1204 6
 1239 0016 202B     		cmp	r3, #32
 1240 0018 30D1     		bne	.L49
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1241              		.loc 1 1206 8
 1242 001a BB68     		ldr	r3, [r7, #8]
 1243 001c 002B     		cmp	r3, #0
 1244 001e 02D0     		beq	.L50
 1245              		.loc 1 1206 25 discriminator 1
 1246 0020 FB88     		ldrh	r3, [r7, #6]
 1247 0022 002B     		cmp	r3, #0
 1248 0024 01D1     		bne	.L51
 1249              	.L50:
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1250              		.loc 1 1208 14
 1251 0026 0123     		movs	r3, #1
 1252 0028 29E0     		b	.L52
 1253              	.L51:
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1254              		.loc 1 1212 5
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 44


 1255 002a FB68     		ldr	r3, [r7, #12]
 1256 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1257 0030 012B     		cmp	r3, #1
 1258 0032 01D1     		bne	.L53
 1259              		.loc 1 1212 5 is_stmt 0 discriminator 1
 1260 0034 0223     		movs	r3, #2
 1261 0036 22E0     		b	.L52
 1262              	.L53:
 1263              		.loc 1 1212 5 discriminator 2
 1264 0038 FB68     		ldr	r3, [r7, #12]
 1265 003a 0122     		movs	r2, #1
 1266 003c 83F83820 		strb	r2, [r3, #56]
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1267              		.loc 1 1214 23 is_stmt 1 discriminator 2
 1268 0040 FB68     		ldr	r3, [r7, #12]
 1269 0042 BA68     		ldr	r2, [r7, #8]
 1270 0044 1A62     		str	r2, [r3, #32]
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1271              		.loc 1 1215 23 discriminator 2
 1272 0046 FB68     		ldr	r3, [r7, #12]
 1273 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1274 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1275              		.loc 1 1216 24 discriminator 2
 1276 004c FB68     		ldr	r3, [r7, #12]
 1277 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1278 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1279              		.loc 1 1218 22 discriminator 2
 1280 0052 FB68     		ldr	r3, [r7, #12]
 1281 0054 0022     		movs	r2, #0
 1282 0056 DA63     		str	r2, [r3, #60]
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1283              		.loc 1 1219 19 discriminator 2
 1284 0058 FB68     		ldr	r3, [r7, #12]
 1285 005a 2122     		movs	r2, #33
 1286 005c 83F83920 		strb	r2, [r3, #57]
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1287              		.loc 1 1222 5 discriminator 2
 1288 0060 FB68     		ldr	r3, [r7, #12]
 1289 0062 0022     		movs	r2, #0
 1290 0064 83F83820 		strb	r2, [r3, #56]
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 1291              		.loc 1 1225 5 discriminator 2
 1292 0068 FB68     		ldr	r3, [r7, #12]
 1293 006a 1B68     		ldr	r3, [r3]
 1294 006c DA68     		ldr	r2, [r3, #12]
 1295 006e FB68     		ldr	r3, [r7, #12]
 1296 0070 1B68     		ldr	r3, [r3]
 1297 0072 42F08002 		orr	r2, r2, #128
 1298 0076 DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 45


1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1299              		.loc 1 1227 12 discriminator 2
 1300 0078 0023     		movs	r3, #0
 1301 007a 00E0     		b	.L52
 1302              	.L49:
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1303              		.loc 1 1231 12
 1304 007c 0223     		movs	r3, #2
 1305              	.L52:
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1306              		.loc 1 1233 1
 1307 007e 1846     		mov	r0, r3
 1308 0080 1437     		adds	r7, r7, #20
 1309              	.LCFI50:
 1310              		.cfi_def_cfa_offset 4
 1311 0082 BD46     		mov	sp, r7
 1312              	.LCFI51:
 1313              		.cfi_def_cfa_register 13
 1314              		@ sp needed
 1315 0084 5DF8047B 		ldr	r7, [sp], #4
 1316              	.LCFI52:
 1317              		.cfi_restore 7
 1318              		.cfi_def_cfa_offset 0
 1319 0088 7047     		bx	lr
 1320              		.cfi_endproc
 1321              	.LFE139:
 1323              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1324              		.align	1
 1325              		.global	HAL_UART_Receive_IT
 1326              		.syntax unified
 1327              		.thumb
 1328              		.thumb_func
 1329              		.fpu fpv4-sp-d16
 1331              	HAL_UART_Receive_IT:
 1332              	.LFB140:
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1333              		.loc 1 1247 1
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 46


 1336              		@ frame_needed = 1, uses_anonymous_args = 0
 1337              		@ link register save eliminated.
 1338 0000 80B4     		push	{r7}
 1339              	.LCFI53:
 1340              		.cfi_def_cfa_offset 4
 1341              		.cfi_offset 7, -4
 1342 0002 85B0     		sub	sp, sp, #20
 1343              	.LCFI54:
 1344              		.cfi_def_cfa_offset 24
 1345 0004 00AF     		add	r7, sp, #0
 1346              	.LCFI55:
 1347              		.cfi_def_cfa_register 7
 1348 0006 F860     		str	r0, [r7, #12]
 1349 0008 B960     		str	r1, [r7, #8]
 1350 000a 1346     		mov	r3, r2
 1351 000c FB80     		strh	r3, [r7, #6]	@ movhi
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1352              		.loc 1 1249 12
 1353 000e FB68     		ldr	r3, [r7, #12]
 1354 0010 93F83A30 		ldrb	r3, [r3, #58]
 1355 0014 DBB2     		uxtb	r3, r3
 1356              		.loc 1 1249 6
 1357 0016 202B     		cmp	r3, #32
 1358 0018 40D1     		bne	.L55
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1359              		.loc 1 1251 8
 1360 001a BB68     		ldr	r3, [r7, #8]
 1361 001c 002B     		cmp	r3, #0
 1362 001e 02D0     		beq	.L56
 1363              		.loc 1 1251 25 discriminator 1
 1364 0020 FB88     		ldrh	r3, [r7, #6]
 1365 0022 002B     		cmp	r3, #0
 1366 0024 01D1     		bne	.L57
 1367              	.L56:
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1368              		.loc 1 1253 14
 1369 0026 0123     		movs	r3, #1
 1370 0028 39E0     		b	.L58
 1371              	.L57:
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1372              		.loc 1 1257 5
 1373 002a FB68     		ldr	r3, [r7, #12]
 1374 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1375 0030 012B     		cmp	r3, #1
 1376 0032 01D1     		bne	.L59
 1377              		.loc 1 1257 5 is_stmt 0 discriminator 1
 1378 0034 0223     		movs	r3, #2
 1379 0036 32E0     		b	.L58
 1380              	.L59:
 1381              		.loc 1 1257 5 discriminator 2
 1382 0038 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 47


 1383 003a 0122     		movs	r2, #1
 1384 003c 83F83820 		strb	r2, [r3, #56]
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1385              		.loc 1 1259 23 is_stmt 1 discriminator 2
 1386 0040 FB68     		ldr	r3, [r7, #12]
 1387 0042 BA68     		ldr	r2, [r7, #8]
 1388 0044 9A62     		str	r2, [r3, #40]
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1389              		.loc 1 1260 23 discriminator 2
 1390 0046 FB68     		ldr	r3, [r7, #12]
 1391 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1392 004a 9A85     		strh	r2, [r3, #44]	@ movhi
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1393              		.loc 1 1261 24 discriminator 2
 1394 004c FB68     		ldr	r3, [r7, #12]
 1395 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1396 0050 DA85     		strh	r2, [r3, #46]	@ movhi
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1397              		.loc 1 1263 22 discriminator 2
 1398 0052 FB68     		ldr	r3, [r7, #12]
 1399 0054 0022     		movs	r2, #0
 1400 0056 DA63     		str	r2, [r3, #60]
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1401              		.loc 1 1264 20 discriminator 2
 1402 0058 FB68     		ldr	r3, [r7, #12]
 1403 005a 2222     		movs	r2, #34
 1404 005c 83F83A20 		strb	r2, [r3, #58]
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1405              		.loc 1 1267 5 discriminator 2
 1406 0060 FB68     		ldr	r3, [r7, #12]
 1407 0062 0022     		movs	r2, #0
 1408 0064 83F83820 		strb	r2, [r3, #56]
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 1409              		.loc 1 1270 5 discriminator 2
 1410 0068 FB68     		ldr	r3, [r7, #12]
 1411 006a 1B68     		ldr	r3, [r3]
 1412 006c DA68     		ldr	r2, [r3, #12]
 1413 006e FB68     		ldr	r3, [r7, #12]
 1414 0070 1B68     		ldr	r3, [r3]
 1415 0072 42F48072 		orr	r2, r2, #256
 1416 0076 DA60     		str	r2, [r3, #12]
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 1417              		.loc 1 1273 5 discriminator 2
 1418 0078 FB68     		ldr	r3, [r7, #12]
 1419 007a 1B68     		ldr	r3, [r3]
 1420 007c 5A69     		ldr	r2, [r3, #20]
 1421 007e FB68     		ldr	r3, [r7, #12]
 1422 0080 1B68     		ldr	r3, [r3]
 1423 0082 42F00102 		orr	r2, r2, #1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 48


 1424 0086 5A61     		str	r2, [r3, #20]
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 1425              		.loc 1 1276 5 discriminator 2
 1426 0088 FB68     		ldr	r3, [r7, #12]
 1427 008a 1B68     		ldr	r3, [r3]
 1428 008c DA68     		ldr	r2, [r3, #12]
 1429 008e FB68     		ldr	r3, [r7, #12]
 1430 0090 1B68     		ldr	r3, [r3]
 1431 0092 42F02002 		orr	r2, r2, #32
 1432 0096 DA60     		str	r2, [r3, #12]
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1433              		.loc 1 1278 12 discriminator 2
 1434 0098 0023     		movs	r3, #0
 1435 009a 00E0     		b	.L58
 1436              	.L55:
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1437              		.loc 1 1282 12
 1438 009c 0223     		movs	r3, #2
 1439              	.L58:
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1440              		.loc 1 1284 1
 1441 009e 1846     		mov	r0, r3
 1442 00a0 1437     		adds	r7, r7, #20
 1443              	.LCFI56:
 1444              		.cfi_def_cfa_offset 4
 1445 00a2 BD46     		mov	sp, r7
 1446              	.LCFI57:
 1447              		.cfi_def_cfa_register 13
 1448              		@ sp needed
 1449 00a4 5DF8047B 		ldr	r7, [sp], #4
 1450              	.LCFI58:
 1451              		.cfi_restore 7
 1452              		.cfi_def_cfa_offset 0
 1453 00a8 7047     		bx	lr
 1454              		.cfi_endproc
 1455              	.LFE140:
 1457              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1458              		.align	1
 1459              		.global	HAL_UART_Transmit_DMA
 1460              		.syntax unified
 1461              		.thumb
 1462              		.thumb_func
 1463              		.fpu fpv4-sp-d16
 1465              	HAL_UART_Transmit_DMA:
 1466              	.LFB141:
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in DMA mode.
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 49


1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1467              		.loc 1 1298 1
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 24
 1470              		@ frame_needed = 1, uses_anonymous_args = 0
 1471 0000 80B5     		push	{r7, lr}
 1472              	.LCFI59:
 1473              		.cfi_def_cfa_offset 8
 1474              		.cfi_offset 7, -8
 1475              		.cfi_offset 14, -4
 1476 0002 86B0     		sub	sp, sp, #24
 1477              	.LCFI60:
 1478              		.cfi_def_cfa_offset 32
 1479 0004 00AF     		add	r7, sp, #0
 1480              	.LCFI61:
 1481              		.cfi_def_cfa_register 7
 1482 0006 F860     		str	r0, [r7, #12]
 1483 0008 B960     		str	r1, [r7, #8]
 1484 000a 1346     		mov	r3, r2
 1485 000c FB80     		strh	r3, [r7, #6]	@ movhi
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1486              		.loc 1 1302 12
 1487 000e FB68     		ldr	r3, [r7, #12]
 1488 0010 93F83930 		ldrb	r3, [r3, #57]
 1489 0014 DBB2     		uxtb	r3, r3
 1490              		.loc 1 1302 6
 1491 0016 202B     		cmp	r3, #32
 1492 0018 53D1     		bne	.L61
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1493              		.loc 1 1304 16
 1494 001a BB68     		ldr	r3, [r7, #8]
 1495              		.loc 1 1304 8
 1496 001c 002B     		cmp	r3, #0
 1497 001e 02D0     		beq	.L62
 1498              		.loc 1 1304 25 discriminator 1
 1499 0020 FB88     		ldrh	r3, [r7, #6]
 1500 0022 002B     		cmp	r3, #0
 1501 0024 01D1     		bne	.L63
 1502              	.L62:
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1503              		.loc 1 1306 14
 1504 0026 0123     		movs	r3, #1
 1505 0028 4CE0     		b	.L64
 1506              	.L63:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 50


1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1507              		.loc 1 1310 5
 1508 002a FB68     		ldr	r3, [r7, #12]
 1509 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1510 0030 012B     		cmp	r3, #1
 1511 0032 01D1     		bne	.L65
 1512              		.loc 1 1310 5 is_stmt 0 discriminator 1
 1513 0034 0223     		movs	r3, #2
 1514 0036 45E0     		b	.L64
 1515              	.L65:
 1516              		.loc 1 1310 5 discriminator 2
 1517 0038 FB68     		ldr	r3, [r7, #12]
 1518 003a 0122     		movs	r2, #1
 1519 003c 83F83820 		strb	r2, [r3, #56]
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1520              		.loc 1 1312 23 is_stmt 1 discriminator 2
 1521 0040 BA68     		ldr	r2, [r7, #8]
 1522 0042 FB68     		ldr	r3, [r7, #12]
 1523 0044 1A62     		str	r2, [r3, #32]
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1524              		.loc 1 1313 23 discriminator 2
 1525 0046 FB68     		ldr	r3, [r7, #12]
 1526 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1527 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1528              		.loc 1 1314 24 discriminator 2
 1529 004c FB68     		ldr	r3, [r7, #12]
 1530 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1531 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1532              		.loc 1 1316 22 discriminator 2
 1533 0052 FB68     		ldr	r3, [r7, #12]
 1534 0054 0022     		movs	r2, #0
 1535 0056 DA63     		str	r2, [r3, #60]
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1536              		.loc 1 1317 19 discriminator 2
 1537 0058 FB68     		ldr	r3, [r7, #12]
 1538 005a 2122     		movs	r2, #33
 1539 005c 83F83920 		strb	r2, [r3, #57]
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1540              		.loc 1 1320 10 discriminator 2
 1541 0060 FB68     		ldr	r3, [r7, #12]
 1542 0062 1B6B     		ldr	r3, [r3, #48]
 1543              		.loc 1 1320 37 discriminator 2
 1544 0064 194A     		ldr	r2, .L66
 1545 0066 DA63     		str	r2, [r3, #60]
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1546              		.loc 1 1323 10 discriminator 2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 51


 1547 0068 FB68     		ldr	r3, [r7, #12]
 1548 006a 1B6B     		ldr	r3, [r3, #48]
 1549              		.loc 1 1323 41 discriminator 2
 1550 006c 184A     		ldr	r2, .L66+4
 1551 006e 1A64     		str	r2, [r3, #64]
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1552              		.loc 1 1326 10 discriminator 2
 1553 0070 FB68     		ldr	r3, [r7, #12]
 1554 0072 1B6B     		ldr	r3, [r3, #48]
 1555              		.loc 1 1326 38 discriminator 2
 1556 0074 174A     		ldr	r2, .L66+8
 1557 0076 DA64     		str	r2, [r3, #76]
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1558              		.loc 1 1329 10 discriminator 2
 1559 0078 FB68     		ldr	r3, [r7, #12]
 1560 007a 1B6B     		ldr	r3, [r3, #48]
 1561              		.loc 1 1329 38 discriminator 2
 1562 007c 0022     		movs	r2, #0
 1563 007e 1A65     		str	r2, [r3, #80]
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA stream */
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
 1564              		.loc 1 1332 9 discriminator 2
 1565 0080 07F10803 		add	r3, r7, #8
 1566 0084 7B61     		str	r3, [r7, #20]
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
 1567              		.loc 1 1333 5 discriminator 2
 1568 0086 FB68     		ldr	r3, [r7, #12]
 1569 0088 186B     		ldr	r0, [r3, #48]
 1570 008a 7B69     		ldr	r3, [r7, #20]
 1571 008c 1968     		ldr	r1, [r3]
 1572              		.loc 1 1333 71 discriminator 2
 1573 008e FB68     		ldr	r3, [r7, #12]
 1574 0090 1B68     		ldr	r3, [r3]
 1575              		.loc 1 1333 65 discriminator 2
 1576 0092 0433     		adds	r3, r3, #4
 1577              		.loc 1 1333 5 discriminator 2
 1578 0094 1A46     		mov	r2, r3
 1579 0096 FB88     		ldrh	r3, [r7, #6]
 1580 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 1581              		.loc 1 1336 5 discriminator 2
 1582 009c FB68     		ldr	r3, [r7, #12]
 1583 009e 1B68     		ldr	r3, [r3]
 1584 00a0 6FF04002 		mvn	r2, #64
 1585 00a4 1A60     		str	r2, [r3]
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1586              		.loc 1 1339 5 discriminator 2
 1587 00a6 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 52


 1588 00a8 0022     		movs	r2, #0
 1589 00aa 83F83820 		strb	r2, [r3, #56]
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1590              		.loc 1 1343 5 discriminator 2
 1591 00ae FB68     		ldr	r3, [r7, #12]
 1592 00b0 1B68     		ldr	r3, [r3]
 1593 00b2 5A69     		ldr	r2, [r3, #20]
 1594 00b4 FB68     		ldr	r3, [r7, #12]
 1595 00b6 1B68     		ldr	r3, [r3]
 1596 00b8 42F08002 		orr	r2, r2, #128
 1597 00bc 5A61     		str	r2, [r3, #20]
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1598              		.loc 1 1345 12 discriminator 2
 1599 00be 0023     		movs	r3, #0
 1600 00c0 00E0     		b	.L64
 1601              	.L61:
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1602              		.loc 1 1349 12
 1603 00c2 0223     		movs	r3, #2
 1604              	.L64:
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1605              		.loc 1 1351 1
 1606 00c4 1846     		mov	r0, r3
 1607 00c6 1837     		adds	r7, r7, #24
 1608              	.LCFI62:
 1609              		.cfi_def_cfa_offset 8
 1610 00c8 BD46     		mov	sp, r7
 1611              	.LCFI63:
 1612              		.cfi_def_cfa_register 13
 1613              		@ sp needed
 1614 00ca 80BD     		pop	{r7, pc}
 1615              	.L67:
 1616              		.align	2
 1617              	.L66:
 1618 00cc 00000000 		.word	UART_DMATransmitCplt
 1619 00d0 00000000 		.word	UART_DMATxHalfCplt
 1620 00d4 00000000 		.word	UART_DMAError
 1621              		.cfi_endproc
 1622              	.LFE141:
 1624              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1625              		.align	1
 1626              		.global	HAL_UART_Receive_DMA
 1627              		.syntax unified
 1628              		.thumb
 1629              		.thumb_func
 1630              		.fpu fpv4-sp-d16
 1632              	HAL_UART_Receive_DMA:
 1633              	.LFB142:
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 53


1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in DMA mode.
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1634              		.loc 1 1366 1
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 24
 1637              		@ frame_needed = 1, uses_anonymous_args = 0
 1638 0000 80B5     		push	{r7, lr}
 1639              	.LCFI64:
 1640              		.cfi_def_cfa_offset 8
 1641              		.cfi_offset 7, -8
 1642              		.cfi_offset 14, -4
 1643 0002 86B0     		sub	sp, sp, #24
 1644              	.LCFI65:
 1645              		.cfi_def_cfa_offset 32
 1646 0004 00AF     		add	r7, sp, #0
 1647              	.LCFI66:
 1648              		.cfi_def_cfa_register 7
 1649 0006 F860     		str	r0, [r7, #12]
 1650 0008 B960     		str	r1, [r7, #8]
 1651 000a 1346     		mov	r3, r2
 1652 000c FB80     		strh	r3, [r7, #6]	@ movhi
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1653              		.loc 1 1370 12
 1654 000e FB68     		ldr	r3, [r7, #12]
 1655 0010 93F83A30 		ldrb	r3, [r3, #58]
 1656 0014 DBB2     		uxtb	r3, r3
 1657              		.loc 1 1370 6
 1658 0016 202B     		cmp	r3, #32
 1659 0018 66D1     		bne	.L69
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1660              		.loc 1 1372 16
 1661 001a BB68     		ldr	r3, [r7, #8]
 1662              		.loc 1 1372 8
 1663 001c 002B     		cmp	r3, #0
 1664 001e 02D0     		beq	.L70
 1665              		.loc 1 1372 25 discriminator 1
 1666 0020 FB88     		ldrh	r3, [r7, #6]
 1667 0022 002B     		cmp	r3, #0
 1668 0024 01D1     		bne	.L71
 1669              	.L70:
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 54


1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1670              		.loc 1 1374 14
 1671 0026 0123     		movs	r3, #1
 1672 0028 5FE0     		b	.L72
 1673              	.L71:
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1674              		.loc 1 1378 5
 1675 002a FB68     		ldr	r3, [r7, #12]
 1676 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1677 0030 012B     		cmp	r3, #1
 1678 0032 01D1     		bne	.L73
 1679              		.loc 1 1378 5 is_stmt 0 discriminator 1
 1680 0034 0223     		movs	r3, #2
 1681 0036 58E0     		b	.L72
 1682              	.L73:
 1683              		.loc 1 1378 5 discriminator 2
 1684 0038 FB68     		ldr	r3, [r7, #12]
 1685 003a 0122     		movs	r2, #1
 1686 003c 83F83820 		strb	r2, [r3, #56]
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1687              		.loc 1 1380 23 is_stmt 1 discriminator 2
 1688 0040 BA68     		ldr	r2, [r7, #8]
 1689 0042 FB68     		ldr	r3, [r7, #12]
 1690 0044 9A62     		str	r2, [r3, #40]
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1691              		.loc 1 1381 23 discriminator 2
 1692 0046 FB68     		ldr	r3, [r7, #12]
 1693 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1694 004a 9A85     		strh	r2, [r3, #44]	@ movhi
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1695              		.loc 1 1383 22 discriminator 2
 1696 004c FB68     		ldr	r3, [r7, #12]
 1697 004e 0022     		movs	r2, #0
 1698 0050 DA63     		str	r2, [r3, #60]
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1699              		.loc 1 1384 20 discriminator 2
 1700 0052 FB68     		ldr	r3, [r7, #12]
 1701 0054 2222     		movs	r2, #34
 1702 0056 83F83A20 		strb	r2, [r3, #58]
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1703              		.loc 1 1387 10 discriminator 2
 1704 005a FB68     		ldr	r3, [r7, #12]
 1705 005c 5B6B     		ldr	r3, [r3, #52]
 1706              		.loc 1 1387 37 discriminator 2
 1707 005e 254A     		ldr	r2, .L74
 1708 0060 DA63     		str	r2, [r3, #60]
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1709              		.loc 1 1390 10 discriminator 2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 55


 1710 0062 FB68     		ldr	r3, [r7, #12]
 1711 0064 5B6B     		ldr	r3, [r3, #52]
 1712              		.loc 1 1390 41 discriminator 2
 1713 0066 244A     		ldr	r2, .L74+4
 1714 0068 1A64     		str	r2, [r3, #64]
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 1715              		.loc 1 1393 10 discriminator 2
 1716 006a FB68     		ldr	r3, [r7, #12]
 1717 006c 5B6B     		ldr	r3, [r3, #52]
 1718              		.loc 1 1393 38 discriminator 2
 1719 006e 234A     		ldr	r2, .L74+8
 1720 0070 DA64     		str	r2, [r3, #76]
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 1721              		.loc 1 1396 10 discriminator 2
 1722 0072 FB68     		ldr	r3, [r7, #12]
 1723 0074 5B6B     		ldr	r3, [r3, #52]
 1724              		.loc 1 1396 38 discriminator 2
 1725 0076 0022     		movs	r2, #0
 1726 0078 1A65     		str	r2, [r3, #80]
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA stream */
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
 1727              		.loc 1 1399 9 discriminator 2
 1728 007a 07F10803 		add	r3, r7, #8
 1729 007e 7B61     		str	r3, [r7, #20]
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
 1730              		.loc 1 1400 5 discriminator 2
 1731 0080 FB68     		ldr	r3, [r7, #12]
 1732 0082 586B     		ldr	r0, [r3, #52]
 1733              		.loc 1 1400 53 discriminator 2
 1734 0084 FB68     		ldr	r3, [r7, #12]
 1735 0086 1B68     		ldr	r3, [r3]
 1736              		.loc 1 1400 47 discriminator 2
 1737 0088 0433     		adds	r3, r3, #4
 1738              		.loc 1 1400 5 discriminator 2
 1739 008a 1946     		mov	r1, r3
 1740 008c 7B69     		ldr	r3, [r7, #20]
 1741 008e 1A68     		ldr	r2, [r3]
 1742 0090 FB88     		ldrh	r3, [r7, #6]
 1743 0092 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1744              	.LBB2:
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 1745              		.loc 1 1403 5 discriminator 2
 1746 0096 0023     		movs	r3, #0
 1747 0098 3B61     		str	r3, [r7, #16]
 1748 009a FB68     		ldr	r3, [r7, #12]
 1749 009c 1B68     		ldr	r3, [r3]
 1750 009e 1B68     		ldr	r3, [r3]
 1751 00a0 3B61     		str	r3, [r7, #16]
 1752 00a2 FB68     		ldr	r3, [r7, #12]
 1753 00a4 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 56


 1754 00a6 5B68     		ldr	r3, [r3, #4]
 1755 00a8 3B61     		str	r3, [r7, #16]
 1756 00aa 3B69     		ldr	r3, [r7, #16]
 1757              	.LBE2:
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1758              		.loc 1 1406 5 discriminator 2
 1759 00ac FB68     		ldr	r3, [r7, #12]
 1760 00ae 0022     		movs	r2, #0
 1761 00b0 83F83820 		strb	r2, [r3, #56]
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1762              		.loc 1 1409 5 discriminator 2
 1763 00b4 FB68     		ldr	r3, [r7, #12]
 1764 00b6 1B68     		ldr	r3, [r3]
 1765 00b8 DA68     		ldr	r2, [r3, #12]
 1766 00ba FB68     		ldr	r3, [r7, #12]
 1767 00bc 1B68     		ldr	r3, [r3]
 1768 00be 42F48072 		orr	r2, r2, #256
 1769 00c2 DA60     		str	r2, [r3, #12]
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1770              		.loc 1 1412 5 discriminator 2
 1771 00c4 FB68     		ldr	r3, [r7, #12]
 1772 00c6 1B68     		ldr	r3, [r3]
 1773 00c8 5A69     		ldr	r2, [r3, #20]
 1774 00ca FB68     		ldr	r3, [r7, #12]
 1775 00cc 1B68     		ldr	r3, [r3]
 1776 00ce 42F00102 		orr	r2, r2, #1
 1777 00d2 5A61     		str	r2, [r3, #20]
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in the UART CR3 register */
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1778              		.loc 1 1416 5 discriminator 2
 1779 00d4 FB68     		ldr	r3, [r7, #12]
 1780 00d6 1B68     		ldr	r3, [r3]
 1781 00d8 5A69     		ldr	r2, [r3, #20]
 1782 00da FB68     		ldr	r3, [r7, #12]
 1783 00dc 1B68     		ldr	r3, [r3]
 1784 00de 42F04002 		orr	r2, r2, #64
 1785 00e2 5A61     		str	r2, [r3, #20]
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1786              		.loc 1 1418 12 discriminator 2
 1787 00e4 0023     		movs	r3, #0
 1788 00e6 00E0     		b	.L72
 1789              	.L69:
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1790              		.loc 1 1422 12
 1791 00e8 0223     		movs	r3, #2
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 57


 1792              	.L72:
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1793              		.loc 1 1424 1
 1794 00ea 1846     		mov	r0, r3
 1795 00ec 1837     		adds	r7, r7, #24
 1796              	.LCFI67:
 1797              		.cfi_def_cfa_offset 8
 1798 00ee BD46     		mov	sp, r7
 1799              	.LCFI68:
 1800              		.cfi_def_cfa_register 13
 1801              		@ sp needed
 1802 00f0 80BD     		pop	{r7, pc}
 1803              	.L75:
 1804 00f2 00BF     		.align	2
 1805              	.L74:
 1806 00f4 00000000 		.word	UART_DMAReceiveCplt
 1807 00f8 00000000 		.word	UART_DMARxHalfCplt
 1808 00fc 00000000 		.word	UART_DMAError
 1809              		.cfi_endproc
 1810              	.LFE142:
 1812              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1813              		.align	1
 1814              		.global	HAL_UART_DMAPause
 1815              		.syntax unified
 1816              		.thumb
 1817              		.thumb_func
 1818              		.fpu fpv4-sp-d16
 1820              	HAL_UART_DMAPause:
 1821              	.LFB143:
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1822              		.loc 1 1433 1
 1823              		.cfi_startproc
 1824              		@ args = 0, pretend = 0, frame = 16
 1825              		@ frame_needed = 1, uses_anonymous_args = 0
 1826              		@ link register save eliminated.
 1827 0000 80B4     		push	{r7}
 1828              	.LCFI69:
 1829              		.cfi_def_cfa_offset 4
 1830              		.cfi_offset 7, -4
 1831 0002 85B0     		sub	sp, sp, #20
 1832              	.LCFI70:
 1833              		.cfi_def_cfa_offset 24
 1834 0004 00AF     		add	r7, sp, #0
 1835              	.LCFI71:
 1836              		.cfi_def_cfa_register 7
 1837 0006 7860     		str	r0, [r7, #4]
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1838              		.loc 1 1434 12
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 58


 1839 0008 0023     		movs	r3, #0
 1840 000a FB60     		str	r3, [r7, #12]
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1841              		.loc 1 1437 3
 1842 000c 7B68     		ldr	r3, [r7, #4]
 1843 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1844 0012 012B     		cmp	r3, #1
 1845 0014 01D1     		bne	.L77
 1846              		.loc 1 1437 3 is_stmt 0 discriminator 1
 1847 0016 0223     		movs	r3, #2
 1848 0018 50E0     		b	.L78
 1849              	.L77:
 1850              		.loc 1 1437 3 discriminator 2
 1851 001a 7B68     		ldr	r3, [r7, #4]
 1852 001c 0122     		movs	r2, #1
 1853 001e 83F83820 		strb	r2, [r3, #56]
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1854              		.loc 1 1439 16 is_stmt 1 discriminator 2
 1855 0022 7B68     		ldr	r3, [r7, #4]
 1856 0024 1B68     		ldr	r3, [r3]
 1857 0026 5B69     		ldr	r3, [r3, #20]
 1858 0028 03F08003 		and	r3, r3, #128
 1859 002c 802B     		cmp	r3, #128
 1860 002e 0CBF     		ite	eq
 1861 0030 0123     		moveq	r3, #1
 1862 0032 0023     		movne	r3, #0
 1863 0034 DBB2     		uxtb	r3, r3
 1864              		.loc 1 1439 14 discriminator 2
 1865 0036 FB60     		str	r3, [r7, #12]
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1866              		.loc 1 1440 13 discriminator 2
 1867 0038 7B68     		ldr	r3, [r7, #4]
 1868 003a 93F83930 		ldrb	r3, [r3, #57]
 1869 003e DBB2     		uxtb	r3, r3
 1870              		.loc 1 1440 6 discriminator 2
 1871 0040 212B     		cmp	r3, #33
 1872 0042 0AD1     		bne	.L79
 1873              		.loc 1 1440 49 discriminator 1
 1874 0044 FB68     		ldr	r3, [r7, #12]
 1875 0046 002B     		cmp	r3, #0
 1876 0048 07D0     		beq	.L79
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1877              		.loc 1 1443 5
 1878 004a 7B68     		ldr	r3, [r7, #4]
 1879 004c 1B68     		ldr	r3, [r3]
 1880 004e 5A69     		ldr	r2, [r3, #20]
 1881 0050 7B68     		ldr	r3, [r7, #4]
 1882 0052 1B68     		ldr	r3, [r3]
 1883 0054 22F08002 		bic	r2, r2, #128
 1884 0058 5A61     		str	r2, [r3, #20]
 1885              	.L79:
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 59


1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 1886              		.loc 1 1446 16
 1887 005a 7B68     		ldr	r3, [r7, #4]
 1888 005c 1B68     		ldr	r3, [r3]
 1889 005e 5B69     		ldr	r3, [r3, #20]
 1890 0060 03F04003 		and	r3, r3, #64
 1891 0064 402B     		cmp	r3, #64
 1892 0066 0CBF     		ite	eq
 1893 0068 0123     		moveq	r3, #1
 1894 006a 0023     		movne	r3, #0
 1895 006c DBB2     		uxtb	r3, r3
 1896              		.loc 1 1446 14
 1897 006e FB60     		str	r3, [r7, #12]
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1898              		.loc 1 1447 13
 1899 0070 7B68     		ldr	r3, [r7, #4]
 1900 0072 93F83A30 		ldrb	r3, [r3, #58]
 1901 0076 DBB2     		uxtb	r3, r3
 1902              		.loc 1 1447 6
 1903 0078 222B     		cmp	r3, #34
 1904 007a 1AD1     		bne	.L80
 1905              		.loc 1 1447 50 discriminator 1
 1906 007c FB68     		ldr	r3, [r7, #12]
 1907 007e 002B     		cmp	r3, #0
 1908 0080 17D0     		beq	.L80
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1909              		.loc 1 1450 5
 1910 0082 7B68     		ldr	r3, [r7, #4]
 1911 0084 1B68     		ldr	r3, [r3]
 1912 0086 DA68     		ldr	r2, [r3, #12]
 1913 0088 7B68     		ldr	r3, [r7, #4]
 1914 008a 1B68     		ldr	r3, [r3]
 1915 008c 22F48072 		bic	r2, r2, #256
 1916 0090 DA60     		str	r2, [r3, #12]
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1917              		.loc 1 1451 5
 1918 0092 7B68     		ldr	r3, [r7, #4]
 1919 0094 1B68     		ldr	r3, [r3]
 1920 0096 5A69     		ldr	r2, [r3, #20]
 1921 0098 7B68     		ldr	r3, [r7, #4]
 1922 009a 1B68     		ldr	r3, [r3]
 1923 009c 22F00102 		bic	r2, r2, #1
 1924 00a0 5A61     		str	r2, [r3, #20]
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1925              		.loc 1 1454 5
 1926 00a2 7B68     		ldr	r3, [r7, #4]
 1927 00a4 1B68     		ldr	r3, [r3]
 1928 00a6 5A69     		ldr	r2, [r3, #20]
 1929 00a8 7B68     		ldr	r3, [r7, #4]
 1930 00aa 1B68     		ldr	r3, [r3]
 1931 00ac 22F04002 		bic	r2, r2, #64
 1932 00b0 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 60


 1933              	.L80:
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1934              		.loc 1 1458 3
 1935 00b2 7B68     		ldr	r3, [r7, #4]
 1936 00b4 0022     		movs	r2, #0
 1937 00b6 83F83820 		strb	r2, [r3, #56]
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 1938              		.loc 1 1460 10
 1939 00ba 0023     		movs	r3, #0
 1940              	.L78:
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1941              		.loc 1 1461 1
 1942 00bc 1846     		mov	r0, r3
 1943 00be 1437     		adds	r7, r7, #20
 1944              	.LCFI72:
 1945              		.cfi_def_cfa_offset 4
 1946 00c0 BD46     		mov	sp, r7
 1947              	.LCFI73:
 1948              		.cfi_def_cfa_register 13
 1949              		@ sp needed
 1950 00c2 5DF8047B 		ldr	r7, [sp], #4
 1951              	.LCFI74:
 1952              		.cfi_restore 7
 1953              		.cfi_def_cfa_offset 0
 1954 00c6 7047     		bx	lr
 1955              		.cfi_endproc
 1956              	.LFE143:
 1958              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1959              		.align	1
 1960              		.global	HAL_UART_DMAResume
 1961              		.syntax unified
 1962              		.thumb
 1963              		.thumb_func
 1964              		.fpu fpv4-sp-d16
 1966              	HAL_UART_DMAResume:
 1967              	.LFB144:
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1968              		.loc 1 1470 1
 1969              		.cfi_startproc
 1970              		@ args = 0, pretend = 0, frame = 16
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972              		@ link register save eliminated.
 1973 0000 80B4     		push	{r7}
 1974              	.LCFI75:
 1975              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 61


 1976              		.cfi_offset 7, -4
 1977 0002 85B0     		sub	sp, sp, #20
 1978              	.LCFI76:
 1979              		.cfi_def_cfa_offset 24
 1980 0004 00AF     		add	r7, sp, #0
 1981              	.LCFI77:
 1982              		.cfi_def_cfa_register 7
 1983 0006 7860     		str	r0, [r7, #4]
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1984              		.loc 1 1472 3
 1985 0008 7B68     		ldr	r3, [r7, #4]
 1986 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1987 000e 012B     		cmp	r3, #1
 1988 0010 01D1     		bne	.L82
 1989              		.loc 1 1472 3 is_stmt 0 discriminator 1
 1990 0012 0223     		movs	r3, #2
 1991 0014 3FE0     		b	.L83
 1992              	.L82:
 1993              		.loc 1 1472 3 discriminator 2
 1994 0016 7B68     		ldr	r3, [r7, #4]
 1995 0018 0122     		movs	r2, #1
 1996 001a 83F83820 		strb	r2, [r3, #56]
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 1997              		.loc 1 1474 12 is_stmt 1 discriminator 2
 1998 001e 7B68     		ldr	r3, [r7, #4]
 1999 0020 93F83930 		ldrb	r3, [r3, #57]
 2000 0024 DBB2     		uxtb	r3, r3
 2001              		.loc 1 1474 6 discriminator 2
 2002 0026 212B     		cmp	r3, #33
 2003 0028 07D1     		bne	.L84
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2004              		.loc 1 1477 5
 2005 002a 7B68     		ldr	r3, [r7, #4]
 2006 002c 1B68     		ldr	r3, [r3]
 2007 002e 5A69     		ldr	r2, [r3, #20]
 2008 0030 7B68     		ldr	r3, [r7, #4]
 2009 0032 1B68     		ldr	r3, [r3]
 2010 0034 42F08002 		orr	r2, r2, #128
 2011 0038 5A61     		str	r2, [r3, #20]
 2012              	.L84:
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2013              		.loc 1 1480 12
 2014 003a 7B68     		ldr	r3, [r7, #4]
 2015 003c 93F83A30 		ldrb	r3, [r3, #58]
 2016 0040 DBB2     		uxtb	r3, r3
 2017              		.loc 1 1480 6
 2018 0042 222B     		cmp	r3, #34
 2019 0044 22D1     		bne	.L85
 2020              	.LBB3:
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 62


1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 2021              		.loc 1 1483 5
 2022 0046 0023     		movs	r3, #0
 2023 0048 FB60     		str	r3, [r7, #12]
 2024 004a 7B68     		ldr	r3, [r7, #4]
 2025 004c 1B68     		ldr	r3, [r3]
 2026 004e 1B68     		ldr	r3, [r3]
 2027 0050 FB60     		str	r3, [r7, #12]
 2028 0052 7B68     		ldr	r3, [r7, #4]
 2029 0054 1B68     		ldr	r3, [r3]
 2030 0056 5B68     		ldr	r3, [r3, #4]
 2031 0058 FB60     		str	r3, [r7, #12]
 2032 005a FB68     		ldr	r3, [r7, #12]
 2033              	.LBE3:
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2034              		.loc 1 1486 5
 2035 005c 7B68     		ldr	r3, [r7, #4]
 2036 005e 1B68     		ldr	r3, [r3]
 2037 0060 DA68     		ldr	r2, [r3, #12]
 2038 0062 7B68     		ldr	r3, [r7, #4]
 2039 0064 1B68     		ldr	r3, [r3]
 2040 0066 42F48072 		orr	r2, r2, #256
 2041 006a DA60     		str	r2, [r3, #12]
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2042              		.loc 1 1487 5
 2043 006c 7B68     		ldr	r3, [r7, #4]
 2044 006e 1B68     		ldr	r3, [r3]
 2045 0070 5A69     		ldr	r2, [r3, #20]
 2046 0072 7B68     		ldr	r3, [r7, #4]
 2047 0074 1B68     		ldr	r3, [r3]
 2048 0076 42F00102 		orr	r2, r2, #1
 2049 007a 5A61     		str	r2, [r3, #20]
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2050              		.loc 1 1490 5
 2051 007c 7B68     		ldr	r3, [r7, #4]
 2052 007e 1B68     		ldr	r3, [r3]
 2053 0080 5A69     		ldr	r2, [r3, #20]
 2054 0082 7B68     		ldr	r3, [r7, #4]
 2055 0084 1B68     		ldr	r3, [r3]
 2056 0086 42F04002 		orr	r2, r2, #64
 2057 008a 5A61     		str	r2, [r3, #20]
 2058              	.L85:
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2059              		.loc 1 1494 3
 2060 008c 7B68     		ldr	r3, [r7, #4]
 2061 008e 0022     		movs	r2, #0
 2062 0090 83F83820 		strb	r2, [r3, #56]
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2063              		.loc 1 1496 10
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 63


 2064 0094 0023     		movs	r3, #0
 2065              	.L83:
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2066              		.loc 1 1497 1
 2067 0096 1846     		mov	r0, r3
 2068 0098 1437     		adds	r7, r7, #20
 2069              	.LCFI78:
 2070              		.cfi_def_cfa_offset 4
 2071 009a BD46     		mov	sp, r7
 2072              	.LCFI79:
 2073              		.cfi_def_cfa_register 13
 2074              		@ sp needed
 2075 009c 5DF8047B 		ldr	r7, [sp], #4
 2076              	.LCFI80:
 2077              		.cfi_restore 7
 2078              		.cfi_def_cfa_offset 0
 2079 00a0 7047     		bx	lr
 2080              		.cfi_endproc
 2081              	.LFE144:
 2083              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2084              		.align	1
 2085              		.global	HAL_UART_DMAStop
 2086              		.syntax unified
 2087              		.thumb
 2088              		.thumb_func
 2089              		.fpu fpv4-sp-d16
 2091              	HAL_UART_DMAStop:
 2092              	.LFB145:
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2093              		.loc 1 1506 1
 2094              		.cfi_startproc
 2095              		@ args = 0, pretend = 0, frame = 16
 2096              		@ frame_needed = 1, uses_anonymous_args = 0
 2097 0000 80B5     		push	{r7, lr}
 2098              	.LCFI81:
 2099              		.cfi_def_cfa_offset 8
 2100              		.cfi_offset 7, -8
 2101              		.cfi_offset 14, -4
 2102 0002 84B0     		sub	sp, sp, #16
 2103              	.LCFI82:
 2104              		.cfi_def_cfa_offset 24
 2105 0004 00AF     		add	r7, sp, #0
 2106              	.LCFI83:
 2107              		.cfi_def_cfa_register 7
 2108 0006 7860     		str	r0, [r7, #4]
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2109              		.loc 1 1507 12
 2110 0008 0023     		movs	r3, #0
 2111 000a FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 64


1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2112              		.loc 1 1515 16
 2113 000c 7B68     		ldr	r3, [r7, #4]
 2114 000e 1B68     		ldr	r3, [r3]
 2115 0010 5B69     		ldr	r3, [r3, #20]
 2116 0012 03F08003 		and	r3, r3, #128
 2117 0016 802B     		cmp	r3, #128
 2118 0018 0CBF     		ite	eq
 2119 001a 0123     		moveq	r3, #1
 2120 001c 0023     		movne	r3, #0
 2121 001e DBB2     		uxtb	r3, r3
 2122              		.loc 1 1515 14
 2123 0020 FB60     		str	r3, [r7, #12]
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2124              		.loc 1 1516 13
 2125 0022 7B68     		ldr	r3, [r7, #4]
 2126 0024 93F83930 		ldrb	r3, [r3, #57]
 2127 0028 DBB2     		uxtb	r3, r3
 2128              		.loc 1 1516 6
 2129 002a 212B     		cmp	r3, #33
 2130 002c 16D1     		bne	.L87
 2131              		.loc 1 1516 49 discriminator 1
 2132 002e FB68     		ldr	r3, [r7, #12]
 2133 0030 002B     		cmp	r3, #0
 2134 0032 13D0     		beq	.L87
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2135              		.loc 1 1518 5
 2136 0034 7B68     		ldr	r3, [r7, #4]
 2137 0036 1B68     		ldr	r3, [r3]
 2138 0038 5A69     		ldr	r2, [r3, #20]
 2139 003a 7B68     		ldr	r3, [r7, #4]
 2140 003c 1B68     		ldr	r3, [r3]
 2141 003e 22F08002 		bic	r2, r2, #128
 2142 0042 5A61     		str	r2, [r3, #20]
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream */
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2143              		.loc 1 1521 14
 2144 0044 7B68     		ldr	r3, [r7, #4]
 2145 0046 1B6B     		ldr	r3, [r3, #48]
 2146              		.loc 1 1521 8
 2147 0048 002B     		cmp	r3, #0
 2148 004a 04D0     		beq	.L88
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2149              		.loc 1 1523 7
 2150 004c 7B68     		ldr	r3, [r7, #4]
 2151 004e 1B6B     		ldr	r3, [r3, #48]
 2152 0050 1846     		mov	r0, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 65


 2153 0052 FFF7FEFF 		bl	HAL_DMA_Abort
 2154              	.L88:
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2155              		.loc 1 1525 5
 2156 0056 7868     		ldr	r0, [r7, #4]
 2157 0058 FFF7FEFF 		bl	UART_EndTxTransfer
 2158              	.L87:
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2159              		.loc 1 1529 16
 2160 005c 7B68     		ldr	r3, [r7, #4]
 2161 005e 1B68     		ldr	r3, [r3]
 2162 0060 5B69     		ldr	r3, [r3, #20]
 2163 0062 03F04003 		and	r3, r3, #64
 2164 0066 402B     		cmp	r3, #64
 2165 0068 0CBF     		ite	eq
 2166 006a 0123     		moveq	r3, #1
 2167 006c 0023     		movne	r3, #0
 2168 006e DBB2     		uxtb	r3, r3
 2169              		.loc 1 1529 14
 2170 0070 FB60     		str	r3, [r7, #12]
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2171              		.loc 1 1530 13
 2172 0072 7B68     		ldr	r3, [r7, #4]
 2173 0074 93F83A30 		ldrb	r3, [r3, #58]
 2174 0078 DBB2     		uxtb	r3, r3
 2175              		.loc 1 1530 6
 2176 007a 222B     		cmp	r3, #34
 2177 007c 16D1     		bne	.L89
 2178              		.loc 1 1530 50 discriminator 1
 2179 007e FB68     		ldr	r3, [r7, #12]
 2180 0080 002B     		cmp	r3, #0
 2181 0082 13D0     		beq	.L89
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2182              		.loc 1 1532 5
 2183 0084 7B68     		ldr	r3, [r7, #4]
 2184 0086 1B68     		ldr	r3, [r3]
 2185 0088 5A69     		ldr	r2, [r3, #20]
 2186 008a 7B68     		ldr	r3, [r7, #4]
 2187 008c 1B68     		ldr	r3, [r3]
 2188 008e 22F04002 		bic	r2, r2, #64
 2189 0092 5A61     		str	r2, [r3, #20]
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream */
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2190              		.loc 1 1535 14
 2191 0094 7B68     		ldr	r3, [r7, #4]
 2192 0096 5B6B     		ldr	r3, [r3, #52]
 2193              		.loc 1 1535 8
 2194 0098 002B     		cmp	r3, #0
 2195 009a 04D0     		beq	.L90
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 66


 2196              		.loc 1 1537 7
 2197 009c 7B68     		ldr	r3, [r7, #4]
 2198 009e 5B6B     		ldr	r3, [r3, #52]
 2199 00a0 1846     		mov	r0, r3
 2200 00a2 FFF7FEFF 		bl	HAL_DMA_Abort
 2201              	.L90:
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2202              		.loc 1 1539 5
 2203 00a6 7868     		ldr	r0, [r7, #4]
 2204 00a8 FFF7FEFF 		bl	UART_EndRxTransfer
 2205              	.L89:
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2206              		.loc 1 1542 10
 2207 00ac 0023     		movs	r3, #0
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2208              		.loc 1 1543 1
 2209 00ae 1846     		mov	r0, r3
 2210 00b0 1037     		adds	r7, r7, #16
 2211              	.LCFI84:
 2212              		.cfi_def_cfa_offset 8
 2213 00b2 BD46     		mov	sp, r7
 2214              	.LCFI85:
 2215              		.cfi_def_cfa_register 13
 2216              		@ sp needed
 2217 00b4 80BD     		pop	{r7, pc}
 2218              		.cfi_endproc
 2219              	.LFE145:
 2221              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2222              		.align	1
 2223              		.global	HAL_UART_Abort
 2224              		.syntax unified
 2225              		.thumb
 2226              		.thumb_func
 2227              		.fpu fpv4-sp-d16
 2229              	HAL_UART_Abort:
 2230              	.LFB146:
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2231              		.loc 1 1558 1
 2232              		.cfi_startproc
 2233              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 67


 2234              		@ frame_needed = 1, uses_anonymous_args = 0
 2235 0000 80B5     		push	{r7, lr}
 2236              	.LCFI86:
 2237              		.cfi_def_cfa_offset 8
 2238              		.cfi_offset 7, -8
 2239              		.cfi_offset 14, -4
 2240 0002 82B0     		sub	sp, sp, #8
 2241              	.LCFI87:
 2242              		.cfi_def_cfa_offset 16
 2243 0004 00AF     		add	r7, sp, #0
 2244              	.LCFI88:
 2245              		.cfi_def_cfa_register 7
 2246 0006 7860     		str	r0, [r7, #4]
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2247              		.loc 1 1560 3
 2248 0008 7B68     		ldr	r3, [r7, #4]
 2249 000a 1B68     		ldr	r3, [r3]
 2250 000c DA68     		ldr	r2, [r3, #12]
 2251 000e 7B68     		ldr	r3, [r7, #4]
 2252 0010 1B68     		ldr	r3, [r3]
 2253 0012 22F4F072 		bic	r2, r2, #480
 2254 0016 DA60     		str	r2, [r3, #12]
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2255              		.loc 1 1561 3
 2256 0018 7B68     		ldr	r3, [r7, #4]
 2257 001a 1B68     		ldr	r3, [r3]
 2258 001c 5A69     		ldr	r2, [r3, #20]
 2259 001e 7B68     		ldr	r3, [r7, #4]
 2260 0020 1B68     		ldr	r3, [r3]
 2261 0022 22F00102 		bic	r2, r2, #1
 2262 0026 5A61     		str	r2, [r3, #20]
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2263              		.loc 1 1564 7
 2264 0028 7B68     		ldr	r3, [r7, #4]
 2265 002a 1B68     		ldr	r3, [r3]
 2266 002c 5B69     		ldr	r3, [r3, #20]
 2267 002e 03F08003 		and	r3, r3, #128
 2268              		.loc 1 1564 6
 2269 0032 802B     		cmp	r3, #128
 2270 0034 24D1     		bne	.L93
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2271              		.loc 1 1566 5
 2272 0036 7B68     		ldr	r3, [r7, #4]
 2273 0038 1B68     		ldr	r3, [r3]
 2274 003a 5A69     		ldr	r2, [r3, #20]
 2275 003c 7B68     		ldr	r3, [r7, #4]
 2276 003e 1B68     		ldr	r3, [r3]
 2277 0040 22F08002 		bic	r2, r2, #128
 2278 0044 5A61     		str	r2, [r3, #20]
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream: use blocking DMA Abort API (no callback) */
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2279              		.loc 1 1569 14
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 68


 2280 0046 7B68     		ldr	r3, [r7, #4]
 2281 0048 1B6B     		ldr	r3, [r3, #48]
 2282              		.loc 1 1569 8
 2283 004a 002B     		cmp	r3, #0
 2284 004c 18D0     		beq	.L93
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2285              		.loc 1 1573 12
 2286 004e 7B68     		ldr	r3, [r7, #4]
 2287 0050 1B6B     		ldr	r3, [r3, #48]
 2288              		.loc 1 1573 40
 2289 0052 0022     		movs	r2, #0
 2290 0054 1A65     		str	r2, [r3, #80]
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2291              		.loc 1 1575 11
 2292 0056 7B68     		ldr	r3, [r7, #4]
 2293 0058 1B6B     		ldr	r3, [r3, #48]
 2294 005a 1846     		mov	r0, r3
 2295 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2296 0060 0346     		mov	r3, r0
 2297              		.loc 1 1575 10
 2298 0062 002B     		cmp	r3, #0
 2299 0064 0CD0     		beq	.L93
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2300              		.loc 1 1577 13
 2301 0066 7B68     		ldr	r3, [r7, #4]
 2302 0068 1B6B     		ldr	r3, [r3, #48]
 2303 006a 1846     		mov	r0, r3
 2304 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2305 0070 0346     		mov	r3, r0
 2306              		.loc 1 1577 12
 2307 0072 202B     		cmp	r3, #32
 2308 0074 04D1     		bne	.L93
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2309              		.loc 1 1580 28
 2310 0076 7B68     		ldr	r3, [r7, #4]
 2311 0078 1022     		movs	r2, #16
 2312 007a DA63     		str	r2, [r3, #60]
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2313              		.loc 1 1582 18
 2314 007c 0323     		movs	r3, #3
 2315 007e 3DE0     		b	.L94
 2316              	.L93:
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 69


 2317              		.loc 1 1589 7
 2318 0080 7B68     		ldr	r3, [r7, #4]
 2319 0082 1B68     		ldr	r3, [r3]
 2320 0084 5B69     		ldr	r3, [r3, #20]
 2321 0086 03F04003 		and	r3, r3, #64
 2322              		.loc 1 1589 6
 2323 008a 402B     		cmp	r3, #64
 2324 008c 24D1     		bne	.L95
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2325              		.loc 1 1591 5
 2326 008e 7B68     		ldr	r3, [r7, #4]
 2327 0090 1B68     		ldr	r3, [r3]
 2328 0092 5A69     		ldr	r2, [r3, #20]
 2329 0094 7B68     		ldr	r3, [r7, #4]
 2330 0096 1B68     		ldr	r3, [r3]
 2331 0098 22F04002 		bic	r2, r2, #64
 2332 009c 5A61     		str	r2, [r3, #20]
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream: use blocking DMA Abort API (no callback) */
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2333              		.loc 1 1594 14
 2334 009e 7B68     		ldr	r3, [r7, #4]
 2335 00a0 5B6B     		ldr	r3, [r3, #52]
 2336              		.loc 1 1594 8
 2337 00a2 002B     		cmp	r3, #0
 2338 00a4 18D0     		beq	.L95
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2339              		.loc 1 1598 12
 2340 00a6 7B68     		ldr	r3, [r7, #4]
 2341 00a8 5B6B     		ldr	r3, [r3, #52]
 2342              		.loc 1 1598 40
 2343 00aa 0022     		movs	r2, #0
 2344 00ac 1A65     		str	r2, [r3, #80]
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2345              		.loc 1 1600 11
 2346 00ae 7B68     		ldr	r3, [r7, #4]
 2347 00b0 5B6B     		ldr	r3, [r3, #52]
 2348 00b2 1846     		mov	r0, r3
 2349 00b4 FFF7FEFF 		bl	HAL_DMA_Abort
 2350 00b8 0346     		mov	r3, r0
 2351              		.loc 1 1600 10
 2352 00ba 002B     		cmp	r3, #0
 2353 00bc 0CD0     		beq	.L95
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2354              		.loc 1 1602 13
 2355 00be 7B68     		ldr	r3, [r7, #4]
 2356 00c0 5B6B     		ldr	r3, [r3, #52]
 2357 00c2 1846     		mov	r0, r3
 2358 00c4 FFF7FEFF 		bl	HAL_DMA_GetError
 2359 00c8 0346     		mov	r3, r0
 2360              		.loc 1 1602 12
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 70


 2361 00ca 202B     		cmp	r3, #32
 2362 00cc 04D1     		bne	.L95
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2363              		.loc 1 1605 28
 2364 00ce 7B68     		ldr	r3, [r7, #4]
 2365 00d0 1022     		movs	r2, #16
 2366 00d2 DA63     		str	r2, [r3, #60]
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2367              		.loc 1 1607 18
 2368 00d4 0323     		movs	r3, #3
 2369 00d6 11E0     		b	.L94
 2370              	.L95:
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2371              		.loc 1 1614 22
 2372 00d8 7B68     		ldr	r3, [r7, #4]
 2373 00da 0022     		movs	r2, #0
 2374 00dc DA84     		strh	r2, [r3, #38]	@ movhi
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2375              		.loc 1 1615 22
 2376 00de 7B68     		ldr	r3, [r7, #4]
 2377 00e0 0022     		movs	r2, #0
 2378 00e2 DA85     		strh	r2, [r3, #46]	@ movhi
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2379              		.loc 1 1618 20
 2380 00e4 7B68     		ldr	r3, [r7, #4]
 2381 00e6 0022     		movs	r2, #0
 2382 00e8 DA63     		str	r2, [r3, #60]
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2383              		.loc 1 1621 18
 2384 00ea 7B68     		ldr	r3, [r7, #4]
 2385 00ec 2022     		movs	r2, #32
 2386 00ee 83F83A20 		strb	r2, [r3, #58]
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2387              		.loc 1 1622 17
 2388 00f2 7B68     		ldr	r3, [r7, #4]
 2389 00f4 2022     		movs	r2, #32
 2390 00f6 83F83920 		strb	r2, [r3, #57]
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2391              		.loc 1 1624 10
 2392 00fa 0023     		movs	r3, #0
 2393              	.L94:
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2394              		.loc 1 1625 1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 71


 2395 00fc 1846     		mov	r0, r3
 2396 00fe 0837     		adds	r7, r7, #8
 2397              	.LCFI89:
 2398              		.cfi_def_cfa_offset 8
 2399 0100 BD46     		mov	sp, r7
 2400              	.LCFI90:
 2401              		.cfi_def_cfa_register 13
 2402              		@ sp needed
 2403 0102 80BD     		pop	{r7, pc}
 2404              		.cfi_endproc
 2405              	.LFE146:
 2407              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2408              		.align	1
 2409              		.global	HAL_UART_AbortTransmit
 2410              		.syntax unified
 2411              		.thumb
 2412              		.thumb_func
 2413              		.fpu fpv4-sp-d16
 2415              	HAL_UART_AbortTransmit:
 2416              	.LFB147:
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2417              		.loc 1 1640 1
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 8
 2420              		@ frame_needed = 1, uses_anonymous_args = 0
 2421 0000 80B5     		push	{r7, lr}
 2422              	.LCFI91:
 2423              		.cfi_def_cfa_offset 8
 2424              		.cfi_offset 7, -8
 2425              		.cfi_offset 14, -4
 2426 0002 82B0     		sub	sp, sp, #8
 2427              	.LCFI92:
 2428              		.cfi_def_cfa_offset 16
 2429 0004 00AF     		add	r7, sp, #0
 2430              	.LCFI93:
 2431              		.cfi_def_cfa_register 7
 2432 0006 7860     		str	r0, [r7, #4]
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2433              		.loc 1 1642 3
 2434 0008 7B68     		ldr	r3, [r7, #4]
 2435 000a 1B68     		ldr	r3, [r3]
 2436 000c DA68     		ldr	r2, [r3, #12]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 72


 2437 000e 7B68     		ldr	r3, [r7, #4]
 2438 0010 1B68     		ldr	r3, [r3]
 2439 0012 22F0C002 		bic	r2, r2, #192
 2440 0016 DA60     		str	r2, [r3, #12]
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2441              		.loc 1 1645 7
 2442 0018 7B68     		ldr	r3, [r7, #4]
 2443 001a 1B68     		ldr	r3, [r3]
 2444 001c 5B69     		ldr	r3, [r3, #20]
 2445 001e 03F08003 		and	r3, r3, #128
 2446              		.loc 1 1645 6
 2447 0022 802B     		cmp	r3, #128
 2448 0024 24D1     		bne	.L97
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2449              		.loc 1 1647 5
 2450 0026 7B68     		ldr	r3, [r7, #4]
 2451 0028 1B68     		ldr	r3, [r3]
 2452 002a 5A69     		ldr	r2, [r3, #20]
 2453 002c 7B68     		ldr	r3, [r7, #4]
 2454 002e 1B68     		ldr	r3, [r3]
 2455 0030 22F08002 		bic	r2, r2, #128
 2456 0034 5A61     		str	r2, [r3, #20]
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2457              		.loc 1 1650 14
 2458 0036 7B68     		ldr	r3, [r7, #4]
 2459 0038 1B6B     		ldr	r3, [r3, #48]
 2460              		.loc 1 1650 8
 2461 003a 002B     		cmp	r3, #0
 2462 003c 18D0     		beq	.L97
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2463              		.loc 1 1654 12
 2464 003e 7B68     		ldr	r3, [r7, #4]
 2465 0040 1B6B     		ldr	r3, [r3, #48]
 2466              		.loc 1 1654 40
 2467 0042 0022     		movs	r2, #0
 2468 0044 1A65     		str	r2, [r3, #80]
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2469              		.loc 1 1656 11
 2470 0046 7B68     		ldr	r3, [r7, #4]
 2471 0048 1B6B     		ldr	r3, [r3, #48]
 2472 004a 1846     		mov	r0, r3
 2473 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2474 0050 0346     		mov	r3, r0
 2475              		.loc 1 1656 10
 2476 0052 002B     		cmp	r3, #0
 2477 0054 0CD0     		beq	.L97
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 73


 2478              		.loc 1 1658 13
 2479 0056 7B68     		ldr	r3, [r7, #4]
 2480 0058 1B6B     		ldr	r3, [r3, #48]
 2481 005a 1846     		mov	r0, r3
 2482 005c FFF7FEFF 		bl	HAL_DMA_GetError
 2483 0060 0346     		mov	r3, r0
 2484              		.loc 1 1658 12
 2485 0062 202B     		cmp	r3, #32
 2486 0064 04D1     		bne	.L97
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2487              		.loc 1 1661 28
 2488 0066 7B68     		ldr	r3, [r7, #4]
 2489 0068 1022     		movs	r2, #16
 2490 006a DA63     		str	r2, [r3, #60]
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2491              		.loc 1 1663 18
 2492 006c 0323     		movs	r3, #3
 2493 006e 07E0     		b	.L98
 2494              	.L97:
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2495              		.loc 1 1670 22
 2496 0070 7B68     		ldr	r3, [r7, #4]
 2497 0072 0022     		movs	r2, #0
 2498 0074 DA84     		strh	r2, [r3, #38]	@ movhi
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2499              		.loc 1 1673 17
 2500 0076 7B68     		ldr	r3, [r7, #4]
 2501 0078 2022     		movs	r2, #32
 2502 007a 83F83920 		strb	r2, [r3, #57]
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2503              		.loc 1 1675 10
 2504 007e 0023     		movs	r3, #0
 2505              	.L98:
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2506              		.loc 1 1676 1
 2507 0080 1846     		mov	r0, r3
 2508 0082 0837     		adds	r7, r7, #8
 2509              	.LCFI94:
 2510              		.cfi_def_cfa_offset 8
 2511 0084 BD46     		mov	sp, r7
 2512              	.LCFI95:
 2513              		.cfi_def_cfa_register 13
 2514              		@ sp needed
 2515 0086 80BD     		pop	{r7, pc}
 2516              		.cfi_endproc
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 74


 2517              	.LFE147:
 2519              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2520              		.align	1
 2521              		.global	HAL_UART_AbortReceive
 2522              		.syntax unified
 2523              		.thumb
 2524              		.thumb_func
 2525              		.fpu fpv4-sp-d16
 2527              	HAL_UART_AbortReceive:
 2528              	.LFB148:
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2529              		.loc 1 1691 1
 2530              		.cfi_startproc
 2531              		@ args = 0, pretend = 0, frame = 8
 2532              		@ frame_needed = 1, uses_anonymous_args = 0
 2533 0000 80B5     		push	{r7, lr}
 2534              	.LCFI96:
 2535              		.cfi_def_cfa_offset 8
 2536              		.cfi_offset 7, -8
 2537              		.cfi_offset 14, -4
 2538 0002 82B0     		sub	sp, sp, #8
 2539              	.LCFI97:
 2540              		.cfi_def_cfa_offset 16
 2541 0004 00AF     		add	r7, sp, #0
 2542              	.LCFI98:
 2543              		.cfi_def_cfa_register 7
 2544 0006 7860     		str	r0, [r7, #4]
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2545              		.loc 1 1693 3
 2546 0008 7B68     		ldr	r3, [r7, #4]
 2547 000a 1B68     		ldr	r3, [r3]
 2548 000c DA68     		ldr	r2, [r3, #12]
 2549 000e 7B68     		ldr	r3, [r7, #4]
 2550 0010 1B68     		ldr	r3, [r3]
 2551 0012 22F49072 		bic	r2, r2, #288
 2552 0016 DA60     		str	r2, [r3, #12]
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2553              		.loc 1 1694 3
 2554 0018 7B68     		ldr	r3, [r7, #4]
 2555 001a 1B68     		ldr	r3, [r3]
 2556 001c 5A69     		ldr	r2, [r3, #20]
 2557 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 75


 2558 0020 1B68     		ldr	r3, [r3]
 2559 0022 22F00102 		bic	r2, r2, #1
 2560 0026 5A61     		str	r2, [r3, #20]
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2561              		.loc 1 1697 7
 2562 0028 7B68     		ldr	r3, [r7, #4]
 2563 002a 1B68     		ldr	r3, [r3]
 2564 002c 5B69     		ldr	r3, [r3, #20]
 2565 002e 03F04003 		and	r3, r3, #64
 2566              		.loc 1 1697 6
 2567 0032 402B     		cmp	r3, #64
 2568 0034 24D1     		bne	.L100
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2569              		.loc 1 1699 5
 2570 0036 7B68     		ldr	r3, [r7, #4]
 2571 0038 1B68     		ldr	r3, [r3]
 2572 003a 5A69     		ldr	r2, [r3, #20]
 2573 003c 7B68     		ldr	r3, [r7, #4]
 2574 003e 1B68     		ldr	r3, [r3]
 2575 0040 22F04002 		bic	r2, r2, #64
 2576 0044 5A61     		str	r2, [r3, #20]
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2577              		.loc 1 1702 14
 2578 0046 7B68     		ldr	r3, [r7, #4]
 2579 0048 5B6B     		ldr	r3, [r3, #52]
 2580              		.loc 1 1702 8
 2581 004a 002B     		cmp	r3, #0
 2582 004c 18D0     		beq	.L100
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2583              		.loc 1 1706 12
 2584 004e 7B68     		ldr	r3, [r7, #4]
 2585 0050 5B6B     		ldr	r3, [r3, #52]
 2586              		.loc 1 1706 40
 2587 0052 0022     		movs	r2, #0
 2588 0054 1A65     		str	r2, [r3, #80]
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2589              		.loc 1 1708 11
 2590 0056 7B68     		ldr	r3, [r7, #4]
 2591 0058 5B6B     		ldr	r3, [r3, #52]
 2592 005a 1846     		mov	r0, r3
 2593 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2594 0060 0346     		mov	r3, r0
 2595              		.loc 1 1708 10
 2596 0062 002B     		cmp	r3, #0
 2597 0064 0CD0     		beq	.L100
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2598              		.loc 1 1710 13
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 76


 2599 0066 7B68     		ldr	r3, [r7, #4]
 2600 0068 5B6B     		ldr	r3, [r3, #52]
 2601 006a 1846     		mov	r0, r3
 2602 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2603 0070 0346     		mov	r3, r0
 2604              		.loc 1 1710 12
 2605 0072 202B     		cmp	r3, #32
 2606 0074 04D1     		bne	.L100
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2607              		.loc 1 1713 28
 2608 0076 7B68     		ldr	r3, [r7, #4]
 2609 0078 1022     		movs	r2, #16
 2610 007a DA63     		str	r2, [r3, #60]
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2611              		.loc 1 1715 18
 2612 007c 0323     		movs	r3, #3
 2613 007e 07E0     		b	.L101
 2614              	.L100:
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2615              		.loc 1 1722 22
 2616 0080 7B68     		ldr	r3, [r7, #4]
 2617 0082 0022     		movs	r2, #0
 2618 0084 DA85     		strh	r2, [r3, #46]	@ movhi
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2619              		.loc 1 1725 18
 2620 0086 7B68     		ldr	r3, [r7, #4]
 2621 0088 2022     		movs	r2, #32
 2622 008a 83F83A20 		strb	r2, [r3, #58]
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2623              		.loc 1 1727 10
 2624 008e 0023     		movs	r3, #0
 2625              	.L101:
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2626              		.loc 1 1728 1
 2627 0090 1846     		mov	r0, r3
 2628 0092 0837     		adds	r7, r7, #8
 2629              	.LCFI99:
 2630              		.cfi_def_cfa_offset 8
 2631 0094 BD46     		mov	sp, r7
 2632              	.LCFI100:
 2633              		.cfi_def_cfa_register 13
 2634              		@ sp needed
 2635 0096 80BD     		pop	{r7, pc}
 2636              		.cfi_endproc
 2637              	.LFE148:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 77


 2639              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2640              		.align	1
 2641              		.global	HAL_UART_Abort_IT
 2642              		.syntax unified
 2643              		.thumb
 2644              		.thumb_func
 2645              		.fpu fpv4-sp-d16
 2647              	HAL_UART_Abort_IT:
 2648              	.LFB149:
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2649              		.loc 1 1745 1
 2650              		.cfi_startproc
 2651              		@ args = 0, pretend = 0, frame = 16
 2652              		@ frame_needed = 1, uses_anonymous_args = 0
 2653 0000 80B5     		push	{r7, lr}
 2654              	.LCFI101:
 2655              		.cfi_def_cfa_offset 8
 2656              		.cfi_offset 7, -8
 2657              		.cfi_offset 14, -4
 2658 0002 84B0     		sub	sp, sp, #16
 2659              	.LCFI102:
 2660              		.cfi_def_cfa_offset 24
 2661 0004 00AF     		add	r7, sp, #0
 2662              	.LCFI103:
 2663              		.cfi_def_cfa_register 7
 2664 0006 7860     		str	r0, [r7, #4]
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 2665              		.loc 1 1746 12
 2666 0008 0123     		movs	r3, #1
 2667 000a FB60     		str	r3, [r7, #12]
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2668              		.loc 1 1749 3
 2669 000c 7B68     		ldr	r3, [r7, #4]
 2670 000e 1B68     		ldr	r3, [r3]
 2671 0010 DA68     		ldr	r2, [r3, #12]
 2672 0012 7B68     		ldr	r3, [r7, #4]
 2673 0014 1B68     		ldr	r3, [r3]
 2674 0016 22F4F072 		bic	r2, r2, #480
 2675 001a DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 78


1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2676              		.loc 1 1750 3
 2677 001c 7B68     		ldr	r3, [r7, #4]
 2678 001e 1B68     		ldr	r3, [r3]
 2679 0020 5A69     		ldr	r2, [r3, #20]
 2680 0022 7B68     		ldr	r3, [r7, #4]
 2681 0024 1B68     		ldr	r3, [r3]
 2682 0026 22F00102 		bic	r2, r2, #1
 2683 002a 5A61     		str	r2, [r3, #20]
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 2684              		.loc 1 1755 12
 2685 002c 7B68     		ldr	r3, [r7, #4]
 2686 002e 1B6B     		ldr	r3, [r3, #48]
 2687              		.loc 1 1755 6
 2688 0030 002B     		cmp	r3, #0
 2689 0032 0FD0     		beq	.L103
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2690              		.loc 1 1759 9
 2691 0034 7B68     		ldr	r3, [r7, #4]
 2692 0036 1B68     		ldr	r3, [r3]
 2693 0038 5B69     		ldr	r3, [r3, #20]
 2694 003a 03F08003 		and	r3, r3, #128
 2695              		.loc 1 1759 8
 2696 003e 802B     		cmp	r3, #128
 2697 0040 04D1     		bne	.L104
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 2698              		.loc 1 1761 12
 2699 0042 7B68     		ldr	r3, [r7, #4]
 2700 0044 1B6B     		ldr	r3, [r3, #48]
 2701              		.loc 1 1761 40
 2702 0046 3E4A     		ldr	r2, .L113
 2703 0048 1A65     		str	r2, [r3, #80]
 2704 004a 03E0     		b	.L103
 2705              	.L104:
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2706              		.loc 1 1765 12
 2707 004c 7B68     		ldr	r3, [r7, #4]
 2708 004e 1B6B     		ldr	r3, [r3, #48]
 2709              		.loc 1 1765 40
 2710 0050 0022     		movs	r2, #0
 2711 0052 1A65     		str	r2, [r3, #80]
 2712              	.L103:
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 79


 2713              		.loc 1 1769 12
 2714 0054 7B68     		ldr	r3, [r7, #4]
 2715 0056 5B6B     		ldr	r3, [r3, #52]
 2716              		.loc 1 1769 6
 2717 0058 002B     		cmp	r3, #0
 2718 005a 0FD0     		beq	.L105
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2719              		.loc 1 1773 9
 2720 005c 7B68     		ldr	r3, [r7, #4]
 2721 005e 1B68     		ldr	r3, [r3]
 2722 0060 5B69     		ldr	r3, [r3, #20]
 2723 0062 03F04003 		and	r3, r3, #64
 2724              		.loc 1 1773 8
 2725 0066 402B     		cmp	r3, #64
 2726 0068 04D1     		bne	.L106
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 2727              		.loc 1 1775 12
 2728 006a 7B68     		ldr	r3, [r7, #4]
 2729 006c 5B6B     		ldr	r3, [r3, #52]
 2730              		.loc 1 1775 40
 2731 006e 354A     		ldr	r2, .L113+4
 2732 0070 1A65     		str	r2, [r3, #80]
 2733 0072 03E0     		b	.L105
 2734              	.L106:
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2735              		.loc 1 1779 12
 2736 0074 7B68     		ldr	r3, [r7, #4]
 2737 0076 5B6B     		ldr	r3, [r3, #52]
 2738              		.loc 1 1779 40
 2739 0078 0022     		movs	r2, #0
 2740 007a 1A65     		str	r2, [r3, #80]
 2741              	.L105:
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2742              		.loc 1 1784 7
 2743 007c 7B68     		ldr	r3, [r7, #4]
 2744 007e 1B68     		ldr	r3, [r3]
 2745 0080 5B69     		ldr	r3, [r3, #20]
 2746 0082 03F08003 		and	r3, r3, #128
 2747              		.loc 1 1784 6
 2748 0086 802B     		cmp	r3, #128
 2749 0088 1AD1     		bne	.L107
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2750              		.loc 1 1787 5
 2751 008a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 80


 2752 008c 1B68     		ldr	r3, [r3]
 2753 008e 5A69     		ldr	r2, [r3, #20]
 2754 0090 7B68     		ldr	r3, [r7, #4]
 2755 0092 1B68     		ldr	r3, [r3]
 2756 0094 22F08002 		bic	r2, r2, #128
 2757 0098 5A61     		str	r2, [r3, #20]
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use non blocking DMA Abort API (callback) */
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2758              		.loc 1 1790 14
 2759 009a 7B68     		ldr	r3, [r7, #4]
 2760 009c 1B6B     		ldr	r3, [r3, #48]
 2761              		.loc 1 1790 8
 2762 009e 002B     		cmp	r3, #0
 2763 00a0 0ED0     		beq	.L107
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2764              		.loc 1 1796 11
 2765 00a2 7B68     		ldr	r3, [r7, #4]
 2766 00a4 1B6B     		ldr	r3, [r3, #48]
 2767 00a6 1846     		mov	r0, r3
 2768 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2769 00ac 0346     		mov	r3, r0
 2770              		.loc 1 1796 10
 2771 00ae 002B     		cmp	r3, #0
 2772 00b0 04D0     		beq	.L108
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 2773              		.loc 1 1798 14
 2774 00b2 7B68     		ldr	r3, [r7, #4]
 2775 00b4 1B6B     		ldr	r3, [r3, #48]
 2776              		.loc 1 1798 42
 2777 00b6 0022     		movs	r2, #0
 2778 00b8 1A65     		str	r2, [r3, #80]
 2779 00ba 01E0     		b	.L107
 2780              	.L108:
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 2781              		.loc 1 1802 19
 2782 00bc 0023     		movs	r3, #0
 2783 00be FB60     		str	r3, [r7, #12]
 2784              	.L107:
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2785              		.loc 1 1808 7
 2786 00c0 7B68     		ldr	r3, [r7, #4]
 2787 00c2 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 81


 2788 00c4 5B69     		ldr	r3, [r3, #20]
 2789 00c6 03F04003 		and	r3, r3, #64
 2790              		.loc 1 1808 6
 2791 00ca 402B     		cmp	r3, #64
 2792 00cc 1CD1     		bne	.L109
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2793              		.loc 1 1810 5
 2794 00ce 7B68     		ldr	r3, [r7, #4]
 2795 00d0 1B68     		ldr	r3, [r3]
 2796 00d2 5A69     		ldr	r2, [r3, #20]
 2797 00d4 7B68     		ldr	r3, [r7, #4]
 2798 00d6 1B68     		ldr	r3, [r3]
 2799 00d8 22F04002 		bic	r2, r2, #64
 2800 00dc 5A61     		str	r2, [r3, #20]
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use non blocking DMA Abort API (callback) */
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2801              		.loc 1 1813 14
 2802 00de 7B68     		ldr	r3, [r7, #4]
 2803 00e0 5B6B     		ldr	r3, [r3, #52]
 2804              		.loc 1 1813 8
 2805 00e2 002B     		cmp	r3, #0
 2806 00e4 10D0     		beq	.L109
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2807              		.loc 1 1819 11
 2808 00e6 7B68     		ldr	r3, [r7, #4]
 2809 00e8 5B6B     		ldr	r3, [r3, #52]
 2810 00ea 1846     		mov	r0, r3
 2811 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2812 00f0 0346     		mov	r3, r0
 2813              		.loc 1 1819 10
 2814 00f2 002B     		cmp	r3, #0
 2815 00f4 06D0     		beq	.L110
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 2816              		.loc 1 1821 14
 2817 00f6 7B68     		ldr	r3, [r7, #4]
 2818 00f8 5B6B     		ldr	r3, [r3, #52]
 2819              		.loc 1 1821 42
 2820 00fa 0022     		movs	r2, #0
 2821 00fc 1A65     		str	r2, [r3, #80]
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 2822              		.loc 1 1822 19
 2823 00fe 0123     		movs	r3, #1
 2824 0100 FB60     		str	r3, [r7, #12]
 2825 0102 01E0     		b	.L109
 2826              	.L110:
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 82


 2827              		.loc 1 1826 19
 2828 0104 0023     		movs	r3, #0
 2829 0106 FB60     		str	r3, [r7, #12]
 2830              	.L109:
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (AbortCplt == 0x01U)
 2831              		.loc 1 1832 6
 2832 0108 FB68     		ldr	r3, [r7, #12]
 2833 010a 012B     		cmp	r3, #1
 2834 010c 13D1     		bne	.L111
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 2835              		.loc 1 1835 24
 2836 010e 7B68     		ldr	r3, [r7, #4]
 2837 0110 0022     		movs	r2, #0
 2838 0112 DA84     		strh	r2, [r3, #38]	@ movhi
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 2839              		.loc 1 1836 24
 2840 0114 7B68     		ldr	r3, [r7, #4]
 2841 0116 0022     		movs	r2, #0
 2842 0118 DA85     		strh	r2, [r3, #46]	@ movhi
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2843              		.loc 1 1839 22
 2844 011a 7B68     		ldr	r3, [r7, #4]
 2845 011c 0022     		movs	r2, #0
 2846 011e DA63     		str	r2, [r3, #60]
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 2847              		.loc 1 1842 20
 2848 0120 7B68     		ldr	r3, [r7, #4]
 2849 0122 2022     		movs	r2, #32
 2850 0124 83F83920 		strb	r2, [r3, #57]
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2851              		.loc 1 1843 20
 2852 0128 7B68     		ldr	r3, [r7, #4]
 2853 012a 2022     		movs	r2, #32
 2854 012c 83F83A20 		strb	r2, [r3, #58]
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort complete callback */
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 2855              		.loc 1 1851 5
 2856 0130 7868     		ldr	r0, [r7, #4]
 2857 0132 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2858              	.L111:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 83


1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2859              		.loc 1 1855 10
 2860 0136 0023     		movs	r3, #0
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2861              		.loc 1 1856 1
 2862 0138 1846     		mov	r0, r3
 2863 013a 1037     		adds	r7, r7, #16
 2864              	.LCFI104:
 2865              		.cfi_def_cfa_offset 8
 2866 013c BD46     		mov	sp, r7
 2867              	.LCFI105:
 2868              		.cfi_def_cfa_register 13
 2869              		@ sp needed
 2870 013e 80BD     		pop	{r7, pc}
 2871              	.L114:
 2872              		.align	2
 2873              	.L113:
 2874 0140 00000000 		.word	UART_DMATxAbortCallback
 2875 0144 00000000 		.word	UART_DMARxAbortCallback
 2876              		.cfi_endproc
 2877              	.LFE149:
 2879              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2880              		.align	1
 2881              		.global	HAL_UART_AbortTransmit_IT
 2882              		.syntax unified
 2883              		.thumb
 2884              		.thumb_func
 2885              		.fpu fpv4-sp-d16
 2887              	HAL_UART_AbortTransmit_IT:
 2888              	.LFB150:
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2889              		.loc 1 1873 1
 2890              		.cfi_startproc
 2891              		@ args = 0, pretend = 0, frame = 8
 2892              		@ frame_needed = 1, uses_anonymous_args = 0
 2893 0000 80B5     		push	{r7, lr}
 2894              	.LCFI106:
 2895              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 84


 2896              		.cfi_offset 7, -8
 2897              		.cfi_offset 14, -4
 2898 0002 82B0     		sub	sp, sp, #8
 2899              	.LCFI107:
 2900              		.cfi_def_cfa_offset 16
 2901 0004 00AF     		add	r7, sp, #0
 2902              	.LCFI108:
 2903              		.cfi_def_cfa_register 7
 2904 0006 7860     		str	r0, [r7, #4]
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2905              		.loc 1 1875 3
 2906 0008 7B68     		ldr	r3, [r7, #4]
 2907 000a 1B68     		ldr	r3, [r3]
 2908 000c DA68     		ldr	r2, [r3, #12]
 2909 000e 7B68     		ldr	r3, [r7, #4]
 2910 0010 1B68     		ldr	r3, [r3]
 2911 0012 22F0C002 		bic	r2, r2, #192
 2912 0016 DA60     		str	r2, [r3, #12]
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2913              		.loc 1 1878 7
 2914 0018 7B68     		ldr	r3, [r7, #4]
 2915 001a 1B68     		ldr	r3, [r3]
 2916 001c 5B69     		ldr	r3, [r3, #20]
 2917 001e 03F08003 		and	r3, r3, #128
 2918              		.loc 1 1878 6
 2919 0022 802B     		cmp	r3, #128
 2920 0024 2AD1     		bne	.L116
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2921              		.loc 1 1880 5
 2922 0026 7B68     		ldr	r3, [r7, #4]
 2923 0028 1B68     		ldr	r3, [r3]
 2924 002a 5A69     		ldr	r2, [r3, #20]
 2925 002c 7B68     		ldr	r3, [r7, #4]
 2926 002e 1B68     		ldr	r3, [r3]
 2927 0030 22F08002 		bic	r2, r2, #128
 2928 0034 5A61     		str	r2, [r3, #20]
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2929              		.loc 1 1883 14
 2930 0036 7B68     		ldr	r3, [r7, #4]
 2931 0038 1B6B     		ldr	r3, [r3, #48]
 2932              		.loc 1 1883 8
 2933 003a 002B     		cmp	r3, #0
 2934 003c 13D0     		beq	.L117
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 2935              		.loc 1 1887 12
 2936 003e 7B68     		ldr	r3, [r7, #4]
 2937 0040 1B6B     		ldr	r3, [r3, #48]
 2938              		.loc 1 1887 40
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 85


 2939 0042 164A     		ldr	r2, .L120
 2940 0044 1A65     		str	r2, [r3, #80]
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2941              		.loc 1 1890 11
 2942 0046 7B68     		ldr	r3, [r7, #4]
 2943 0048 1B6B     		ldr	r3, [r3, #48]
 2944 004a 1846     		mov	r0, r3
 2945 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2946 0050 0346     		mov	r3, r0
 2947              		.loc 1 1890 10
 2948 0052 002B     		cmp	r3, #0
 2949 0054 1CD0     		beq	.L118
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 2950              		.loc 1 1893 14
 2951 0056 7B68     		ldr	r3, [r7, #4]
 2952 0058 1B6B     		ldr	r3, [r3, #48]
 2953              		.loc 1 1893 22
 2954 005a 1B6D     		ldr	r3, [r3, #80]
 2955              		.loc 1 1893 47
 2956 005c 7A68     		ldr	r2, [r7, #4]
 2957 005e 126B     		ldr	r2, [r2, #48]
 2958              		.loc 1 1893 9
 2959 0060 1046     		mov	r0, r2
 2960 0062 9847     		blx	r3
 2961              	.LVL0:
 2962 0064 14E0     		b	.L118
 2963              	.L117:
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
 2964              		.loc 1 1899 26
 2965 0066 7B68     		ldr	r3, [r7, #4]
 2966 0068 0022     		movs	r2, #0
 2967 006a DA84     		strh	r2, [r3, #38]	@ movhi
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 2968              		.loc 1 1902 21
 2969 006c 7B68     		ldr	r3, [r7, #4]
 2970 006e 2022     		movs	r2, #32
 2971 0070 83F83920 		strb	r2, [r3, #57]
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 2972              		.loc 1 1910 7
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 86


 2973 0074 7868     		ldr	r0, [r7, #4]
 2974 0076 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2975 007a 09E0     		b	.L118
 2976              	.L116:
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 2977              		.loc 1 1917 24
 2978 007c 7B68     		ldr	r3, [r7, #4]
 2979 007e 0022     		movs	r2, #0
 2980 0080 DA84     		strh	r2, [r3, #38]	@ movhi
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 2981              		.loc 1 1920 19
 2982 0082 7B68     		ldr	r3, [r7, #4]
 2983 0084 2022     		movs	r2, #32
 2984 0086 83F83920 		strb	r2, [r3, #57]
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 2985              		.loc 1 1928 5
 2986 008a 7868     		ldr	r0, [r7, #4]
 2987 008c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2988              	.L118:
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2989              		.loc 1 1932 10
 2990 0090 0023     		movs	r3, #0
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2991              		.loc 1 1933 1
 2992 0092 1846     		mov	r0, r3
 2993 0094 0837     		adds	r7, r7, #8
 2994              	.LCFI109:
 2995              		.cfi_def_cfa_offset 8
 2996 0096 BD46     		mov	sp, r7
 2997              	.LCFI110:
 2998              		.cfi_def_cfa_register 13
 2999              		@ sp needed
 3000 0098 80BD     		pop	{r7, pc}
 3001              	.L121:
 3002 009a 00BF     		.align	2
 3003              	.L120:
 3004 009c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3005              		.cfi_endproc
 3006              	.LFE150:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 87


 3008              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3009              		.align	1
 3010              		.global	HAL_UART_AbortReceive_IT
 3011              		.syntax unified
 3012              		.thumb
 3013              		.thumb_func
 3014              		.fpu fpv4-sp-d16
 3016              	HAL_UART_AbortReceive_IT:
 3017              	.LFB151:
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3018              		.loc 1 1950 1
 3019              		.cfi_startproc
 3020              		@ args = 0, pretend = 0, frame = 8
 3021              		@ frame_needed = 1, uses_anonymous_args = 0
 3022 0000 80B5     		push	{r7, lr}
 3023              	.LCFI111:
 3024              		.cfi_def_cfa_offset 8
 3025              		.cfi_offset 7, -8
 3026              		.cfi_offset 14, -4
 3027 0002 82B0     		sub	sp, sp, #8
 3028              	.LCFI112:
 3029              		.cfi_def_cfa_offset 16
 3030 0004 00AF     		add	r7, sp, #0
 3031              	.LCFI113:
 3032              		.cfi_def_cfa_register 7
 3033 0006 7860     		str	r0, [r7, #4]
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3034              		.loc 1 1952 3
 3035 0008 7B68     		ldr	r3, [r7, #4]
 3036 000a 1B68     		ldr	r3, [r3]
 3037 000c DA68     		ldr	r2, [r3, #12]
 3038 000e 7B68     		ldr	r3, [r7, #4]
 3039 0010 1B68     		ldr	r3, [r3]
 3040 0012 22F49072 		bic	r2, r2, #288
 3041 0016 DA60     		str	r2, [r3, #12]
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3042              		.loc 1 1953 3
 3043 0018 7B68     		ldr	r3, [r7, #4]
 3044 001a 1B68     		ldr	r3, [r3]
 3045 001c 5A69     		ldr	r2, [r3, #20]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 88


 3046 001e 7B68     		ldr	r3, [r7, #4]
 3047 0020 1B68     		ldr	r3, [r3]
 3048 0022 22F00102 		bic	r2, r2, #1
 3049 0026 5A61     		str	r2, [r3, #20]
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3050              		.loc 1 1956 7
 3051 0028 7B68     		ldr	r3, [r7, #4]
 3052 002a 1B68     		ldr	r3, [r3]
 3053 002c 5B69     		ldr	r3, [r3, #20]
 3054 002e 03F04003 		and	r3, r3, #64
 3055              		.loc 1 1956 6
 3056 0032 402B     		cmp	r3, #64
 3057 0034 2AD1     		bne	.L123
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3058              		.loc 1 1958 5
 3059 0036 7B68     		ldr	r3, [r7, #4]
 3060 0038 1B68     		ldr	r3, [r3]
 3061 003a 5A69     		ldr	r2, [r3, #20]
 3062 003c 7B68     		ldr	r3, [r7, #4]
 3063 003e 1B68     		ldr	r3, [r3]
 3064 0040 22F04002 		bic	r2, r2, #64
 3065 0044 5A61     		str	r2, [r3, #20]
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3066              		.loc 1 1961 14
 3067 0046 7B68     		ldr	r3, [r7, #4]
 3068 0048 5B6B     		ldr	r3, [r3, #52]
 3069              		.loc 1 1961 8
 3070 004a 002B     		cmp	r3, #0
 3071 004c 13D0     		beq	.L124
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 3072              		.loc 1 1965 12
 3073 004e 7B68     		ldr	r3, [r7, #4]
 3074 0050 5B6B     		ldr	r3, [r3, #52]
 3075              		.loc 1 1965 40
 3076 0052 164A     		ldr	r2, .L127
 3077 0054 1A65     		str	r2, [r3, #80]
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3078              		.loc 1 1968 11
 3079 0056 7B68     		ldr	r3, [r7, #4]
 3080 0058 5B6B     		ldr	r3, [r3, #52]
 3081 005a 1846     		mov	r0, r3
 3082 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3083 0060 0346     		mov	r3, r0
 3084              		.loc 1 1968 10
 3085 0062 002B     		cmp	r3, #0
 3086 0064 1CD0     		beq	.L125
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 89


1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3087              		.loc 1 1971 14
 3088 0066 7B68     		ldr	r3, [r7, #4]
 3089 0068 5B6B     		ldr	r3, [r3, #52]
 3090              		.loc 1 1971 22
 3091 006a 1B6D     		ldr	r3, [r3, #80]
 3092              		.loc 1 1971 47
 3093 006c 7A68     		ldr	r2, [r7, #4]
 3094 006e 526B     		ldr	r2, [r2, #52]
 3095              		.loc 1 1971 9
 3096 0070 1046     		mov	r0, r2
 3097 0072 9847     		blx	r3
 3098              	.LVL1:
 3099 0074 14E0     		b	.L125
 3100              	.L124:
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
 3101              		.loc 1 1977 26
 3102 0076 7B68     		ldr	r3, [r7, #4]
 3103 0078 0022     		movs	r2, #0
 3104 007a DA85     		strh	r2, [r3, #46]	@ movhi
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3105              		.loc 1 1980 22
 3106 007c 7B68     		ldr	r3, [r7, #4]
 3107 007e 2022     		movs	r2, #32
 3108 0080 83F83A20 		strb	r2, [r3, #58]
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 3109              		.loc 1 1988 7
 3110 0084 7868     		ldr	r0, [r7, #4]
 3111 0086 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3112 008a 09E0     		b	.L125
 3113              	.L123:
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3114              		.loc 1 1995 24
 3115 008c 7B68     		ldr	r3, [r7, #4]
 3116 008e 0022     		movs	r2, #0
 3117 0090 DA85     		strh	r2, [r3, #46]	@ movhi
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 90


1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3118              		.loc 1 1998 20
 3119 0092 7B68     		ldr	r3, [r7, #4]
 3120 0094 2022     		movs	r2, #32
 3121 0096 83F83A20 		strb	r2, [r3, #58]
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 3122              		.loc 1 2006 5
 3123 009a 7868     		ldr	r0, [r7, #4]
 3124 009c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3125              	.L125:
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3126              		.loc 1 2010 10
 3127 00a0 0023     		movs	r3, #0
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3128              		.loc 1 2011 1
 3129 00a2 1846     		mov	r0, r3
 3130 00a4 0837     		adds	r7, r7, #8
 3131              	.LCFI114:
 3132              		.cfi_def_cfa_offset 8
 3133 00a6 BD46     		mov	sp, r7
 3134              	.LCFI115:
 3135              		.cfi_def_cfa_register 13
 3136              		@ sp needed
 3137 00a8 80BD     		pop	{r7, pc}
 3138              	.L128:
 3139 00aa 00BF     		.align	2
 3140              	.L127:
 3141 00ac 00000000 		.word	UART_DMARxOnlyAbortCallback
 3142              		.cfi_endproc
 3143              	.LFE151:
 3145              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3146              		.align	1
 3147              		.global	HAL_UART_IRQHandler
 3148              		.syntax unified
 3149              		.thumb
 3150              		.thumb_func
 3151              		.fpu fpv4-sp-d16
 3153              	HAL_UART_IRQHandler:
 3154              	.LFB152:
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 91


2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3155              		.loc 1 2020 1
 3156              		.cfi_startproc
 3157              		@ args = 0, pretend = 0, frame = 32
 3158              		@ frame_needed = 1, uses_anonymous_args = 0
 3159 0000 80B5     		push	{r7, lr}
 3160              	.LCFI116:
 3161              		.cfi_def_cfa_offset 8
 3162              		.cfi_offset 7, -8
 3163              		.cfi_offset 14, -4
 3164 0002 88B0     		sub	sp, sp, #32
 3165              	.LCFI117:
 3166              		.cfi_def_cfa_offset 40
 3167 0004 00AF     		add	r7, sp, #0
 3168              	.LCFI118:
 3169              		.cfi_def_cfa_register 7
 3170 0006 7860     		str	r0, [r7, #4]
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 3171              		.loc 1 2021 25
 3172 0008 7B68     		ldr	r3, [r7, #4]
 3173 000a 1B68     		ldr	r3, [r3]
 3174              		.loc 1 2021 12
 3175 000c 1B68     		ldr	r3, [r3]
 3176 000e FB61     		str	r3, [r7, #28]
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3177              		.loc 1 2022 25
 3178 0010 7B68     		ldr	r3, [r7, #4]
 3179 0012 1B68     		ldr	r3, [r3]
 3180              		.loc 1 2022 12
 3181 0014 DB68     		ldr	r3, [r3, #12]
 3182 0016 BB61     		str	r3, [r7, #24]
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3183              		.loc 1 2023 25
 3184 0018 7B68     		ldr	r3, [r7, #4]
 3185 001a 1B68     		ldr	r3, [r3]
 3186              		.loc 1 2023 12
 3187 001c 5B69     		ldr	r3, [r3, #20]
 3188 001e 7B61     		str	r3, [r7, #20]
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 3189              		.loc 1 2024 12
 3190 0020 0023     		movs	r3, #0
 3191 0022 3B61     		str	r3, [r7, #16]
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3192              		.loc 1 2025 12
 3193 0024 0023     		movs	r3, #0
 3194 0026 FB60     		str	r3, [r7, #12]
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 3195              		.loc 1 2028 14
 3196 0028 FB69     		ldr	r3, [r7, #28]
 3197 002a 03F00F03 		and	r3, r3, #15
 3198 002e 3B61     		str	r3, [r7, #16]
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (errorflags == RESET)
 3199              		.loc 1 2029 6
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 92


 3200 0030 3B69     		ldr	r3, [r7, #16]
 3201 0032 002B     		cmp	r3, #0
 3202 0034 0DD1     		bne	.L130
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3203              		.loc 1 2032 20
 3204 0036 FB69     		ldr	r3, [r7, #28]
 3205 0038 03F02003 		and	r3, r3, #32
 3206              		.loc 1 2032 8
 3207 003c 002B     		cmp	r3, #0
 3208 003e 08D0     		beq	.L130
 3209              		.loc 1 2032 59 discriminator 1
 3210 0040 BB69     		ldr	r3, [r7, #24]
 3211 0042 03F02003 		and	r3, r3, #32
 3212              		.loc 1 2032 47 discriminator 1
 3213 0046 002B     		cmp	r3, #0
 3214 0048 03D0     		beq	.L130
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
 3215              		.loc 1 2034 7
 3216 004a 7868     		ldr	r0, [r7, #4]
 3217 004c FFF7FEFF 		bl	UART_Receive_IT
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 3218              		.loc 1 2035 7
 3219 0050 D0E0     		b	.L129
 3220              	.L130:
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE
 3221              		.loc 1 2040 6
 3222 0052 3B69     		ldr	r3, [r7, #16]
 3223 0054 002B     		cmp	r3, #0
 3224 0056 00F0B080 		beq	.L132
 3225              		.loc 1 2040 42 discriminator 1
 3226 005a 7B69     		ldr	r3, [r7, #20]
 3227 005c 03F00103 		and	r3, r3, #1
 3228              		.loc 1 2040 29 discriminator 1
 3229 0060 002B     		cmp	r3, #0
 3230 0062 05D1     		bne	.L133
 3231              		.loc 1 2040 81 discriminator 2
 3232 0064 BB69     		ldr	r3, [r7, #24]
 3233 0066 03F49073 		and	r3, r3, #288
 3234              		.loc 1 2040 69 discriminator 2
 3235 006a 002B     		cmp	r3, #0
 3236 006c 00F0A580 		beq	.L132
 3237              	.L133:
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 3238              		.loc 1 2043 20
 3239 0070 FB69     		ldr	r3, [r7, #28]
 3240 0072 03F00103 		and	r3, r3, #1
 3241              		.loc 1 2043 8
 3242 0076 002B     		cmp	r3, #0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 93


 3243 0078 0AD0     		beq	.L134
 3244              		.loc 1 2043 57 discriminator 1
 3245 007a BB69     		ldr	r3, [r7, #24]
 3246 007c 03F48073 		and	r3, r3, #256
 3247              		.loc 1 2043 45 discriminator 1
 3248 0080 002B     		cmp	r3, #0
 3249 0082 05D0     		beq	.L134
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3250              		.loc 1 2045 24
 3251 0084 7B68     		ldr	r3, [r7, #4]
 3252 0086 DB6B     		ldr	r3, [r3, #60]
 3253 0088 43F00102 		orr	r2, r3, #1
 3254 008c 7B68     		ldr	r3, [r7, #4]
 3255 008e DA63     		str	r2, [r3, #60]
 3256              	.L134:
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3257              		.loc 1 2049 20
 3258 0090 FB69     		ldr	r3, [r7, #28]
 3259 0092 03F00403 		and	r3, r3, #4
 3260              		.loc 1 2049 8
 3261 0096 002B     		cmp	r3, #0
 3262 0098 0AD0     		beq	.L135
 3263              		.loc 1 2049 57 discriminator 1
 3264 009a 7B69     		ldr	r3, [r7, #20]
 3265 009c 03F00103 		and	r3, r3, #1
 3266              		.loc 1 2049 45 discriminator 1
 3267 00a0 002B     		cmp	r3, #0
 3268 00a2 05D0     		beq	.L135
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3269              		.loc 1 2051 24
 3270 00a4 7B68     		ldr	r3, [r7, #4]
 3271 00a6 DB6B     		ldr	r3, [r3, #60]
 3272 00a8 43F00202 		orr	r2, r3, #2
 3273 00ac 7B68     		ldr	r3, [r7, #4]
 3274 00ae DA63     		str	r2, [r3, #60]
 3275              	.L135:
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3276              		.loc 1 2055 20
 3277 00b0 FB69     		ldr	r3, [r7, #28]
 3278 00b2 03F00203 		and	r3, r3, #2
 3279              		.loc 1 2055 8
 3280 00b6 002B     		cmp	r3, #0
 3281 00b8 0AD0     		beq	.L136
 3282              		.loc 1 2055 57 discriminator 1
 3283 00ba 7B69     		ldr	r3, [r7, #20]
 3284 00bc 03F00103 		and	r3, r3, #1
 3285              		.loc 1 2055 45 discriminator 1
 3286 00c0 002B     		cmp	r3, #0
 3287 00c2 05D0     		beq	.L136
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 94


2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3288              		.loc 1 2057 24
 3289 00c4 7B68     		ldr	r3, [r7, #4]
 3290 00c6 DB6B     		ldr	r3, [r3, #60]
 3291 00c8 43F00402 		orr	r2, r3, #4
 3292 00cc 7B68     		ldr	r3, [r7, #4]
 3293 00ce DA63     		str	r2, [r3, #60]
 3294              	.L136:
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its
 3295              		.loc 1 2061 20
 3296 00d0 FB69     		ldr	r3, [r7, #28]
 3297 00d2 03F00803 		and	r3, r3, #8
 3298              		.loc 1 2061 8
 3299 00d6 002B     		cmp	r3, #0
 3300 00d8 0FD0     		beq	.L137
 3301              		.loc 1 2061 59 discriminator 1
 3302 00da BB69     		ldr	r3, [r7, #24]
 3303 00dc 03F02003 		and	r3, r3, #32
 3304              		.loc 1 2061 46 discriminator 1
 3305 00e0 002B     		cmp	r3, #0
 3306 00e2 04D1     		bne	.L138
 3307              		.loc 1 2061 101 discriminator 2
 3308 00e4 7B69     		ldr	r3, [r7, #20]
 3309 00e6 03F00103 		and	r3, r3, #1
 3310              		.loc 1 2061 89 discriminator 2
 3311 00ea 002B     		cmp	r3, #0
 3312 00ec 05D0     		beq	.L137
 3313              	.L138:
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3314              		.loc 1 2063 24
 3315 00ee 7B68     		ldr	r3, [r7, #4]
 3316 00f0 DB6B     		ldr	r3, [r3, #60]
 3317 00f2 43F00802 		orr	r2, r3, #8
 3318 00f6 7B68     		ldr	r3, [r7, #4]
 3319 00f8 DA63     		str	r2, [r3, #60]
 3320              	.L137:
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 3321              		.loc 1 2067 14
 3322 00fa 7B68     		ldr	r3, [r7, #4]
 3323 00fc DB6B     		ldr	r3, [r3, #60]
 3324              		.loc 1 2067 8
 3325 00fe 002B     		cmp	r3, #0
 3326 0100 77D0     		beq	.L147
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3327              		.loc 1 2070 22
 3328 0102 FB69     		ldr	r3, [r7, #28]
 3329 0104 03F02003 		and	r3, r3, #32
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 95


 3330              		.loc 1 2070 10
 3331 0108 002B     		cmp	r3, #0
 3332 010a 07D0     		beq	.L140
 3333              		.loc 1 2070 61 discriminator 1
 3334 010c BB69     		ldr	r3, [r7, #24]
 3335 010e 03F02003 		and	r3, r3, #32
 3336              		.loc 1 2070 49 discriminator 1
 3337 0112 002B     		cmp	r3, #0
 3338 0114 02D0     		beq	.L140
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
 3339              		.loc 1 2072 9
 3340 0116 7868     		ldr	r0, [r7, #4]
 3341 0118 FFF7FEFF 		bl	UART_Receive_IT
 3342              	.L140:
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 3343              		.loc 1 2077 20
 3344 011c 7B68     		ldr	r3, [r7, #4]
 3345 011e 1B68     		ldr	r3, [r3]
 3346 0120 5B69     		ldr	r3, [r3, #20]
 3347 0122 03F04003 		and	r3, r3, #64
 3348 0126 402B     		cmp	r3, #64
 3349 0128 0CBF     		ite	eq
 3350 012a 0123     		moveq	r3, #1
 3351 012c 0023     		movne	r3, #0
 3352 012e DBB2     		uxtb	r3, r3
 3353              		.loc 1 2077 18
 3354 0130 FB60     		str	r3, [r7, #12]
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 3355              		.loc 1 2078 18
 3356 0132 7B68     		ldr	r3, [r7, #4]
 3357 0134 DB6B     		ldr	r3, [r3, #60]
 3358              		.loc 1 2078 30
 3359 0136 03F00803 		and	r3, r3, #8
 3360              		.loc 1 2078 10
 3361 013a 002B     		cmp	r3, #0
 3362 013c 02D1     		bne	.L141
 3363              		.loc 1 2078 62 discriminator 1
 3364 013e FB68     		ldr	r3, [r7, #12]
 3365 0140 002B     		cmp	r3, #0
 3366 0142 31D0     		beq	.L142
 3367              	.L141:
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 3368              		.loc 1 2083 9
 3369 0144 7868     		ldr	r0, [r7, #4]
 3370 0146 FFF7FEFF 		bl	UART_EndRxTransfer
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 96


 3371              		.loc 1 2086 13
 3372 014a 7B68     		ldr	r3, [r7, #4]
 3373 014c 1B68     		ldr	r3, [r3]
 3374 014e 5B69     		ldr	r3, [r3, #20]
 3375 0150 03F04003 		and	r3, r3, #64
 3376              		.loc 1 2086 12
 3377 0154 402B     		cmp	r3, #64
 3378 0156 23D1     		bne	.L143
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3379              		.loc 1 2088 11
 3380 0158 7B68     		ldr	r3, [r7, #4]
 3381 015a 1B68     		ldr	r3, [r3]
 3382 015c 5A69     		ldr	r2, [r3, #20]
 3383 015e 7B68     		ldr	r3, [r7, #4]
 3384 0160 1B68     		ldr	r3, [r3]
 3385 0162 22F04002 		bic	r2, r2, #64
 3386 0166 5A61     		str	r2, [r3, #20]
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx stream */
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 3387              		.loc 1 2091 20
 3388 0168 7B68     		ldr	r3, [r7, #4]
 3389 016a 5B6B     		ldr	r3, [r3, #52]
 3390              		.loc 1 2091 14
 3391 016c 002B     		cmp	r3, #0
 3392 016e 13D0     		beq	.L144
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3393              		.loc 1 2095 18
 3394 0170 7B68     		ldr	r3, [r7, #4]
 3395 0172 5B6B     		ldr	r3, [r3, #52]
 3396              		.loc 1 2095 46
 3397 0174 214A     		ldr	r2, .L149
 3398 0176 1A65     		str	r2, [r3, #80]
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3399              		.loc 1 2096 17
 3400 0178 7B68     		ldr	r3, [r7, #4]
 3401 017a 5B6B     		ldr	r3, [r3, #52]
 3402 017c 1846     		mov	r0, r3
 3403 017e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3404 0182 0346     		mov	r3, r0
 3405              		.loc 1 2096 16
 3406 0184 002B     		cmp	r3, #0
 3407 0186 16D0     		beq	.L148
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3408              		.loc 1 2099 20
 3409 0188 7B68     		ldr	r3, [r7, #4]
 3410 018a 5B6B     		ldr	r3, [r3, #52]
 3411              		.loc 1 2099 28
 3412 018c 1B6D     		ldr	r3, [r3, #80]
 3413              		.loc 1 2099 53
 3414 018e 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 97


 3415 0190 526B     		ldr	r2, [r2, #52]
 3416              		.loc 1 2099 15
 3417 0192 1046     		mov	r0, r2
 3418 0194 9847     		blx	r3
 3419              	.LVL2:
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3420              		.loc 1 2086 12
 3421 0196 0EE0     		b	.L148
 3422              	.L144:
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call registered error callback*/
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3423              		.loc 1 2110 13
 3424 0198 7868     		ldr	r0, [r7, #4]
 3425 019a FFF7FEFF 		bl	HAL_UART_ErrorCallback
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3426              		.loc 1 2086 12
 3427 019e 0AE0     		b	.L148
 3428              	.L143:
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call registered error callback*/
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3429              		.loc 1 2122 11
 3430 01a0 7868     		ldr	r0, [r7, #4]
 3431 01a2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3432              		.loc 1 2086 12
 3433 01a6 06E0     		b	.L148
 3434              	.L142:
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered error callback*/
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 98


2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3435              		.loc 1 2135 9
 3436 01a8 7868     		ldr	r0, [r7, #4]
 3437 01aa FFF7FEFF 		bl	HAL_UART_ErrorCallback
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3438              		.loc 1 2138 26
 3439 01ae 7B68     		ldr	r3, [r7, #4]
 3440 01b0 0022     		movs	r2, #0
 3441 01b2 DA63     		str	r2, [r3, #60]
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3442              		.loc 1 2141 5
 3443 01b4 1DE0     		b	.L147
 3444              	.L148:
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3445              		.loc 1 2086 12
 3446 01b6 00BF     		nop
 3447              		.loc 1 2141 5
 3448 01b8 1BE0     		b	.L147
 3449              	.L132:
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 3450              		.loc 1 2145 18
 3451 01ba FB69     		ldr	r3, [r7, #28]
 3452 01bc 03F08003 		and	r3, r3, #128
 3453              		.loc 1 2145 6
 3454 01c0 002B     		cmp	r3, #0
 3455 01c2 08D0     		beq	.L146
 3456              		.loc 1 2145 56 discriminator 1
 3457 01c4 BB69     		ldr	r3, [r7, #24]
 3458 01c6 03F08003 		and	r3, r3, #128
 3459              		.loc 1 2145 44 discriminator 1
 3460 01ca 002B     		cmp	r3, #0
 3461 01cc 03D0     		beq	.L146
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
 3462              		.loc 1 2147 5
 3463 01ce 7868     		ldr	r0, [r7, #4]
 3464 01d0 FFF7FEFF 		bl	UART_Transmit_IT
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3465              		.loc 1 2148 5
 3466 01d4 0EE0     		b	.L129
 3467              	.L146:
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 3468              		.loc 1 2152 18
 3469 01d6 FB69     		ldr	r3, [r7, #28]
 3470 01d8 03F04003 		and	r3, r3, #64
 3471              		.loc 1 2152 6
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 99


 3472 01dc 002B     		cmp	r3, #0
 3473 01de 09D0     		beq	.L129
 3474              		.loc 1 2152 55 discriminator 1
 3475 01e0 BB69     		ldr	r3, [r7, #24]
 3476 01e2 03F04003 		and	r3, r3, #64
 3477              		.loc 1 2152 43 discriminator 1
 3478 01e6 002B     		cmp	r3, #0
 3479 01e8 04D0     		beq	.L129
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 3480              		.loc 1 2154 5
 3481 01ea 7868     		ldr	r0, [r7, #4]
 3482 01ec FFF7FEFF 		bl	UART_EndTransmit_IT
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3483              		.loc 1 2155 5
 3484 01f0 00E0     		b	.L129
 3485              	.L147:
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
 3486              		.loc 1 2141 5
 3487 01f2 00BF     		nop
 3488              	.L129:
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3489              		.loc 1 2157 1
 3490 01f4 2037     		adds	r7, r7, #32
 3491              	.LCFI119:
 3492              		.cfi_def_cfa_offset 8
 3493 01f6 BD46     		mov	sp, r7
 3494              	.LCFI120:
 3495              		.cfi_def_cfa_register 13
 3496              		@ sp needed
 3497 01f8 80BD     		pop	{r7, pc}
 3498              	.L150:
 3499 01fa 00BF     		.align	2
 3500              	.L149:
 3501 01fc 00000000 		.word	UART_DMAAbortOnError
 3502              		.cfi_endproc
 3503              	.LFE152:
 3505              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3506              		.align	1
 3507              		.weak	HAL_UART_TxCpltCallback
 3508              		.syntax unified
 3509              		.thumb
 3510              		.thumb_func
 3511              		.fpu fpv4-sp-d16
 3513              	HAL_UART_TxCpltCallback:
 3514              	.LFB153:
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3515              		.loc 1 2166 1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 100


 3516              		.cfi_startproc
 3517              		@ args = 0, pretend = 0, frame = 8
 3518              		@ frame_needed = 1, uses_anonymous_args = 0
 3519              		@ link register save eliminated.
 3520 0000 80B4     		push	{r7}
 3521              	.LCFI121:
 3522              		.cfi_def_cfa_offset 4
 3523              		.cfi_offset 7, -4
 3524 0002 83B0     		sub	sp, sp, #12
 3525              	.LCFI122:
 3526              		.cfi_def_cfa_offset 16
 3527 0004 00AF     		add	r7, sp, #0
 3528              	.LCFI123:
 3529              		.cfi_def_cfa_register 7
 3530 0006 7860     		str	r0, [r7, #4]
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3531              		.loc 1 2172 1
 3532 0008 00BF     		nop
 3533 000a 0C37     		adds	r7, r7, #12
 3534              	.LCFI124:
 3535              		.cfi_def_cfa_offset 4
 3536 000c BD46     		mov	sp, r7
 3537              	.LCFI125:
 3538              		.cfi_def_cfa_register 13
 3539              		@ sp needed
 3540 000e 5DF8047B 		ldr	r7, [sp], #4
 3541              	.LCFI126:
 3542              		.cfi_restore 7
 3543              		.cfi_def_cfa_offset 0
 3544 0012 7047     		bx	lr
 3545              		.cfi_endproc
 3546              	.LFE153:
 3548              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3549              		.align	1
 3550              		.weak	HAL_UART_TxHalfCpltCallback
 3551              		.syntax unified
 3552              		.thumb
 3553              		.thumb_func
 3554              		.fpu fpv4-sp-d16
 3556              	HAL_UART_TxHalfCpltCallback:
 3557              	.LFB154:
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3558              		.loc 1 2181 1
 3559              		.cfi_startproc
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 101


 3560              		@ args = 0, pretend = 0, frame = 8
 3561              		@ frame_needed = 1, uses_anonymous_args = 0
 3562              		@ link register save eliminated.
 3563 0000 80B4     		push	{r7}
 3564              	.LCFI127:
 3565              		.cfi_def_cfa_offset 4
 3566              		.cfi_offset 7, -4
 3567 0002 83B0     		sub	sp, sp, #12
 3568              	.LCFI128:
 3569              		.cfi_def_cfa_offset 16
 3570 0004 00AF     		add	r7, sp, #0
 3571              	.LCFI129:
 3572              		.cfi_def_cfa_register 7
 3573 0006 7860     		str	r0, [r7, #4]
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3574              		.loc 1 2187 1
 3575 0008 00BF     		nop
 3576 000a 0C37     		adds	r7, r7, #12
 3577              	.LCFI130:
 3578              		.cfi_def_cfa_offset 4
 3579 000c BD46     		mov	sp, r7
 3580              	.LCFI131:
 3581              		.cfi_def_cfa_register 13
 3582              		@ sp needed
 3583 000e 5DF8047B 		ldr	r7, [sp], #4
 3584              	.LCFI132:
 3585              		.cfi_restore 7
 3586              		.cfi_def_cfa_offset 0
 3587 0012 7047     		bx	lr
 3588              		.cfi_endproc
 3589              	.LFE154:
 3591              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3592              		.align	1
 3593              		.weak	HAL_UART_RxCpltCallback
 3594              		.syntax unified
 3595              		.thumb
 3596              		.thumb_func
 3597              		.fpu fpv4-sp-d16
 3599              	HAL_UART_RxCpltCallback:
 3600              	.LFB155:
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3601              		.loc 1 2196 1
 3602              		.cfi_startproc
 3603              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 102


 3604              		@ frame_needed = 1, uses_anonymous_args = 0
 3605              		@ link register save eliminated.
 3606 0000 80B4     		push	{r7}
 3607              	.LCFI133:
 3608              		.cfi_def_cfa_offset 4
 3609              		.cfi_offset 7, -4
 3610 0002 83B0     		sub	sp, sp, #12
 3611              	.LCFI134:
 3612              		.cfi_def_cfa_offset 16
 3613 0004 00AF     		add	r7, sp, #0
 3614              	.LCFI135:
 3615              		.cfi_def_cfa_register 7
 3616 0006 7860     		str	r0, [r7, #4]
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3617              		.loc 1 2202 1
 3618 0008 00BF     		nop
 3619 000a 0C37     		adds	r7, r7, #12
 3620              	.LCFI136:
 3621              		.cfi_def_cfa_offset 4
 3622 000c BD46     		mov	sp, r7
 3623              	.LCFI137:
 3624              		.cfi_def_cfa_register 13
 3625              		@ sp needed
 3626 000e 5DF8047B 		ldr	r7, [sp], #4
 3627              	.LCFI138:
 3628              		.cfi_restore 7
 3629              		.cfi_def_cfa_offset 0
 3630 0012 7047     		bx	lr
 3631              		.cfi_endproc
 3632              	.LFE155:
 3634              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3635              		.align	1
 3636              		.weak	HAL_UART_RxHalfCpltCallback
 3637              		.syntax unified
 3638              		.thumb
 3639              		.thumb_func
 3640              		.fpu fpv4-sp-d16
 3642              	HAL_UART_RxHalfCpltCallback:
 3643              	.LFB156:
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3644              		.loc 1 2211 1
 3645              		.cfi_startproc
 3646              		@ args = 0, pretend = 0, frame = 8
 3647              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 103


 3648              		@ link register save eliminated.
 3649 0000 80B4     		push	{r7}
 3650              	.LCFI139:
 3651              		.cfi_def_cfa_offset 4
 3652              		.cfi_offset 7, -4
 3653 0002 83B0     		sub	sp, sp, #12
 3654              	.LCFI140:
 3655              		.cfi_def_cfa_offset 16
 3656 0004 00AF     		add	r7, sp, #0
 3657              	.LCFI141:
 3658              		.cfi_def_cfa_register 7
 3659 0006 7860     		str	r0, [r7, #4]
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3660              		.loc 1 2217 1
 3661 0008 00BF     		nop
 3662 000a 0C37     		adds	r7, r7, #12
 3663              	.LCFI142:
 3664              		.cfi_def_cfa_offset 4
 3665 000c BD46     		mov	sp, r7
 3666              	.LCFI143:
 3667              		.cfi_def_cfa_register 13
 3668              		@ sp needed
 3669 000e 5DF8047B 		ldr	r7, [sp], #4
 3670              	.LCFI144:
 3671              		.cfi_restore 7
 3672              		.cfi_def_cfa_offset 0
 3673 0012 7047     		bx	lr
 3674              		.cfi_endproc
 3675              	.LFE156:
 3677              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3678              		.align	1
 3679              		.weak	HAL_UART_ErrorCallback
 3680              		.syntax unified
 3681              		.thumb
 3682              		.thumb_func
 3683              		.fpu fpv4-sp-d16
 3685              	HAL_UART_ErrorCallback:
 3686              	.LFB157:
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3687              		.loc 1 2226 1
 3688              		.cfi_startproc
 3689              		@ args = 0, pretend = 0, frame = 8
 3690              		@ frame_needed = 1, uses_anonymous_args = 0
 3691              		@ link register save eliminated.
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 104


 3692 0000 80B4     		push	{r7}
 3693              	.LCFI145:
 3694              		.cfi_def_cfa_offset 4
 3695              		.cfi_offset 7, -4
 3696 0002 83B0     		sub	sp, sp, #12
 3697              	.LCFI146:
 3698              		.cfi_def_cfa_offset 16
 3699 0004 00AF     		add	r7, sp, #0
 3700              	.LCFI147:
 3701              		.cfi_def_cfa_register 7
 3702 0006 7860     		str	r0, [r7, #4]
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3703              		.loc 1 2232 1
 3704 0008 00BF     		nop
 3705 000a 0C37     		adds	r7, r7, #12
 3706              	.LCFI148:
 3707              		.cfi_def_cfa_offset 4
 3708 000c BD46     		mov	sp, r7
 3709              	.LCFI149:
 3710              		.cfi_def_cfa_register 13
 3711              		@ sp needed
 3712 000e 5DF8047B 		ldr	r7, [sp], #4
 3713              	.LCFI150:
 3714              		.cfi_restore 7
 3715              		.cfi_def_cfa_offset 0
 3716 0012 7047     		bx	lr
 3717              		.cfi_endproc
 3718              	.LFE157:
 3720              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3721              		.align	1
 3722              		.weak	HAL_UART_AbortCpltCallback
 3723              		.syntax unified
 3724              		.thumb
 3725              		.thumb_func
 3726              		.fpu fpv4-sp-d16
 3728              	HAL_UART_AbortCpltCallback:
 3729              	.LFB158:
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3730              		.loc 1 2240 1
 3731              		.cfi_startproc
 3732              		@ args = 0, pretend = 0, frame = 8
 3733              		@ frame_needed = 1, uses_anonymous_args = 0
 3734              		@ link register save eliminated.
 3735 0000 80B4     		push	{r7}
 3736              	.LCFI151:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 105


 3737              		.cfi_def_cfa_offset 4
 3738              		.cfi_offset 7, -4
 3739 0002 83B0     		sub	sp, sp, #12
 3740              	.LCFI152:
 3741              		.cfi_def_cfa_offset 16
 3742 0004 00AF     		add	r7, sp, #0
 3743              	.LCFI153:
 3744              		.cfi_def_cfa_register 7
 3745 0006 7860     		str	r0, [r7, #4]
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3746              		.loc 1 2247 1
 3747 0008 00BF     		nop
 3748 000a 0C37     		adds	r7, r7, #12
 3749              	.LCFI154:
 3750              		.cfi_def_cfa_offset 4
 3751 000c BD46     		mov	sp, r7
 3752              	.LCFI155:
 3753              		.cfi_def_cfa_register 13
 3754              		@ sp needed
 3755 000e 5DF8047B 		ldr	r7, [sp], #4
 3756              	.LCFI156:
 3757              		.cfi_restore 7
 3758              		.cfi_def_cfa_offset 0
 3759 0012 7047     		bx	lr
 3760              		.cfi_endproc
 3761              	.LFE158:
 3763              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3764              		.align	1
 3765              		.weak	HAL_UART_AbortTransmitCpltCallback
 3766              		.syntax unified
 3767              		.thumb
 3768              		.thumb_func
 3769              		.fpu fpv4-sp-d16
 3771              	HAL_UART_AbortTransmitCpltCallback:
 3772              	.LFB159:
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3773              		.loc 1 2255 1
 3774              		.cfi_startproc
 3775              		@ args = 0, pretend = 0, frame = 8
 3776              		@ frame_needed = 1, uses_anonymous_args = 0
 3777              		@ link register save eliminated.
 3778 0000 80B4     		push	{r7}
 3779              	.LCFI157:
 3780              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 106


 3781              		.cfi_offset 7, -4
 3782 0002 83B0     		sub	sp, sp, #12
 3783              	.LCFI158:
 3784              		.cfi_def_cfa_offset 16
 3785 0004 00AF     		add	r7, sp, #0
 3786              	.LCFI159:
 3787              		.cfi_def_cfa_register 7
 3788 0006 7860     		str	r0, [r7, #4]
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3789              		.loc 1 2262 1
 3790 0008 00BF     		nop
 3791 000a 0C37     		adds	r7, r7, #12
 3792              	.LCFI160:
 3793              		.cfi_def_cfa_offset 4
 3794 000c BD46     		mov	sp, r7
 3795              	.LCFI161:
 3796              		.cfi_def_cfa_register 13
 3797              		@ sp needed
 3798 000e 5DF8047B 		ldr	r7, [sp], #4
 3799              	.LCFI162:
 3800              		.cfi_restore 7
 3801              		.cfi_def_cfa_offset 0
 3802 0012 7047     		bx	lr
 3803              		.cfi_endproc
 3804              	.LFE159:
 3806              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3807              		.align	1
 3808              		.weak	HAL_UART_AbortReceiveCpltCallback
 3809              		.syntax unified
 3810              		.thumb
 3811              		.thumb_func
 3812              		.fpu fpv4-sp-d16
 3814              	HAL_UART_AbortReceiveCpltCallback:
 3815              	.LFB160:
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3816              		.loc 1 2270 1
 3817              		.cfi_startproc
 3818              		@ args = 0, pretend = 0, frame = 8
 3819              		@ frame_needed = 1, uses_anonymous_args = 0
 3820              		@ link register save eliminated.
 3821 0000 80B4     		push	{r7}
 3822              	.LCFI163:
 3823              		.cfi_def_cfa_offset 4
 3824              		.cfi_offset 7, -4
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 107


 3825 0002 83B0     		sub	sp, sp, #12
 3826              	.LCFI164:
 3827              		.cfi_def_cfa_offset 16
 3828 0004 00AF     		add	r7, sp, #0
 3829              	.LCFI165:
 3830              		.cfi_def_cfa_register 7
 3831 0006 7860     		str	r0, [r7, #4]
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3832              		.loc 1 2277 1
 3833 0008 00BF     		nop
 3834 000a 0C37     		adds	r7, r7, #12
 3835              	.LCFI166:
 3836              		.cfi_def_cfa_offset 4
 3837 000c BD46     		mov	sp, r7
 3838              	.LCFI167:
 3839              		.cfi_def_cfa_register 13
 3840              		@ sp needed
 3841 000e 5DF8047B 		ldr	r7, [sp], #4
 3842              	.LCFI168:
 3843              		.cfi_restore 7
 3844              		.cfi_def_cfa_offset 0
 3845 0012 7047     		bx	lr
 3846              		.cfi_endproc
 3847              	.LFE160:
 3849              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3850              		.align	1
 3851              		.global	HAL_LIN_SendBreak
 3852              		.syntax unified
 3853              		.thumb
 3854              		.thumb_func
 3855              		.fpu fpv4-sp-d16
 3857              	HAL_LIN_SendBreak:
 3858              	.LFB161:
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 108


2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3859              		.loc 1 2309 1
 3860              		.cfi_startproc
 3861              		@ args = 0, pretend = 0, frame = 8
 3862              		@ frame_needed = 1, uses_anonymous_args = 0
 3863              		@ link register save eliminated.
 3864 0000 80B4     		push	{r7}
 3865              	.LCFI169:
 3866              		.cfi_def_cfa_offset 4
 3867              		.cfi_offset 7, -4
 3868 0002 83B0     		sub	sp, sp, #12
 3869              	.LCFI170:
 3870              		.cfi_def_cfa_offset 16
 3871 0004 00AF     		add	r7, sp, #0
 3872              	.LCFI171:
 3873              		.cfi_def_cfa_register 7
 3874 0006 7860     		str	r0, [r7, #4]
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3875              		.loc 1 2314 3
 3876 0008 7B68     		ldr	r3, [r7, #4]
 3877 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3878 000e 012B     		cmp	r3, #1
 3879 0010 01D1     		bne	.L160
 3880              		.loc 1 2314 3 is_stmt 0 discriminator 1
 3881 0012 0223     		movs	r3, #2
 3882 0014 18E0     		b	.L161
 3883              	.L160:
 3884              		.loc 1 2314 3 discriminator 2
 3885 0016 7B68     		ldr	r3, [r7, #4]
 3886 0018 0122     		movs	r2, #1
 3887 001a 83F83820 		strb	r2, [r3, #56]
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3888              		.loc 1 2316 17 is_stmt 1 discriminator 2
 3889 001e 7B68     		ldr	r3, [r7, #4]
 3890 0020 2422     		movs	r2, #36
 3891 0022 83F83920 		strb	r2, [r3, #57]
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 109


 3892              		.loc 1 2319 3 discriminator 2
 3893 0026 7B68     		ldr	r3, [r7, #4]
 3894 0028 1B68     		ldr	r3, [r3]
 3895 002a DA68     		ldr	r2, [r3, #12]
 3896 002c 7B68     		ldr	r3, [r7, #4]
 3897 002e 1B68     		ldr	r3, [r3]
 3898 0030 42F00102 		orr	r2, r2, #1
 3899 0034 DA60     		str	r2, [r3, #12]
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3900              		.loc 1 2321 17 discriminator 2
 3901 0036 7B68     		ldr	r3, [r7, #4]
 3902 0038 2022     		movs	r2, #32
 3903 003a 83F83920 		strb	r2, [r3, #57]
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3904              		.loc 1 2324 3 discriminator 2
 3905 003e 7B68     		ldr	r3, [r7, #4]
 3906 0040 0022     		movs	r2, #0
 3907 0042 83F83820 		strb	r2, [r3, #56]
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3908              		.loc 1 2326 10 discriminator 2
 3909 0046 0023     		movs	r3, #0
 3910              	.L161:
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3911              		.loc 1 2327 1
 3912 0048 1846     		mov	r0, r3
 3913 004a 0C37     		adds	r7, r7, #12
 3914              	.LCFI172:
 3915              		.cfi_def_cfa_offset 4
 3916 004c BD46     		mov	sp, r7
 3917              	.LCFI173:
 3918              		.cfi_def_cfa_register 13
 3919              		@ sp needed
 3920 004e 5DF8047B 		ldr	r7, [sp], #4
 3921              	.LCFI174:
 3922              		.cfi_restore 7
 3923              		.cfi_def_cfa_offset 0
 3924 0052 7047     		bx	lr
 3925              		.cfi_endproc
 3926              	.LFE161:
 3928              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3929              		.align	1
 3930              		.global	HAL_MultiProcessor_EnterMuteMode
 3931              		.syntax unified
 3932              		.thumb
 3933              		.thumb_func
 3934              		.fpu fpv4-sp-d16
 3936              	HAL_MultiProcessor_EnterMuteMode:
 3937              	.LFB162:
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 110


2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3938              		.loc 1 2336 1
 3939              		.cfi_startproc
 3940              		@ args = 0, pretend = 0, frame = 8
 3941              		@ frame_needed = 1, uses_anonymous_args = 0
 3942              		@ link register save eliminated.
 3943 0000 80B4     		push	{r7}
 3944              	.LCFI175:
 3945              		.cfi_def_cfa_offset 4
 3946              		.cfi_offset 7, -4
 3947 0002 83B0     		sub	sp, sp, #12
 3948              	.LCFI176:
 3949              		.cfi_def_cfa_offset 16
 3950 0004 00AF     		add	r7, sp, #0
 3951              	.LCFI177:
 3952              		.cfi_def_cfa_register 7
 3953 0006 7860     		str	r0, [r7, #4]
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3954              		.loc 1 2341 3
 3955 0008 7B68     		ldr	r3, [r7, #4]
 3956 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3957 000e 012B     		cmp	r3, #1
 3958 0010 01D1     		bne	.L163
 3959              		.loc 1 2341 3 is_stmt 0 discriminator 1
 3960 0012 0223     		movs	r3, #2
 3961 0014 18E0     		b	.L164
 3962              	.L163:
 3963              		.loc 1 2341 3 discriminator 2
 3964 0016 7B68     		ldr	r3, [r7, #4]
 3965 0018 0122     		movs	r2, #1
 3966 001a 83F83820 		strb	r2, [r3, #56]
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3967              		.loc 1 2343 17 is_stmt 1 discriminator 2
 3968 001e 7B68     		ldr	r3, [r7, #4]
 3969 0020 2422     		movs	r2, #36
 3970 0022 83F83920 		strb	r2, [r3, #57]
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 3971              		.loc 1 2346 3 discriminator 2
 3972 0026 7B68     		ldr	r3, [r7, #4]
 3973 0028 1B68     		ldr	r3, [r3]
 3974 002a DA68     		ldr	r2, [r3, #12]
 3975 002c 7B68     		ldr	r3, [r7, #4]
 3976 002e 1B68     		ldr	r3, [r3]
 3977 0030 42F00202 		orr	r2, r2, #2
 3978 0034 DA60     		str	r2, [r3, #12]
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 111


 3979              		.loc 1 2348 17 discriminator 2
 3980 0036 7B68     		ldr	r3, [r7, #4]
 3981 0038 2022     		movs	r2, #32
 3982 003a 83F83920 		strb	r2, [r3, #57]
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3983              		.loc 1 2351 3 discriminator 2
 3984 003e 7B68     		ldr	r3, [r7, #4]
 3985 0040 0022     		movs	r2, #0
 3986 0042 83F83820 		strb	r2, [r3, #56]
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3987              		.loc 1 2353 10 discriminator 2
 3988 0046 0023     		movs	r3, #0
 3989              	.L164:
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3990              		.loc 1 2354 1
 3991 0048 1846     		mov	r0, r3
 3992 004a 0C37     		adds	r7, r7, #12
 3993              	.LCFI178:
 3994              		.cfi_def_cfa_offset 4
 3995 004c BD46     		mov	sp, r7
 3996              	.LCFI179:
 3997              		.cfi_def_cfa_register 13
 3998              		@ sp needed
 3999 004e 5DF8047B 		ldr	r7, [sp], #4
 4000              	.LCFI180:
 4001              		.cfi_restore 7
 4002              		.cfi_def_cfa_offset 0
 4003 0052 7047     		bx	lr
 4004              		.cfi_endproc
 4005              	.LFE162:
 4007              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 4008              		.align	1
 4009              		.global	HAL_MultiProcessor_ExitMuteMode
 4010              		.syntax unified
 4011              		.thumb
 4012              		.thumb_func
 4013              		.fpu fpv4-sp-d16
 4015              	HAL_MultiProcessor_ExitMuteMode:
 4016              	.LFB163:
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4017              		.loc 1 2363 1
 4018              		.cfi_startproc
 4019              		@ args = 0, pretend = 0, frame = 8
 4020              		@ frame_needed = 1, uses_anonymous_args = 0
 4021              		@ link register save eliminated.
 4022 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 112


 4023              	.LCFI181:
 4024              		.cfi_def_cfa_offset 4
 4025              		.cfi_offset 7, -4
 4026 0002 83B0     		sub	sp, sp, #12
 4027              	.LCFI182:
 4028              		.cfi_def_cfa_offset 16
 4029 0004 00AF     		add	r7, sp, #0
 4030              	.LCFI183:
 4031              		.cfi_def_cfa_register 7
 4032 0006 7860     		str	r0, [r7, #4]
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4033              		.loc 1 2368 3
 4034 0008 7B68     		ldr	r3, [r7, #4]
 4035 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 4036 000e 012B     		cmp	r3, #1
 4037 0010 01D1     		bne	.L166
 4038              		.loc 1 2368 3 is_stmt 0 discriminator 1
 4039 0012 0223     		movs	r3, #2
 4040 0014 18E0     		b	.L167
 4041              	.L166:
 4042              		.loc 1 2368 3 discriminator 2
 4043 0016 7B68     		ldr	r3, [r7, #4]
 4044 0018 0122     		movs	r2, #1
 4045 001a 83F83820 		strb	r2, [r3, #56]
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4046              		.loc 1 2370 17 is_stmt 1 discriminator 2
 4047 001e 7B68     		ldr	r3, [r7, #4]
 4048 0020 2422     		movs	r2, #36
 4049 0022 83F83920 		strb	r2, [r3, #57]
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 4050              		.loc 1 2373 3 discriminator 2
 4051 0026 7B68     		ldr	r3, [r7, #4]
 4052 0028 1B68     		ldr	r3, [r3]
 4053 002a DA68     		ldr	r2, [r3, #12]
 4054 002c 7B68     		ldr	r3, [r7, #4]
 4055 002e 1B68     		ldr	r3, [r3]
 4056 0030 22F00202 		bic	r2, r2, #2
 4057 0034 DA60     		str	r2, [r3, #12]
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4058              		.loc 1 2375 17 discriminator 2
 4059 0036 7B68     		ldr	r3, [r7, #4]
 4060 0038 2022     		movs	r2, #32
 4061 003a 83F83920 		strb	r2, [r3, #57]
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4062              		.loc 1 2378 3 discriminator 2
 4063 003e 7B68     		ldr	r3, [r7, #4]
 4064 0040 0022     		movs	r2, #0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 113


 4065 0042 83F83820 		strb	r2, [r3, #56]
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4066              		.loc 1 2380 10 discriminator 2
 4067 0046 0023     		movs	r3, #0
 4068              	.L167:
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4069              		.loc 1 2381 1
 4070 0048 1846     		mov	r0, r3
 4071 004a 0C37     		adds	r7, r7, #12
 4072              	.LCFI184:
 4073              		.cfi_def_cfa_offset 4
 4074 004c BD46     		mov	sp, r7
 4075              	.LCFI185:
 4076              		.cfi_def_cfa_register 13
 4077              		@ sp needed
 4078 004e 5DF8047B 		ldr	r7, [sp], #4
 4079              	.LCFI186:
 4080              		.cfi_restore 7
 4081              		.cfi_def_cfa_offset 0
 4082 0052 7047     		bx	lr
 4083              		.cfi_endproc
 4084              	.LFE163:
 4086              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 4087              		.align	1
 4088              		.global	HAL_HalfDuplex_EnableTransmitter
 4089              		.syntax unified
 4090              		.thumb
 4091              		.thumb_func
 4092              		.fpu fpv4-sp-d16
 4094              	HAL_HalfDuplex_EnableTransmitter:
 4095              	.LFB164:
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4096              		.loc 1 2390 1
 4097              		.cfi_startproc
 4098              		@ args = 0, pretend = 0, frame = 16
 4099              		@ frame_needed = 1, uses_anonymous_args = 0
 4100              		@ link register save eliminated.
 4101 0000 80B4     		push	{r7}
 4102              	.LCFI187:
 4103              		.cfi_def_cfa_offset 4
 4104              		.cfi_offset 7, -4
 4105 0002 85B0     		sub	sp, sp, #20
 4106              	.LCFI188:
 4107              		.cfi_def_cfa_offset 24
 4108 0004 00AF     		add	r7, sp, #0
 4109              	.LCFI189:
 4110              		.cfi_def_cfa_register 7
 4111 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 114


2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4112              		.loc 1 2391 12
 4113 0008 0023     		movs	r3, #0
 4114 000a FB60     		str	r3, [r7, #12]
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4115              		.loc 1 2394 3
 4116 000c 7B68     		ldr	r3, [r7, #4]
 4117 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 4118 0012 012B     		cmp	r3, #1
 4119 0014 01D1     		bne	.L169
 4120              		.loc 1 2394 3 is_stmt 0 discriminator 1
 4121 0016 0223     		movs	r3, #2
 4122 0018 20E0     		b	.L170
 4123              	.L169:
 4124              		.loc 1 2394 3 discriminator 2
 4125 001a 7B68     		ldr	r3, [r7, #4]
 4126 001c 0122     		movs	r2, #1
 4127 001e 83F83820 		strb	r2, [r3, #56]
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4128              		.loc 1 2396 17 is_stmt 1 discriminator 2
 4129 0022 7B68     		ldr	r3, [r7, #4]
 4130 0024 2422     		movs	r2, #36
 4131 0026 83F83920 		strb	r2, [r3, #57]
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 4132              		.loc 1 2399 17 discriminator 2
 4133 002a 7B68     		ldr	r3, [r7, #4]
 4134 002c 1B68     		ldr	r3, [r3]
 4135              		.loc 1 2399 10 discriminator 2
 4136 002e DB68     		ldr	r3, [r3, #12]
 4137 0030 FB60     		str	r3, [r7, #12]
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 4138              		.loc 1 2402 10 discriminator 2
 4139 0032 FB68     		ldr	r3, [r7, #12]
 4140 0034 23F00C03 		bic	r3, r3, #12
 4141 0038 FB60     		str	r3, [r7, #12]
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 4142              		.loc 1 2405 10 discriminator 2
 4143 003a FB68     		ldr	r3, [r7, #12]
 4144 003c 43F00803 		orr	r3, r3, #8
 4145 0040 FB60     		str	r3, [r7, #12]
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 4146              		.loc 1 2408 3 discriminator 2
 4147 0042 7B68     		ldr	r3, [r7, #4]
 4148 0044 1B68     		ldr	r3, [r3]
 4149 0046 FA68     		ldr	r2, [r7, #12]
 4150 0048 DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 115


2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4151              		.loc 1 2410 17 discriminator 2
 4152 004a 7B68     		ldr	r3, [r7, #4]
 4153 004c 2022     		movs	r2, #32
 4154 004e 83F83920 		strb	r2, [r3, #57]
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4155              		.loc 1 2413 3 discriminator 2
 4156 0052 7B68     		ldr	r3, [r7, #4]
 4157 0054 0022     		movs	r2, #0
 4158 0056 83F83820 		strb	r2, [r3, #56]
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4159              		.loc 1 2415 10 discriminator 2
 4160 005a 0023     		movs	r3, #0
 4161              	.L170:
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4162              		.loc 1 2416 1
 4163 005c 1846     		mov	r0, r3
 4164 005e 1437     		adds	r7, r7, #20
 4165              	.LCFI190:
 4166              		.cfi_def_cfa_offset 4
 4167 0060 BD46     		mov	sp, r7
 4168              	.LCFI191:
 4169              		.cfi_def_cfa_register 13
 4170              		@ sp needed
 4171 0062 5DF8047B 		ldr	r7, [sp], #4
 4172              	.LCFI192:
 4173              		.cfi_restore 7
 4174              		.cfi_def_cfa_offset 0
 4175 0066 7047     		bx	lr
 4176              		.cfi_endproc
 4177              	.LFE164:
 4179              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4180              		.align	1
 4181              		.global	HAL_HalfDuplex_EnableReceiver
 4182              		.syntax unified
 4183              		.thumb
 4184              		.thumb_func
 4185              		.fpu fpv4-sp-d16
 4187              	HAL_HalfDuplex_EnableReceiver:
 4188              	.LFB165:
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4189              		.loc 1 2425 1
 4190              		.cfi_startproc
 4191              		@ args = 0, pretend = 0, frame = 16
 4192              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 116


 4193              		@ link register save eliminated.
 4194 0000 80B4     		push	{r7}
 4195              	.LCFI193:
 4196              		.cfi_def_cfa_offset 4
 4197              		.cfi_offset 7, -4
 4198 0002 85B0     		sub	sp, sp, #20
 4199              	.LCFI194:
 4200              		.cfi_def_cfa_offset 24
 4201 0004 00AF     		add	r7, sp, #0
 4202              	.LCFI195:
 4203              		.cfi_def_cfa_register 7
 4204 0006 7860     		str	r0, [r7, #4]
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4205              		.loc 1 2426 12
 4206 0008 0023     		movs	r3, #0
 4207 000a FB60     		str	r3, [r7, #12]
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4208              		.loc 1 2429 3
 4209 000c 7B68     		ldr	r3, [r7, #4]
 4210 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 4211 0012 012B     		cmp	r3, #1
 4212 0014 01D1     		bne	.L172
 4213              		.loc 1 2429 3 is_stmt 0 discriminator 1
 4214 0016 0223     		movs	r3, #2
 4215 0018 20E0     		b	.L173
 4216              	.L172:
 4217              		.loc 1 2429 3 discriminator 2
 4218 001a 7B68     		ldr	r3, [r7, #4]
 4219 001c 0122     		movs	r2, #1
 4220 001e 83F83820 		strb	r2, [r3, #56]
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4221              		.loc 1 2431 17 is_stmt 1 discriminator 2
 4222 0022 7B68     		ldr	r3, [r7, #4]
 4223 0024 2422     		movs	r2, #36
 4224 0026 83F83920 		strb	r2, [r3, #57]
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 4225              		.loc 1 2434 17 discriminator 2
 4226 002a 7B68     		ldr	r3, [r7, #4]
 4227 002c 1B68     		ldr	r3, [r3]
 4228              		.loc 1 2434 10 discriminator 2
 4229 002e DB68     		ldr	r3, [r3, #12]
 4230 0030 FB60     		str	r3, [r7, #12]
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 4231              		.loc 1 2437 10 discriminator 2
 4232 0032 FB68     		ldr	r3, [r7, #12]
 4233 0034 23F00C03 		bic	r3, r3, #12
 4234 0038 FB60     		str	r3, [r7, #12]
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 117


 4235              		.loc 1 2440 10 discriminator 2
 4236 003a FB68     		ldr	r3, [r7, #12]
 4237 003c 43F00403 		orr	r3, r3, #4
 4238 0040 FB60     		str	r3, [r7, #12]
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 4239              		.loc 1 2443 3 discriminator 2
 4240 0042 7B68     		ldr	r3, [r7, #4]
 4241 0044 1B68     		ldr	r3, [r3]
 4242 0046 FA68     		ldr	r2, [r7, #12]
 4243 0048 DA60     		str	r2, [r3, #12]
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4244              		.loc 1 2445 17 discriminator 2
 4245 004a 7B68     		ldr	r3, [r7, #4]
 4246 004c 2022     		movs	r2, #32
 4247 004e 83F83920 		strb	r2, [r3, #57]
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4248              		.loc 1 2448 3 discriminator 2
 4249 0052 7B68     		ldr	r3, [r7, #4]
 4250 0054 0022     		movs	r2, #0
 4251 0056 83F83820 		strb	r2, [r3, #56]
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4252              		.loc 1 2450 10 discriminator 2
 4253 005a 0023     		movs	r3, #0
 4254              	.L173:
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4255              		.loc 1 2451 1
 4256 005c 1846     		mov	r0, r3
 4257 005e 1437     		adds	r7, r7, #20
 4258              	.LCFI196:
 4259              		.cfi_def_cfa_offset 4
 4260 0060 BD46     		mov	sp, r7
 4261              	.LCFI197:
 4262              		.cfi_def_cfa_register 13
 4263              		@ sp needed
 4264 0062 5DF8047B 		ldr	r7, [sp], #4
 4265              	.LCFI198:
 4266              		.cfi_restore 7
 4267              		.cfi_def_cfa_offset 0
 4268 0066 7047     		bx	lr
 4269              		.cfi_endproc
 4270              	.LFE165:
 4272              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4273              		.align	1
 4274              		.global	HAL_UART_GetState
 4275              		.syntax unified
 4276              		.thumb
 4277              		.thumb_func
 4278              		.fpu fpv4-sp-d16
 4280              	HAL_UART_GetState:
 4281              	.LFB166:
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 118


2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4282              		.loc 1 2482 1
 4283              		.cfi_startproc
 4284              		@ args = 0, pretend = 0, frame = 16
 4285              		@ frame_needed = 1, uses_anonymous_args = 0
 4286              		@ link register save eliminated.
 4287 0000 80B4     		push	{r7}
 4288              	.LCFI199:
 4289              		.cfi_def_cfa_offset 4
 4290              		.cfi_offset 7, -4
 4291 0002 85B0     		sub	sp, sp, #20
 4292              	.LCFI200:
 4293              		.cfi_def_cfa_offset 24
 4294 0004 00AF     		add	r7, sp, #0
 4295              	.LCFI201:
 4296              		.cfi_def_cfa_register 7
 4297 0006 7860     		str	r0, [r7, #4]
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 4298              		.loc 1 2483 12
 4299 0008 0023     		movs	r3, #0
 4300 000a FB60     		str	r3, [r7, #12]
 4301              		.loc 1 2483 27
 4302 000c 0023     		movs	r3, #0
 4303 000e BB60     		str	r3, [r7, #8]
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
 4304              		.loc 1 2484 16
 4305 0010 7B68     		ldr	r3, [r7, #4]
 4306 0012 93F83930 		ldrb	r3, [r3, #57]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 119


 4307 0016 DBB2     		uxtb	r3, r3
 4308              		.loc 1 2484 9
 4309 0018 FB60     		str	r3, [r7, #12]
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 4310              		.loc 1 2485 16
 4311 001a 7B68     		ldr	r3, [r7, #4]
 4312 001c 93F83A30 		ldrb	r3, [r3, #58]
 4313 0020 DBB2     		uxtb	r3, r3
 4314              		.loc 1 2485 9
 4315 0022 BB60     		str	r3, [r7, #8]
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4316              		.loc 1 2487 10
 4317 0024 FB68     		ldr	r3, [r7, #12]
 4318 0026 DAB2     		uxtb	r2, r3
 4319 0028 BB68     		ldr	r3, [r7, #8]
 4320 002a DBB2     		uxtb	r3, r3
 4321 002c 1343     		orrs	r3, r3, r2
 4322 002e DBB2     		uxtb	r3, r3
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4323              		.loc 1 2488 1
 4324 0030 1846     		mov	r0, r3
 4325 0032 1437     		adds	r7, r7, #20
 4326              	.LCFI202:
 4327              		.cfi_def_cfa_offset 4
 4328 0034 BD46     		mov	sp, r7
 4329              	.LCFI203:
 4330              		.cfi_def_cfa_register 13
 4331              		@ sp needed
 4332 0036 5DF8047B 		ldr	r7, [sp], #4
 4333              	.LCFI204:
 4334              		.cfi_restore 7
 4335              		.cfi_def_cfa_offset 0
 4336 003a 7047     		bx	lr
 4337              		.cfi_endproc
 4338              	.LFE166:
 4340              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4341              		.align	1
 4342              		.global	HAL_UART_GetError
 4343              		.syntax unified
 4344              		.thumb
 4345              		.thumb_func
 4346              		.fpu fpv4-sp-d16
 4348              	HAL_UART_GetError:
 4349              	.LFB167:
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4350              		.loc 1 2497 1
 4351              		.cfi_startproc
 4352              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 120


 4353              		@ frame_needed = 1, uses_anonymous_args = 0
 4354              		@ link register save eliminated.
 4355 0000 80B4     		push	{r7}
 4356              	.LCFI205:
 4357              		.cfi_def_cfa_offset 4
 4358              		.cfi_offset 7, -4
 4359 0002 83B0     		sub	sp, sp, #12
 4360              	.LCFI206:
 4361              		.cfi_def_cfa_offset 16
 4362 0004 00AF     		add	r7, sp, #0
 4363              	.LCFI207:
 4364              		.cfi_def_cfa_register 7
 4365 0006 7860     		str	r0, [r7, #4]
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 4366              		.loc 1 2498 15
 4367 0008 7B68     		ldr	r3, [r7, #4]
 4368 000a DB6B     		ldr	r3, [r3, #60]
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4369              		.loc 1 2499 1
 4370 000c 1846     		mov	r0, r3
 4371 000e 0C37     		adds	r7, r7, #12
 4372              	.LCFI208:
 4373              		.cfi_def_cfa_offset 4
 4374 0010 BD46     		mov	sp, r7
 4375              	.LCFI209:
 4376              		.cfi_def_cfa_register 13
 4377              		@ sp needed
 4378 0012 5DF8047B 		ldr	r7, [sp], #4
 4379              	.LCFI210:
 4380              		.cfi_restore 7
 4381              		.cfi_def_cfa_offset 0
 4382 0016 7047     		bx	lr
 4383              		.cfi_endproc
 4384              	.LFE167:
 4386              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 4387              		.align	1
 4388              		.syntax unified
 4389              		.thumb
 4390              		.thumb_func
 4391              		.fpu fpv4-sp-d16
 4393              	UART_DMATransmitCplt:
 4394              	.LFB168:
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 121


2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval none
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Init the UART Callback settings */
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4395              		.loc 1 2541 1
 4396              		.cfi_startproc
 4397              		@ args = 0, pretend = 0, frame = 16
 4398              		@ frame_needed = 1, uses_anonymous_args = 0
 4399 0000 80B5     		push	{r7, lr}
 4400              	.LCFI211:
 4401              		.cfi_def_cfa_offset 8
 4402              		.cfi_offset 7, -8
 4403              		.cfi_offset 14, -4
 4404 0002 84B0     		sub	sp, sp, #16
 4405              	.LCFI212:
 4406              		.cfi_def_cfa_offset 24
 4407 0004 00AF     		add	r7, sp, #0
 4408              	.LCFI213:
 4409              		.cfi_def_cfa_register 7
 4410 0006 7860     		str	r0, [r7, #4]
2542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4411              		.loc 1 2542 23
 4412 0008 7B68     		ldr	r3, [r7, #4]
 4413 000a 9B6B     		ldr	r3, [r3, #56]
 4414 000c FB60     		str	r3, [r7, #12]
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 4415              		.loc 1 2544 12
 4416 000e 7B68     		ldr	r3, [r7, #4]
 4417 0010 1B68     		ldr	r3, [r3]
 4418              		.loc 1 2544 22
 4419 0012 1B68     		ldr	r3, [r3]
 4420              		.loc 1 2544 27
 4421 0014 03F48073 		and	r3, r3, #256
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 122


 4422              		.loc 1 2544 6
 4423 0018 002B     		cmp	r3, #0
 4424 001a 13D1     		bne	.L179
2545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4425              		.loc 1 2546 24
 4426 001c FB68     		ldr	r3, [r7, #12]
 4427 001e 0022     		movs	r2, #0
 4428 0020 DA84     		strh	r2, [r3, #38]	@ movhi
2547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4429              		.loc 1 2550 5
 4430 0022 FB68     		ldr	r3, [r7, #12]
 4431 0024 1B68     		ldr	r3, [r3]
 4432 0026 5A69     		ldr	r2, [r3, #20]
 4433 0028 FB68     		ldr	r3, [r7, #12]
 4434 002a 1B68     		ldr	r3, [r3]
 4435 002c 22F08002 		bic	r2, r2, #128
 4436 0030 5A61     		str	r2, [r3, #20]
2551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4437              		.loc 1 2553 5
 4438 0032 FB68     		ldr	r3, [r7, #12]
 4439 0034 1B68     		ldr	r3, [r3]
 4440 0036 DA68     		ldr	r2, [r3, #12]
 4441 0038 FB68     		ldr	r3, [r7, #12]
 4442 003a 1B68     		ldr	r3, [r3]
 4443 003c 42F04002 		orr	r2, r2, #64
 4444 0040 DA60     		str	r2, [r3, #12]
2554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
2557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
2561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
2562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4445              		.loc 1 2567 1
 4446 0042 02E0     		b	.L181
 4447              	.L179:
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4448              		.loc 1 2564 5
 4449 0044 F868     		ldr	r0, [r7, #12]
 4450 0046 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4451              	.L181:
 4452              		.loc 1 2567 1
 4453 004a 00BF     		nop
 4454 004c 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 123


 4455              	.LCFI214:
 4456              		.cfi_def_cfa_offset 8
 4457 004e BD46     		mov	sp, r7
 4458              	.LCFI215:
 4459              		.cfi_def_cfa_register 13
 4460              		@ sp needed
 4461 0050 80BD     		pop	{r7, pc}
 4462              		.cfi_endproc
 4463              	.LFE168:
 4465              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 4466              		.align	1
 4467              		.syntax unified
 4468              		.thumb
 4469              		.thumb_func
 4470              		.fpu fpv4-sp-d16
 4472              	UART_DMATxHalfCplt:
 4473              	.LFB169:
2568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
2571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4474              		.loc 1 2576 1
 4475              		.cfi_startproc
 4476              		@ args = 0, pretend = 0, frame = 16
 4477              		@ frame_needed = 1, uses_anonymous_args = 0
 4478 0000 80B5     		push	{r7, lr}
 4479              	.LCFI216:
 4480              		.cfi_def_cfa_offset 8
 4481              		.cfi_offset 7, -8
 4482              		.cfi_offset 14, -4
 4483 0002 84B0     		sub	sp, sp, #16
 4484              	.LCFI217:
 4485              		.cfi_def_cfa_offset 24
 4486 0004 00AF     		add	r7, sp, #0
 4487              	.LCFI218:
 4488              		.cfi_def_cfa_register 7
 4489 0006 7860     		str	r0, [r7, #4]
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4490              		.loc 1 2577 23
 4491 0008 7B68     		ldr	r3, [r7, #4]
 4492 000a 9B6B     		ldr	r3, [r3, #56]
 4493 000c FB60     		str	r3, [r7, #12]
2578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
2581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 4494              		.loc 1 2584 3
 4495 000e F868     		ldr	r0, [r7, #12]
 4496 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 124


2585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4497              		.loc 1 2586 1
 4498 0014 00BF     		nop
 4499 0016 1037     		adds	r7, r7, #16
 4500              	.LCFI219:
 4501              		.cfi_def_cfa_offset 8
 4502 0018 BD46     		mov	sp, r7
 4503              	.LCFI220:
 4504              		.cfi_def_cfa_register 13
 4505              		@ sp needed
 4506 001a 80BD     		pop	{r7, pc}
 4507              		.cfi_endproc
 4508              	.LFE169:
 4510              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 4511              		.align	1
 4512              		.syntax unified
 4513              		.thumb
 4514              		.thumb_func
 4515              		.fpu fpv4-sp-d16
 4517              	UART_DMAReceiveCplt:
 4518              	.LFB170:
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4519              		.loc 1 2595 1
 4520              		.cfi_startproc
 4521              		@ args = 0, pretend = 0, frame = 16
 4522              		@ frame_needed = 1, uses_anonymous_args = 0
 4523 0000 80B5     		push	{r7, lr}
 4524              	.LCFI221:
 4525              		.cfi_def_cfa_offset 8
 4526              		.cfi_offset 7, -8
 4527              		.cfi_offset 14, -4
 4528 0002 84B0     		sub	sp, sp, #16
 4529              	.LCFI222:
 4530              		.cfi_def_cfa_offset 24
 4531 0004 00AF     		add	r7, sp, #0
 4532              	.LCFI223:
 4533              		.cfi_def_cfa_register 7
 4534 0006 7860     		str	r0, [r7, #4]
2596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4535              		.loc 1 2596 23
 4536 0008 7B68     		ldr	r3, [r7, #4]
 4537 000a 9B6B     		ldr	r3, [r3, #56]
 4538 000c FB60     		str	r3, [r7, #12]
2597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 4539              		.loc 1 2598 12
 4540 000e 7B68     		ldr	r3, [r7, #4]
 4541 0010 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 125


 4542              		.loc 1 2598 22
 4543 0012 1B68     		ldr	r3, [r3]
 4544              		.loc 1 2598 27
 4545 0014 03F48073 		and	r3, r3, #256
 4546              		.loc 1 2598 6
 4547 0018 002B     		cmp	r3, #0
 4548 001a 1ED1     		bne	.L184
2599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 4549              		.loc 1 2600 24
 4550 001c FB68     		ldr	r3, [r7, #12]
 4551 001e 0022     		movs	r2, #0
 4552 0020 DA85     		strh	r2, [r3, #46]	@ movhi
2601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 4553              		.loc 1 2603 5
 4554 0022 FB68     		ldr	r3, [r7, #12]
 4555 0024 1B68     		ldr	r3, [r3]
 4556 0026 DA68     		ldr	r2, [r3, #12]
 4557 0028 FB68     		ldr	r3, [r7, #12]
 4558 002a 1B68     		ldr	r3, [r3]
 4559 002c 22F48072 		bic	r2, r2, #256
 4560 0030 DA60     		str	r2, [r3, #12]
2604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4561              		.loc 1 2604 5
 4562 0032 FB68     		ldr	r3, [r7, #12]
 4563 0034 1B68     		ldr	r3, [r3]
 4564 0036 5A69     		ldr	r2, [r3, #20]
 4565 0038 FB68     		ldr	r3, [r7, #12]
 4566 003a 1B68     		ldr	r3, [r3]
 4567 003c 22F00102 		bic	r2, r2, #1
 4568 0040 5A61     		str	r2, [r3, #20]
2605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
2607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4569              		.loc 1 2608 5
 4570 0042 FB68     		ldr	r3, [r7, #12]
 4571 0044 1B68     		ldr	r3, [r3]
 4572 0046 5A69     		ldr	r2, [r3, #20]
 4573 0048 FB68     		ldr	r3, [r7, #12]
 4574 004a 1B68     		ldr	r3, [r3]
 4575 004c 22F04002 		bic	r2, r2, #64
 4576 0050 5A61     		str	r2, [r3, #20]
2609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4577              		.loc 1 2611 20
 4578 0052 FB68     		ldr	r3, [r7, #12]
 4579 0054 2022     		movs	r2, #32
 4580 0056 83F83A20 		strb	r2, [r3, #58]
 4581              	.L184:
2612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
2615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 126


2616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 4582              		.loc 1 2618 3
 4583 005a F868     		ldr	r0, [r7, #12]
 4584 005c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
2619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4585              		.loc 1 2620 1
 4586 0060 00BF     		nop
 4587 0062 1037     		adds	r7, r7, #16
 4588              	.LCFI224:
 4589              		.cfi_def_cfa_offset 8
 4590 0064 BD46     		mov	sp, r7
 4591              	.LCFI225:
 4592              		.cfi_def_cfa_register 13
 4593              		@ sp needed
 4594 0066 80BD     		pop	{r7, pc}
 4595              		.cfi_endproc
 4596              	.LFE170:
 4598              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 4599              		.align	1
 4600              		.syntax unified
 4601              		.thumb
 4602              		.thumb_func
 4603              		.fpu fpv4-sp-d16
 4605              	UART_DMARxHalfCplt:
 4606              	.LFB171:
2621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
2624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4607              		.loc 1 2629 1
 4608              		.cfi_startproc
 4609              		@ args = 0, pretend = 0, frame = 16
 4610              		@ frame_needed = 1, uses_anonymous_args = 0
 4611 0000 80B5     		push	{r7, lr}
 4612              	.LCFI226:
 4613              		.cfi_def_cfa_offset 8
 4614              		.cfi_offset 7, -8
 4615              		.cfi_offset 14, -4
 4616 0002 84B0     		sub	sp, sp, #16
 4617              	.LCFI227:
 4618              		.cfi_def_cfa_offset 24
 4619 0004 00AF     		add	r7, sp, #0
 4620              	.LCFI228:
 4621              		.cfi_def_cfa_register 7
 4622 0006 7860     		str	r0, [r7, #4]
2630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4623              		.loc 1 2630 23
 4624 0008 7B68     		ldr	r3, [r7, #4]
 4625 000a 9B6B     		ldr	r3, [r3, #56]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 127


 4626 000c FB60     		str	r3, [r7, #12]
2631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
2634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
2635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
2637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 4627              		.loc 1 2637 3
 4628 000e F868     		ldr	r0, [r7, #12]
 4629 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
2638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4630              		.loc 1 2639 1
 4631 0014 00BF     		nop
 4632 0016 1037     		adds	r7, r7, #16
 4633              	.LCFI229:
 4634              		.cfi_def_cfa_offset 8
 4635 0018 BD46     		mov	sp, r7
 4636              	.LCFI230:
 4637              		.cfi_def_cfa_register 13
 4638              		@ sp needed
 4639 001a 80BD     		pop	{r7, pc}
 4640              		.cfi_endproc
 4641              	.LFE171:
 4643              		.section	.text.UART_DMAError,"ax",%progbits
 4644              		.align	1
 4645              		.syntax unified
 4646              		.thumb
 4647              		.thumb_func
 4648              		.fpu fpv4-sp-d16
 4650              	UART_DMAError:
 4651              	.LFB172:
2640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4652              		.loc 1 2648 1
 4653              		.cfi_startproc
 4654              		@ args = 0, pretend = 0, frame = 16
 4655              		@ frame_needed = 1, uses_anonymous_args = 0
 4656 0000 80B5     		push	{r7, lr}
 4657              	.LCFI231:
 4658              		.cfi_def_cfa_offset 8
 4659              		.cfi_offset 7, -8
 4660              		.cfi_offset 14, -4
 4661 0002 84B0     		sub	sp, sp, #16
 4662              	.LCFI232:
 4663              		.cfi_def_cfa_offset 24
 4664 0004 00AF     		add	r7, sp, #0
 4665              	.LCFI233:
 4666              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 128


 4667 0006 7860     		str	r0, [r7, #4]
2649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 4668              		.loc 1 2649 12
 4669 0008 0023     		movs	r3, #0
 4670 000a FB60     		str	r3, [r7, #12]
2650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4671              		.loc 1 2650 23
 4672 000c 7B68     		ldr	r3, [r7, #4]
 4673 000e 9B6B     		ldr	r3, [r3, #56]
 4674 0010 BB60     		str	r3, [r7, #8]
2651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 4675              		.loc 1 2653 16
 4676 0012 BB68     		ldr	r3, [r7, #8]
 4677 0014 1B68     		ldr	r3, [r3]
 4678 0016 5B69     		ldr	r3, [r3, #20]
 4679 0018 03F08003 		and	r3, r3, #128
 4680 001c 802B     		cmp	r3, #128
 4681 001e 0CBF     		ite	eq
 4682 0020 0123     		moveq	r3, #1
 4683 0022 0023     		movne	r3, #0
 4684 0024 DBB2     		uxtb	r3, r3
 4685              		.loc 1 2653 14
 4686 0026 FB60     		str	r3, [r7, #12]
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 4687              		.loc 1 2654 13
 4688 0028 BB68     		ldr	r3, [r7, #8]
 4689 002a 93F83930 		ldrb	r3, [r3, #57]
 4690 002e DBB2     		uxtb	r3, r3
 4691              		.loc 1 2654 6
 4692 0030 212B     		cmp	r3, #33
 4693 0032 08D1     		bne	.L187
 4694              		.loc 1 2654 49 discriminator 1
 4695 0034 FB68     		ldr	r3, [r7, #12]
 4696 0036 002B     		cmp	r3, #0
 4697 0038 05D0     		beq	.L187
2655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4698              		.loc 1 2656 24
 4699 003a BB68     		ldr	r3, [r7, #8]
 4700 003c 0022     		movs	r2, #0
 4701 003e DA84     		strh	r2, [r3, #38]	@ movhi
2657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 4702              		.loc 1 2657 5
 4703 0040 B868     		ldr	r0, [r7, #8]
 4704 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 4705              	.L187:
2658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 4706              		.loc 1 2661 16
 4707 0046 BB68     		ldr	r3, [r7, #8]
 4708 0048 1B68     		ldr	r3, [r3]
 4709 004a 5B69     		ldr	r3, [r3, #20]
 4710 004c 03F04003 		and	r3, r3, #64
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 129


 4711 0050 402B     		cmp	r3, #64
 4712 0052 0CBF     		ite	eq
 4713 0054 0123     		moveq	r3, #1
 4714 0056 0023     		movne	r3, #0
 4715 0058 DBB2     		uxtb	r3, r3
 4716              		.loc 1 2661 14
 4717 005a FB60     		str	r3, [r7, #12]
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 4718              		.loc 1 2662 13
 4719 005c BB68     		ldr	r3, [r7, #8]
 4720 005e 93F83A30 		ldrb	r3, [r3, #58]
 4721 0062 DBB2     		uxtb	r3, r3
 4722              		.loc 1 2662 6
 4723 0064 222B     		cmp	r3, #34
 4724 0066 08D1     		bne	.L188
 4725              		.loc 1 2662 50 discriminator 1
 4726 0068 FB68     		ldr	r3, [r7, #12]
 4727 006a 002B     		cmp	r3, #0
 4728 006c 05D0     		beq	.L188
2663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4729              		.loc 1 2664 24
 4730 006e BB68     		ldr	r3, [r7, #8]
 4731 0070 0022     		movs	r2, #0
 4732 0072 DA85     		strh	r2, [r3, #46]	@ movhi
2665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 4733              		.loc 1 2665 5
 4734 0074 B868     		ldr	r0, [r7, #8]
 4735 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 4736              	.L188:
2666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 4737              		.loc 1 2668 20
 4738 007a BB68     		ldr	r3, [r7, #8]
 4739 007c DB6B     		ldr	r3, [r3, #60]
 4740 007e 43F01002 		orr	r2, r3, #16
 4741 0082 BB68     		ldr	r3, [r7, #8]
 4742 0084 DA63     		str	r2, [r3, #60]
2669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
2671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
2672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
2674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 4743              		.loc 1 2674 3
 4744 0086 B868     		ldr	r0, [r7, #8]
 4745 0088 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4746              		.loc 1 2676 1
 4747 008c 00BF     		nop
 4748 008e 1037     		adds	r7, r7, #16
 4749              	.LCFI234:
 4750              		.cfi_def_cfa_offset 8
 4751 0090 BD46     		mov	sp, r7
 4752              	.LCFI235:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 130


 4753              		.cfi_def_cfa_register 13
 4754              		@ sp needed
 4755 0092 80BD     		pop	{r7, pc}
 4756              		.cfi_endproc
 4757              	.LFE172:
 4759              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4760              		.align	1
 4761              		.syntax unified
 4762              		.thumb
 4763              		.thumb_func
 4764              		.fpu fpv4-sp-d16
 4766              	UART_WaitOnFlagUntilTimeout:
 4767              	.LFB173:
2677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
2683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
2684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
2686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4768              		.loc 1 2689 1
 4769              		.cfi_startproc
 4770              		@ args = 4, pretend = 0, frame = 16
 4771              		@ frame_needed = 1, uses_anonymous_args = 0
 4772 0000 80B5     		push	{r7, lr}
 4773              	.LCFI236:
 4774              		.cfi_def_cfa_offset 8
 4775              		.cfi_offset 7, -8
 4776              		.cfi_offset 14, -4
 4777 0002 84B0     		sub	sp, sp, #16
 4778              	.LCFI237:
 4779              		.cfi_def_cfa_offset 24
 4780 0004 00AF     		add	r7, sp, #0
 4781              	.LCFI238:
 4782              		.cfi_def_cfa_register 7
 4783 0006 F860     		str	r0, [r7, #12]
 4784 0008 B960     		str	r1, [r7, #8]
 4785 000a 3B60     		str	r3, [r7]
 4786 000c 1346     		mov	r3, r2
 4787 000e FB71     		strb	r3, [r7, #7]
2690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 4788              		.loc 1 2691 9
 4789 0010 2CE0     		b	.L190
 4790              	.L193:
2692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
2694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 4791              		.loc 1 2694 8
 4792 0012 BB69     		ldr	r3, [r7, #24]
 4793 0014 B3F1FF3F 		cmp	r3, #-1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 131


 4794 0018 28D0     		beq	.L190
2695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 4795              		.loc 1 2696 10
 4796 001a BB69     		ldr	r3, [r7, #24]
 4797 001c 002B     		cmp	r3, #0
 4798 001e 07D0     		beq	.L191
 4799              		.loc 1 2696 32 discriminator 1
 4800 0020 FFF7FEFF 		bl	HAL_GetTick
 4801 0024 0246     		mov	r2, r0
 4802              		.loc 1 2696 46 discriminator 1
 4803 0026 3B68     		ldr	r3, [r7]
 4804 0028 D31A     		subs	r3, r2, r3
 4805              		.loc 1 2696 27 discriminator 1
 4806 002a BA69     		ldr	r2, [r7, #24]
 4807 002c 9A42     		cmp	r2, r3
 4808 002e 1DD2     		bcs	.L190
 4809              	.L191:
2697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 4810              		.loc 1 2699 9
 4811 0030 FB68     		ldr	r3, [r7, #12]
 4812 0032 1B68     		ldr	r3, [r3]
 4813 0034 DA68     		ldr	r2, [r3, #12]
 4814 0036 FB68     		ldr	r3, [r7, #12]
 4815 0038 1B68     		ldr	r3, [r3]
 4816 003a 22F4D072 		bic	r2, r2, #416
 4817 003e DA60     		str	r2, [r3, #12]
2700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4818              		.loc 1 2700 9
 4819 0040 FB68     		ldr	r3, [r7, #12]
 4820 0042 1B68     		ldr	r3, [r3]
 4821 0044 5A69     		ldr	r2, [r3, #20]
 4822 0046 FB68     		ldr	r3, [r7, #12]
 4823 0048 1B68     		ldr	r3, [r3]
 4824 004a 22F00102 		bic	r2, r2, #1
 4825 004e 5A61     		str	r2, [r3, #20]
2701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 4826              		.loc 1 2702 24
 4827 0050 FB68     		ldr	r3, [r7, #12]
 4828 0052 2022     		movs	r2, #32
 4829 0054 83F83920 		strb	r2, [r3, #57]
2703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4830              		.loc 1 2703 24
 4831 0058 FB68     		ldr	r3, [r7, #12]
 4832 005a 2022     		movs	r2, #32
 4833 005c 83F83A20 		strb	r2, [r3, #58]
2704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
2706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 4834              		.loc 1 2706 9
 4835 0060 FB68     		ldr	r3, [r7, #12]
 4836 0062 0022     		movs	r2, #0
 4837 0064 83F83820 		strb	r2, [r3, #56]
2707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 132


2708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 4838              		.loc 1 2708 16
 4839 0068 0323     		movs	r3, #3
 4840 006a 0FE0     		b	.L192
 4841              	.L190:
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4842              		.loc 1 2691 11
 4843 006c FB68     		ldr	r3, [r7, #12]
 4844 006e 1B68     		ldr	r3, [r3]
 4845 0070 1A68     		ldr	r2, [r3]
 4846 0072 BB68     		ldr	r3, [r7, #8]
 4847 0074 1340     		ands	r3, r3, r2
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4848              		.loc 1 2691 50
 4849 0076 BA68     		ldr	r2, [r7, #8]
 4850 0078 9A42     		cmp	r2, r3
 4851 007a 0CBF     		ite	eq
 4852 007c 0123     		moveq	r3, #1
 4853 007e 0023     		movne	r3, #0
 4854 0080 DBB2     		uxtb	r3, r3
 4855 0082 1A46     		mov	r2, r3
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4856              		.loc 1 2691 59
 4857 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4858              		.loc 1 2691 9
 4859 0086 9A42     		cmp	r2, r3
 4860 0088 C3D0     		beq	.L193
2709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4861              		.loc 1 2712 10
 4862 008a 0023     		movs	r3, #0
 4863              	.L192:
2713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4864              		.loc 1 2713 1
 4865 008c 1846     		mov	r0, r3
 4866 008e 1037     		adds	r7, r7, #16
 4867              	.LCFI239:
 4868              		.cfi_def_cfa_offset 8
 4869 0090 BD46     		mov	sp, r7
 4870              	.LCFI240:
 4871              		.cfi_def_cfa_register 13
 4872              		@ sp needed
 4873 0092 80BD     		pop	{r7, pc}
 4874              		.cfi_endproc
 4875              	.LFE173:
 4877              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 4878              		.align	1
 4879              		.syntax unified
 4880              		.thumb
 4881              		.thumb_func
 4882              		.fpu fpv4-sp-d16
 4884              	UART_EndTxTransfer:
 4885              	.LFB174:
2714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 133


2715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4886              		.loc 1 2721 1
 4887              		.cfi_startproc
 4888              		@ args = 0, pretend = 0, frame = 8
 4889              		@ frame_needed = 1, uses_anonymous_args = 0
 4890              		@ link register save eliminated.
 4891 0000 80B4     		push	{r7}
 4892              	.LCFI241:
 4893              		.cfi_def_cfa_offset 4
 4894              		.cfi_offset 7, -4
 4895 0002 83B0     		sub	sp, sp, #12
 4896              	.LCFI242:
 4897              		.cfi_def_cfa_offset 16
 4898 0004 00AF     		add	r7, sp, #0
 4899              	.LCFI243:
 4900              		.cfi_def_cfa_register 7
 4901 0006 7860     		str	r0, [r7, #4]
2722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4902              		.loc 1 2723 3
 4903 0008 7B68     		ldr	r3, [r7, #4]
 4904 000a 1B68     		ldr	r3, [r3]
 4905 000c DA68     		ldr	r2, [r3, #12]
 4906 000e 7B68     		ldr	r3, [r7, #4]
 4907 0010 1B68     		ldr	r3, [r3]
 4908 0012 22F0C002 		bic	r2, r2, #192
 4909 0016 DA60     		str	r2, [r3, #12]
2724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4910              		.loc 1 2726 17
 4911 0018 7B68     		ldr	r3, [r7, #4]
 4912 001a 2022     		movs	r2, #32
 4913 001c 83F83920 		strb	r2, [r3, #57]
2727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4914              		.loc 1 2727 1
 4915 0020 00BF     		nop
 4916 0022 0C37     		adds	r7, r7, #12
 4917              	.LCFI244:
 4918              		.cfi_def_cfa_offset 4
 4919 0024 BD46     		mov	sp, r7
 4920              	.LCFI245:
 4921              		.cfi_def_cfa_register 13
 4922              		@ sp needed
 4923 0026 5DF8047B 		ldr	r7, [sp], #4
 4924              	.LCFI246:
 4925              		.cfi_restore 7
 4926              		.cfi_def_cfa_offset 0
 4927 002a 7047     		bx	lr
 4928              		.cfi_endproc
 4929              	.LFE174:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 134


 4931              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 4932              		.align	1
 4933              		.syntax unified
 4934              		.thumb
 4935              		.thumb_func
 4936              		.fpu fpv4-sp-d16
 4938              	UART_EndRxTransfer:
 4939              	.LFB175:
2728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4940              		.loc 1 2735 1
 4941              		.cfi_startproc
 4942              		@ args = 0, pretend = 0, frame = 8
 4943              		@ frame_needed = 1, uses_anonymous_args = 0
 4944              		@ link register save eliminated.
 4945 0000 80B4     		push	{r7}
 4946              	.LCFI247:
 4947              		.cfi_def_cfa_offset 4
 4948              		.cfi_offset 7, -4
 4949 0002 83B0     		sub	sp, sp, #12
 4950              	.LCFI248:
 4951              		.cfi_def_cfa_offset 16
 4952 0004 00AF     		add	r7, sp, #0
 4953              	.LCFI249:
 4954              		.cfi_def_cfa_register 7
 4955 0006 7860     		str	r0, [r7, #4]
2736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4956              		.loc 1 2737 3
 4957 0008 7B68     		ldr	r3, [r7, #4]
 4958 000a 1B68     		ldr	r3, [r3]
 4959 000c DA68     		ldr	r2, [r3, #12]
 4960 000e 7B68     		ldr	r3, [r7, #4]
 4961 0010 1B68     		ldr	r3, [r3]
 4962 0012 22F49072 		bic	r2, r2, #288
 4963 0016 DA60     		str	r2, [r3, #12]
2738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4964              		.loc 1 2738 3
 4965 0018 7B68     		ldr	r3, [r7, #4]
 4966 001a 1B68     		ldr	r3, [r3]
 4967 001c 5A69     		ldr	r2, [r3, #20]
 4968 001e 7B68     		ldr	r3, [r7, #4]
 4969 0020 1B68     		ldr	r3, [r3]
 4970 0022 22F00102 		bic	r2, r2, #1
 4971 0026 5A61     		str	r2, [r3, #20]
2739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4972              		.loc 1 2741 18
 4973 0028 7B68     		ldr	r3, [r7, #4]
 4974 002a 2022     		movs	r2, #32
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 135


 4975 002c 83F83A20 		strb	r2, [r3, #58]
2742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4976              		.loc 1 2742 1
 4977 0030 00BF     		nop
 4978 0032 0C37     		adds	r7, r7, #12
 4979              	.LCFI250:
 4980              		.cfi_def_cfa_offset 4
 4981 0034 BD46     		mov	sp, r7
 4982              	.LCFI251:
 4983              		.cfi_def_cfa_register 13
 4984              		@ sp needed
 4985 0036 5DF8047B 		ldr	r7, [sp], #4
 4986              	.LCFI252:
 4987              		.cfi_restore 7
 4988              		.cfi_def_cfa_offset 0
 4989 003a 7047     		bx	lr
 4990              		.cfi_endproc
 4991              	.LFE175:
 4993              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 4994              		.align	1
 4995              		.syntax unified
 4996              		.thumb
 4997              		.thumb_func
 4998              		.fpu fpv4-sp-d16
 5000              	UART_DMAAbortOnError:
 5001              	.LFB176:
2743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5002              		.loc 1 2752 1
 5003              		.cfi_startproc
 5004              		@ args = 0, pretend = 0, frame = 16
 5005              		@ frame_needed = 1, uses_anonymous_args = 0
 5006 0000 80B5     		push	{r7, lr}
 5007              	.LCFI253:
 5008              		.cfi_def_cfa_offset 8
 5009              		.cfi_offset 7, -8
 5010              		.cfi_offset 14, -4
 5011 0002 84B0     		sub	sp, sp, #16
 5012              	.LCFI254:
 5013              		.cfi_def_cfa_offset 24
 5014 0004 00AF     		add	r7, sp, #0
 5015              	.LCFI255:
 5016              		.cfi_def_cfa_register 7
 5017 0006 7860     		str	r0, [r7, #4]
2753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5018              		.loc 1 2753 23
 5019 0008 7B68     		ldr	r3, [r7, #4]
 5020 000a 9B6B     		ldr	r3, [r3, #56]
 5021 000c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 136


2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5022              		.loc 1 2754 22
 5023 000e FB68     		ldr	r3, [r7, #12]
 5024 0010 0022     		movs	r2, #0
 5025 0012 DA85     		strh	r2, [r3, #46]	@ movhi
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5026              		.loc 1 2755 22
 5027 0014 FB68     		ldr	r3, [r7, #12]
 5028 0016 0022     		movs	r2, #0
 5029 0018 DA84     		strh	r2, [r3, #38]	@ movhi
2756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
2760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
2762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 5030              		.loc 1 2762 3
 5031 001a F868     		ldr	r0, [r7, #12]
 5032 001c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5033              		.loc 1 2764 1
 5034 0020 00BF     		nop
 5035 0022 1037     		adds	r7, r7, #16
 5036              	.LCFI256:
 5037              		.cfi_def_cfa_offset 8
 5038 0024 BD46     		mov	sp, r7
 5039              	.LCFI257:
 5040              		.cfi_def_cfa_register 13
 5041              		@ sp needed
 5042 0026 80BD     		pop	{r7, pc}
 5043              		.cfi_endproc
 5044              	.LFE176:
 5046              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 5047              		.align	1
 5048              		.syntax unified
 5049              		.thumb
 5050              		.thumb_func
 5051              		.fpu fpv4-sp-d16
 5053              	UART_DMATxAbortCallback:
 5054              	.LFB177:
2765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5055              		.loc 1 2776 1
 5056              		.cfi_startproc
 5057              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 137


 5058              		@ frame_needed = 1, uses_anonymous_args = 0
 5059 0000 80B5     		push	{r7, lr}
 5060              	.LCFI258:
 5061              		.cfi_def_cfa_offset 8
 5062              		.cfi_offset 7, -8
 5063              		.cfi_offset 14, -4
 5064 0002 84B0     		sub	sp, sp, #16
 5065              	.LCFI259:
 5066              		.cfi_def_cfa_offset 24
 5067 0004 00AF     		add	r7, sp, #0
 5068              	.LCFI260:
 5069              		.cfi_def_cfa_register 7
 5070 0006 7860     		str	r0, [r7, #4]
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5071              		.loc 1 2777 23
 5072 0008 7B68     		ldr	r3, [r7, #4]
 5073 000a 9B6B     		ldr	r3, [r3, #56]
 5074 000c FB60     		str	r3, [r7, #12]
2778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 5075              		.loc 1 2779 8
 5076 000e FB68     		ldr	r3, [r7, #12]
 5077 0010 1B6B     		ldr	r3, [r3, #48]
 5078              		.loc 1 2779 36
 5079 0012 0022     		movs	r2, #0
 5080 0014 1A65     		str	r2, [r3, #80]
2780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 5081              		.loc 1 2782 12
 5082 0016 FB68     		ldr	r3, [r7, #12]
 5083 0018 5B6B     		ldr	r3, [r3, #52]
 5084              		.loc 1 2782 6
 5085 001a 002B     		cmp	r3, #0
 5086 001c 04D0     		beq	.L198
2783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 5087              		.loc 1 2784 14
 5088 001e FB68     		ldr	r3, [r7, #12]
 5089 0020 5B6B     		ldr	r3, [r3, #52]
 5090              		.loc 1 2784 22
 5091 0022 1B6D     		ldr	r3, [r3, #80]
 5092              		.loc 1 2784 8
 5093 0024 002B     		cmp	r3, #0
 5094 0026 14D1     		bne	.L200
 5095              	.L198:
2785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5096              		.loc 1 2791 22
 5097 0028 FB68     		ldr	r3, [r7, #12]
 5098 002a 0022     		movs	r2, #0
 5099 002c DA84     		strh	r2, [r3, #38]	@ movhi
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 138


2792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5100              		.loc 1 2792 22
 5101 002e FB68     		ldr	r3, [r7, #12]
 5102 0030 0022     		movs	r2, #0
 5103 0032 DA85     		strh	r2, [r3, #46]	@ movhi
2793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5104              		.loc 1 2795 20
 5105 0034 FB68     		ldr	r3, [r7, #12]
 5106 0036 0022     		movs	r2, #0
 5107 0038 DA63     		str	r2, [r3, #60]
2796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5108              		.loc 1 2798 18
 5109 003a FB68     		ldr	r3, [r7, #12]
 5110 003c 2022     		movs	r2, #32
 5111 003e 83F83920 		strb	r2, [r3, #57]
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5112              		.loc 1 2799 18
 5113 0042 FB68     		ldr	r3, [r7, #12]
 5114 0044 2022     		movs	r2, #32
 5115 0046 83F83A20 		strb	r2, [r3, #58]
2800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
2804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
2805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
2807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 5116              		.loc 1 2807 3
 5117 004a F868     		ldr	r0, [r7, #12]
 5118 004c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 5119 0050 00E0     		b	.L197
 5120              	.L200:
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5121              		.loc 1 2786 7
 5122 0052 00BF     		nop
 5123              	.L197:
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5124              		.loc 1 2809 1
 5125 0054 1037     		adds	r7, r7, #16
 5126              	.LCFI261:
 5127              		.cfi_def_cfa_offset 8
 5128 0056 BD46     		mov	sp, r7
 5129              	.LCFI262:
 5130              		.cfi_def_cfa_register 13
 5131              		@ sp needed
 5132 0058 80BD     		pop	{r7, pc}
 5133              		.cfi_endproc
 5134              	.LFE177:
 5136              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 5137              		.align	1
 5138              		.syntax unified
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 139


 5139              		.thumb
 5140              		.thumb_func
 5141              		.fpu fpv4-sp-d16
 5143              	UART_DMARxAbortCallback:
 5144              	.LFB178:
2810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5145              		.loc 1 2821 1
 5146              		.cfi_startproc
 5147              		@ args = 0, pretend = 0, frame = 16
 5148              		@ frame_needed = 1, uses_anonymous_args = 0
 5149 0000 80B5     		push	{r7, lr}
 5150              	.LCFI263:
 5151              		.cfi_def_cfa_offset 8
 5152              		.cfi_offset 7, -8
 5153              		.cfi_offset 14, -4
 5154 0002 84B0     		sub	sp, sp, #16
 5155              	.LCFI264:
 5156              		.cfi_def_cfa_offset 24
 5157 0004 00AF     		add	r7, sp, #0
 5158              	.LCFI265:
 5159              		.cfi_def_cfa_register 7
 5160 0006 7860     		str	r0, [r7, #4]
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5161              		.loc 1 2822 23
 5162 0008 7B68     		ldr	r3, [r7, #4]
 5163 000a 9B6B     		ldr	r3, [r3, #56]
 5164 000c FB60     		str	r3, [r7, #12]
2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 5165              		.loc 1 2824 8
 5166 000e FB68     		ldr	r3, [r7, #12]
 5167 0010 5B6B     		ldr	r3, [r3, #52]
 5168              		.loc 1 2824 36
 5169 0012 0022     		movs	r2, #0
 5170 0014 1A65     		str	r2, [r3, #80]
2825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 5171              		.loc 1 2827 12
 5172 0016 FB68     		ldr	r3, [r7, #12]
 5173 0018 1B6B     		ldr	r3, [r3, #48]
 5174              		.loc 1 2827 6
 5175 001a 002B     		cmp	r3, #0
 5176 001c 04D0     		beq	.L202
2828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 140


 5177              		.loc 1 2829 14
 5178 001e FB68     		ldr	r3, [r7, #12]
 5179 0020 1B6B     		ldr	r3, [r3, #48]
 5180              		.loc 1 2829 22
 5181 0022 1B6D     		ldr	r3, [r3, #80]
 5182              		.loc 1 2829 8
 5183 0024 002B     		cmp	r3, #0
 5184 0026 14D1     		bne	.L204
 5185              	.L202:
2830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5186              		.loc 1 2836 22
 5187 0028 FB68     		ldr	r3, [r7, #12]
 5188 002a 0022     		movs	r2, #0
 5189 002c DA84     		strh	r2, [r3, #38]	@ movhi
2837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5190              		.loc 1 2837 22
 5191 002e FB68     		ldr	r3, [r7, #12]
 5192 0030 0022     		movs	r2, #0
 5193 0032 DA85     		strh	r2, [r3, #46]	@ movhi
2838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5194              		.loc 1 2840 20
 5195 0034 FB68     		ldr	r3, [r7, #12]
 5196 0036 0022     		movs	r2, #0
 5197 0038 DA63     		str	r2, [r3, #60]
2841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5198              		.loc 1 2843 18
 5199 003a FB68     		ldr	r3, [r7, #12]
 5200 003c 2022     		movs	r2, #32
 5201 003e 83F83920 		strb	r2, [r3, #57]
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5202              		.loc 1 2844 18
 5203 0042 FB68     		ldr	r3, [r7, #12]
 5204 0044 2022     		movs	r2, #32
 5205 0046 83F83A20 		strb	r2, [r3, #58]
2845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
2849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
2850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
2852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 5206              		.loc 1 2852 3
 5207 004a F868     		ldr	r0, [r7, #12]
 5208 004c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 5209 0050 00E0     		b	.L201
 5210              	.L204:
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 141


2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5211              		.loc 1 2831 7
 5212 0052 00BF     		nop
 5213              	.L201:
2853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5214              		.loc 1 2854 1
 5215 0054 1037     		adds	r7, r7, #16
 5216              	.LCFI266:
 5217              		.cfi_def_cfa_offset 8
 5218 0056 BD46     		mov	sp, r7
 5219              	.LCFI267:
 5220              		.cfi_def_cfa_register 13
 5221              		@ sp needed
 5222 0058 80BD     		pop	{r7, pc}
 5223              		.cfi_endproc
 5224              	.LFE178:
 5226              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 5227              		.align	1
 5228              		.syntax unified
 5229              		.thumb
 5230              		.thumb_func
 5231              		.fpu fpv4-sp-d16
 5233              	UART_DMATxOnlyAbortCallback:
 5234              	.LFB179:
2855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5235              		.loc 1 2866 1
 5236              		.cfi_startproc
 5237              		@ args = 0, pretend = 0, frame = 16
 5238              		@ frame_needed = 1, uses_anonymous_args = 0
 5239 0000 80B5     		push	{r7, lr}
 5240              	.LCFI268:
 5241              		.cfi_def_cfa_offset 8
 5242              		.cfi_offset 7, -8
 5243              		.cfi_offset 14, -4
 5244 0002 84B0     		sub	sp, sp, #16
 5245              	.LCFI269:
 5246              		.cfi_def_cfa_offset 24
 5247 0004 00AF     		add	r7, sp, #0
 5248              	.LCFI270:
 5249              		.cfi_def_cfa_register 7
 5250 0006 7860     		str	r0, [r7, #4]
2867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5251              		.loc 1 2867 23
 5252 0008 7B68     		ldr	r3, [r7, #4]
 5253 000a 9B6B     		ldr	r3, [r3, #56]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 142


 5254 000c FB60     		str	r3, [r7, #12]
2868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5255              		.loc 1 2869 22
 5256 000e FB68     		ldr	r3, [r7, #12]
 5257 0010 0022     		movs	r2, #0
 5258 0012 DA84     		strh	r2, [r3, #38]	@ movhi
2870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5259              		.loc 1 2872 17
 5260 0014 FB68     		ldr	r3, [r7, #12]
 5261 0016 2022     		movs	r2, #32
 5262 0018 83F83920 		strb	r2, [r3, #57]
2873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
2877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
2878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
2880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 5263              		.loc 1 2880 3
 5264 001c F868     		ldr	r0, [r7, #12]
 5265 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
2881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5266              		.loc 1 2882 1
 5267 0022 00BF     		nop
 5268 0024 1037     		adds	r7, r7, #16
 5269              	.LCFI271:
 5270              		.cfi_def_cfa_offset 8
 5271 0026 BD46     		mov	sp, r7
 5272              	.LCFI272:
 5273              		.cfi_def_cfa_register 13
 5274              		@ sp needed
 5275 0028 80BD     		pop	{r7, pc}
 5276              		.cfi_endproc
 5277              	.LFE179:
 5279              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 5280              		.align	1
 5281              		.syntax unified
 5282              		.thumb
 5283              		.thumb_func
 5284              		.fpu fpv4-sp-d16
 5286              	UART_DMARxOnlyAbortCallback:
 5287              	.LFB180:
2883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 143


2893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5288              		.loc 1 2894 1
 5289              		.cfi_startproc
 5290              		@ args = 0, pretend = 0, frame = 16
 5291              		@ frame_needed = 1, uses_anonymous_args = 0
 5292 0000 80B5     		push	{r7, lr}
 5293              	.LCFI273:
 5294              		.cfi_def_cfa_offset 8
 5295              		.cfi_offset 7, -8
 5296              		.cfi_offset 14, -4
 5297 0002 84B0     		sub	sp, sp, #16
 5298              	.LCFI274:
 5299              		.cfi_def_cfa_offset 24
 5300 0004 00AF     		add	r7, sp, #0
 5301              	.LCFI275:
 5302              		.cfi_def_cfa_register 7
 5303 0006 7860     		str	r0, [r7, #4]
2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5304              		.loc 1 2895 23
 5305 0008 7B68     		ldr	r3, [r7, #4]
 5306 000a 9B6B     		ldr	r3, [r3, #56]
 5307 000c FB60     		str	r3, [r7, #12]
2896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5308              		.loc 1 2897 22
 5309 000e FB68     		ldr	r3, [r7, #12]
 5310 0010 0022     		movs	r2, #0
 5311 0012 DA85     		strh	r2, [r3, #46]	@ movhi
2898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5312              		.loc 1 2900 18
 5313 0014 FB68     		ldr	r3, [r7, #12]
 5314 0016 2022     		movs	r2, #32
 5315 0018 83F83A20 		strb	r2, [r3, #58]
2901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
2905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
2906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 5316              		.loc 1 2908 3
 5317 001c F868     		ldr	r0, [r7, #12]
 5318 001e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
2909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5319              		.loc 1 2910 1
 5320 0022 00BF     		nop
 5321 0024 1037     		adds	r7, r7, #16
 5322              	.LCFI276:
 5323              		.cfi_def_cfa_offset 8
 5324 0026 BD46     		mov	sp, r7
 5325              	.LCFI277:
 5326              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 144


 5327              		@ sp needed
 5328 0028 80BD     		pop	{r7, pc}
 5329              		.cfi_endproc
 5330              	.LFE180:
 5332              		.section	.text.UART_Transmit_IT,"ax",%progbits
 5333              		.align	1
 5334              		.syntax unified
 5335              		.thumb
 5336              		.thumb_func
 5337              		.fpu fpv4-sp-d16
 5339              	UART_Transmit_IT:
 5340              	.LFB181:
2911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5341              		.loc 1 2919 1
 5342              		.cfi_startproc
 5343              		@ args = 0, pretend = 0, frame = 16
 5344              		@ frame_needed = 1, uses_anonymous_args = 0
 5345              		@ link register save eliminated.
 5346 0000 80B4     		push	{r7}
 5347              	.LCFI278:
 5348              		.cfi_def_cfa_offset 4
 5349              		.cfi_offset 7, -4
 5350 0002 85B0     		sub	sp, sp, #20
 5351              	.LCFI279:
 5352              		.cfi_def_cfa_offset 24
 5353 0004 00AF     		add	r7, sp, #0
 5354              	.LCFI280:
 5355              		.cfi_def_cfa_register 7
 5356 0006 7860     		str	r0, [r7, #4]
2920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
2921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 5357              		.loc 1 2923 12
 5358 0008 7B68     		ldr	r3, [r7, #4]
 5359 000a 93F83930 		ldrb	r3, [r3, #57]
 5360 000e DBB2     		uxtb	r3, r3
 5361              		.loc 1 2923 6
 5362 0010 212B     		cmp	r3, #33
 5363 0012 44D1     		bne	.L208
2924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 5364              		.loc 1 2925 20
 5365 0014 7B68     		ldr	r3, [r7, #4]
 5366 0016 9B68     		ldr	r3, [r3, #8]
 5367              		.loc 1 2925 8
 5368 0018 B3F5805F 		cmp	r3, #4096
 5369 001c 1AD1     		bne	.L209
2926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 145


2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
 5370              		.loc 1 2927 11
 5371 001e 7B68     		ldr	r3, [r7, #4]
 5372 0020 1B6A     		ldr	r3, [r3, #32]
 5373 0022 FB60     		str	r3, [r7, #12]
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 5374              		.loc 1 2928 40
 5375 0024 FB68     		ldr	r3, [r7, #12]
 5376 0026 1B88     		ldrh	r3, [r3]
 5377              		.loc 1 2928 29
 5378 0028 1A46     		mov	r2, r3
 5379              		.loc 1 2928 12
 5380 002a 7B68     		ldr	r3, [r7, #4]
 5381 002c 1B68     		ldr	r3, [r3]
 5382              		.loc 1 2928 29
 5383 002e C2F30802 		ubfx	r2, r2, #0, #9
 5384              		.loc 1 2928 27
 5385 0032 5A60     		str	r2, [r3, #4]
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 5386              		.loc 1 2929 22
 5387 0034 7B68     		ldr	r3, [r7, #4]
 5388 0036 1B69     		ldr	r3, [r3, #16]
 5389              		.loc 1 2929 10
 5390 0038 002B     		cmp	r3, #0
 5391 003a 05D1     		bne	.L210
2930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 5392              		.loc 1 2931 27
 5393 003c 7B68     		ldr	r3, [r7, #4]
 5394 003e 1B6A     		ldr	r3, [r3, #32]
 5395 0040 9A1C     		adds	r2, r3, #2
 5396 0042 7B68     		ldr	r3, [r7, #4]
 5397 0044 1A62     		str	r2, [r3, #32]
 5398 0046 0EE0     		b	.L211
 5399              	.L210:
2932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
 5400              		.loc 1 2935 27
 5401 0048 7B68     		ldr	r3, [r7, #4]
 5402 004a 1B6A     		ldr	r3, [r3, #32]
 5403 004c 5A1C     		adds	r2, r3, #1
 5404 004e 7B68     		ldr	r3, [r7, #4]
 5405 0050 1A62     		str	r2, [r3, #32]
 5406 0052 08E0     		b	.L211
 5407              	.L209:
2936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 5408              		.loc 1 2940 45
 5409 0054 7B68     		ldr	r3, [r7, #4]
 5410 0056 1B6A     		ldr	r3, [r3, #32]
 5411              		.loc 1 2940 57
 5412 0058 591C     		adds	r1, r3, #1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 146


 5413 005a 7A68     		ldr	r2, [r7, #4]
 5414 005c 1162     		str	r1, [r2, #32]
 5415              		.loc 1 2940 39
 5416 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5417              		.loc 1 2940 12
 5418 0060 7B68     		ldr	r3, [r7, #4]
 5419 0062 1B68     		ldr	r3, [r3]
 5420              		.loc 1 2940 27
 5421 0064 5A60     		str	r2, [r3, #4]
 5422              	.L211:
2941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 5423              		.loc 1 2943 16
 5424 0066 7B68     		ldr	r3, [r7, #4]
 5425 0068 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 5426 006a 9BB2     		uxth	r3, r3
 5427              		.loc 1 2943 9
 5428 006c 013B     		subs	r3, r3, #1
 5429 006e 9BB2     		uxth	r3, r3
 5430              		.loc 1 2943 8
 5431 0070 7A68     		ldr	r2, [r7, #4]
 5432 0072 1946     		mov	r1, r3	@ movhi
 5433 0074 D184     		strh	r1, [r2, #38]	@ movhi
 5434 0076 002B     		cmp	r3, #0
 5435 0078 0FD1     		bne	.L212
2944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 5436              		.loc 1 2946 7
 5437 007a 7B68     		ldr	r3, [r7, #4]
 5438 007c 1B68     		ldr	r3, [r3]
 5439 007e DA68     		ldr	r2, [r3, #12]
 5440 0080 7B68     		ldr	r3, [r7, #4]
 5441 0082 1B68     		ldr	r3, [r3]
 5442 0084 22F08002 		bic	r2, r2, #128
 5443 0088 DA60     		str	r2, [r3, #12]
2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 5444              		.loc 1 2949 7
 5445 008a 7B68     		ldr	r3, [r7, #4]
 5446 008c 1B68     		ldr	r3, [r3]
 5447 008e DA68     		ldr	r2, [r3, #12]
 5448 0090 7B68     		ldr	r3, [r7, #4]
 5449 0092 1B68     		ldr	r3, [r3]
 5450 0094 42F04002 		orr	r2, r2, #64
 5451 0098 DA60     		str	r2, [r3, #12]
 5452              	.L212:
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 5453              		.loc 1 2951 12
 5454 009a 0023     		movs	r3, #0
 5455 009c 00E0     		b	.L213
 5456              	.L208:
2952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 147


2954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 5457              		.loc 1 2955 12
 5458 009e 0223     		movs	r3, #2
 5459              	.L213:
2956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5460              		.loc 1 2957 1
 5461 00a0 1846     		mov	r0, r3
 5462 00a2 1437     		adds	r7, r7, #20
 5463              	.LCFI281:
 5464              		.cfi_def_cfa_offset 4
 5465 00a4 BD46     		mov	sp, r7
 5466              	.LCFI282:
 5467              		.cfi_def_cfa_register 13
 5468              		@ sp needed
 5469 00a6 5DF8047B 		ldr	r7, [sp], #4
 5470              	.LCFI283:
 5471              		.cfi_restore 7
 5472              		.cfi_def_cfa_offset 0
 5473 00aa 7047     		bx	lr
 5474              		.cfi_endproc
 5475              	.LFE181:
 5477              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 5478              		.align	1
 5479              		.syntax unified
 5480              		.thumb
 5481              		.thumb_func
 5482              		.fpu fpv4-sp-d16
 5484              	UART_EndTransmit_IT:
 5485              	.LFB182:
2958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5486              		.loc 1 2966 1
 5487              		.cfi_startproc
 5488              		@ args = 0, pretend = 0, frame = 8
 5489              		@ frame_needed = 1, uses_anonymous_args = 0
 5490 0000 80B5     		push	{r7, lr}
 5491              	.LCFI284:
 5492              		.cfi_def_cfa_offset 8
 5493              		.cfi_offset 7, -8
 5494              		.cfi_offset 14, -4
 5495 0002 82B0     		sub	sp, sp, #8
 5496              	.LCFI285:
 5497              		.cfi_def_cfa_offset 16
 5498 0004 00AF     		add	r7, sp, #0
 5499              	.LCFI286:
 5500              		.cfi_def_cfa_register 7
 5501 0006 7860     		str	r0, [r7, #4]
2967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 148


2968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 5502              		.loc 1 2968 3
 5503 0008 7B68     		ldr	r3, [r7, #4]
 5504 000a 1B68     		ldr	r3, [r3]
 5505 000c DA68     		ldr	r2, [r3, #12]
 5506 000e 7B68     		ldr	r3, [r7, #4]
 5507 0010 1B68     		ldr	r3, [r3]
 5508 0012 22F04002 		bic	r2, r2, #64
 5509 0016 DA60     		str	r2, [r3, #12]
2969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5510              		.loc 1 2971 17
 5511 0018 7B68     		ldr	r3, [r7, #4]
 5512 001a 2022     		movs	r2, #32
 5513 001c 83F83920 		strb	r2, [r3, #57]
2972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
2975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
2976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
2978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 5514              		.loc 1 2978 3
 5515 0020 7868     		ldr	r0, [r7, #4]
 5516 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
2979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 5517              		.loc 1 2981 10
 5518 0026 0023     		movs	r3, #0
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5519              		.loc 1 2982 1
 5520 0028 1846     		mov	r0, r3
 5521 002a 0837     		adds	r7, r7, #8
 5522              	.LCFI287:
 5523              		.cfi_def_cfa_offset 8
 5524 002c BD46     		mov	sp, r7
 5525              	.LCFI288:
 5526              		.cfi_def_cfa_register 13
 5527              		@ sp needed
 5528 002e 80BD     		pop	{r7, pc}
 5529              		.cfi_endproc
 5530              	.LFE182:
 5532              		.section	.text.UART_Receive_IT,"ax",%progbits
 5533              		.align	1
 5534              		.syntax unified
 5535              		.thumb
 5536              		.thumb_func
 5537              		.fpu fpv4-sp-d16
 5539              	UART_Receive_IT:
 5540              	.LFB183:
2983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
2986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 149


2988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5541              		.loc 1 2991 1
 5542              		.cfi_startproc
 5543              		@ args = 0, pretend = 0, frame = 16
 5544              		@ frame_needed = 1, uses_anonymous_args = 0
 5545 0000 80B5     		push	{r7, lr}
 5546              	.LCFI289:
 5547              		.cfi_def_cfa_offset 8
 5548              		.cfi_offset 7, -8
 5549              		.cfi_offset 14, -4
 5550 0002 84B0     		sub	sp, sp, #16
 5551              	.LCFI290:
 5552              		.cfi_def_cfa_offset 24
 5553 0004 00AF     		add	r7, sp, #0
 5554              	.LCFI291:
 5555              		.cfi_def_cfa_register 7
 5556 0006 7860     		str	r0, [r7, #4]
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
2993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 5557              		.loc 1 2995 12
 5558 0008 7B68     		ldr	r3, [r7, #4]
 5559 000a 93F83A30 		ldrb	r3, [r3, #58]
 5560 000e DBB2     		uxtb	r3, r3
 5561              		.loc 1 2995 6
 5562 0010 222B     		cmp	r3, #34
 5563 0012 71D1     		bne	.L217
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 5564              		.loc 1 2997 20
 5565 0014 7B68     		ldr	r3, [r7, #4]
 5566 0016 9B68     		ldr	r3, [r3, #8]
 5567              		.loc 1 2997 8
 5568 0018 B3F5805F 		cmp	r3, #4096
 5569 001c 23D1     		bne	.L218
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr;
 5570              		.loc 1 2999 11
 5571 001e 7B68     		ldr	r3, [r7, #4]
 5572 0020 9B6A     		ldr	r3, [r3, #40]
 5573 0022 FB60     		str	r3, [r7, #12]
3000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 5574              		.loc 1 3000 22
 5575 0024 7B68     		ldr	r3, [r7, #4]
 5576 0026 1B69     		ldr	r3, [r3, #16]
 5577              		.loc 1 3000 10
 5578 0028 002B     		cmp	r3, #0
 5579 002a 0ED1     		bne	.L219
3001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 5580              		.loc 1 3002 32
 5581 002c 7B68     		ldr	r3, [r7, #4]
 5582 002e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 150


 5583              		.loc 1 3002 42
 5584 0030 5B68     		ldr	r3, [r3, #4]
 5585              		.loc 1 3002 16
 5586 0032 9BB2     		uxth	r3, r3
 5587 0034 C3F30803 		ubfx	r3, r3, #0, #9
 5588 0038 9AB2     		uxth	r2, r3
 5589              		.loc 1 3002 14
 5590 003a FB68     		ldr	r3, [r7, #12]
 5591 003c 1A80     		strh	r2, [r3]	@ movhi
3003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 5592              		.loc 1 3003 27
 5593 003e 7B68     		ldr	r3, [r7, #4]
 5594 0040 9B6A     		ldr	r3, [r3, #40]
 5595 0042 9A1C     		adds	r2, r3, #2
 5596 0044 7B68     		ldr	r3, [r7, #4]
 5597 0046 9A62     		str	r2, [r3, #40]
 5598 0048 29E0     		b	.L220
 5599              	.L219:
3004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 5600              		.loc 1 3007 32
 5601 004a 7B68     		ldr	r3, [r7, #4]
 5602 004c 1B68     		ldr	r3, [r3]
 5603              		.loc 1 3007 42
 5604 004e 5B68     		ldr	r3, [r3, #4]
 5605              		.loc 1 3007 16
 5606 0050 9BB2     		uxth	r3, r3
 5607 0052 DBB2     		uxtb	r3, r3
 5608 0054 9AB2     		uxth	r2, r3
 5609              		.loc 1 3007 14
 5610 0056 FB68     		ldr	r3, [r7, #12]
 5611 0058 1A80     		strh	r2, [r3]	@ movhi
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 5612              		.loc 1 3008 27
 5613 005a 7B68     		ldr	r3, [r7, #4]
 5614 005c 9B6A     		ldr	r3, [r3, #40]
 5615 005e 5A1C     		adds	r2, r3, #1
 5616 0060 7B68     		ldr	r3, [r7, #4]
 5617 0062 9A62     		str	r2, [r3, #40]
 5618 0064 1BE0     		b	.L220
 5619              	.L218:
3009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->Init.Parity == UART_PARITY_NONE)
 5620              		.loc 1 3013 22
 5621 0066 7B68     		ldr	r3, [r7, #4]
 5622 0068 1B69     		ldr	r3, [r3, #16]
 5623              		.loc 1 3013 10
 5624 006a 002B     		cmp	r3, #0
 5625 006c 0AD1     		bne	.L221
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 5626              		.loc 1 3015 47
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 151


 5627 006e 7B68     		ldr	r3, [r7, #4]
 5628 0070 1B68     		ldr	r3, [r3]
 5629              		.loc 1 3015 57
 5630 0072 5868     		ldr	r0, [r3, #4]
 5631              		.loc 1 3015 15
 5632 0074 7B68     		ldr	r3, [r7, #4]
 5633 0076 9B6A     		ldr	r3, [r3, #40]
 5634              		.loc 1 3015 27
 5635 0078 591C     		adds	r1, r3, #1
 5636 007a 7A68     		ldr	r2, [r7, #4]
 5637 007c 9162     		str	r1, [r2, #40]
 5638              		.loc 1 3015 32
 5639 007e C2B2     		uxtb	r2, r0
 5640              		.loc 1 3015 30
 5641 0080 1A70     		strb	r2, [r3]
 5642 0082 0CE0     		b	.L220
 5643              	.L221:
3016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 5644              		.loc 1 3019 47
 5645 0084 7B68     		ldr	r3, [r7, #4]
 5646 0086 1B68     		ldr	r3, [r3]
 5647              		.loc 1 3019 57
 5648 0088 5B68     		ldr	r3, [r3, #4]
 5649              		.loc 1 3019 32
 5650 008a DAB2     		uxtb	r2, r3
 5651              		.loc 1 3019 15
 5652 008c 7B68     		ldr	r3, [r7, #4]
 5653 008e 9B6A     		ldr	r3, [r3, #40]
 5654              		.loc 1 3019 27
 5655 0090 581C     		adds	r0, r3, #1
 5656 0092 7968     		ldr	r1, [r7, #4]
 5657 0094 8862     		str	r0, [r1, #40]
 5658              		.loc 1 3019 32
 5659 0096 02F07F02 		and	r2, r2, #127
 5660 009a D2B2     		uxtb	r2, r2
 5661              		.loc 1 3019 30
 5662 009c 1A70     		strb	r2, [r3]
 5663              	.L220:
3020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
 5664              		.loc 1 3023 16
 5665 009e 7B68     		ldr	r3, [r7, #4]
 5666 00a0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5667 00a2 9BB2     		uxth	r3, r3
 5668              		.loc 1 3023 9
 5669 00a4 013B     		subs	r3, r3, #1
 5670 00a6 9BB2     		uxth	r3, r3
 5671              		.loc 1 3023 8
 5672 00a8 7A68     		ldr	r2, [r7, #4]
 5673 00aa 1946     		mov	r1, r3	@ movhi
 5674 00ac D185     		strh	r1, [r2, #46]	@ movhi
 5675 00ae 002B     		cmp	r3, #0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 152


 5676 00b0 20D1     		bne	.L222
3024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 5677              		.loc 1 3026 7
 5678 00b2 7B68     		ldr	r3, [r7, #4]
 5679 00b4 1B68     		ldr	r3, [r3]
 5680 00b6 DA68     		ldr	r2, [r3, #12]
 5681 00b8 7B68     		ldr	r3, [r7, #4]
 5682 00ba 1B68     		ldr	r3, [r3]
 5683 00bc 22F02002 		bic	r2, r2, #32
 5684 00c0 DA60     		str	r2, [r3, #12]
3027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 5685              		.loc 1 3029 7
 5686 00c2 7B68     		ldr	r3, [r7, #4]
 5687 00c4 1B68     		ldr	r3, [r3]
 5688 00c6 DA68     		ldr	r2, [r3, #12]
 5689 00c8 7B68     		ldr	r3, [r7, #4]
 5690 00ca 1B68     		ldr	r3, [r3]
 5691 00cc 22F48072 		bic	r2, r2, #256
 5692 00d0 DA60     		str	r2, [r3, #12]
3030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 5693              		.loc 1 3032 7
 5694 00d2 7B68     		ldr	r3, [r7, #4]
 5695 00d4 1B68     		ldr	r3, [r3]
 5696 00d6 5A69     		ldr	r2, [r3, #20]
 5697 00d8 7B68     		ldr	r3, [r7, #4]
 5698 00da 1B68     		ldr	r3, [r3]
 5699 00dc 22F00102 		bic	r2, r2, #1
 5700 00e0 5A61     		str	r2, [r3, #20]
3033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5701              		.loc 1 3035 22
 5702 00e2 7B68     		ldr	r3, [r7, #4]
 5703 00e4 2022     		movs	r2, #32
 5704 00e6 83F83A20 		strb	r2, [r3, #58]
3036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 5705              		.loc 1 3042 7
 5706 00ea 7868     		ldr	r0, [r7, #4]
 5707 00ec FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
 5708              		.loc 1 3045 14
 5709 00f0 0023     		movs	r3, #0
 5710 00f2 02E0     		b	.L223
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 153


 5711              	.L222:
3046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 5712              		.loc 1 3047 12
 5713 00f4 0023     		movs	r3, #0
 5714 00f6 00E0     		b	.L223
 5715              	.L217:
3048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 5716              		.loc 1 3051 12
 5717 00f8 0223     		movs	r3, #2
 5718              	.L223:
3052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5719              		.loc 1 3053 1
 5720 00fa 1846     		mov	r0, r3
 5721 00fc 1037     		adds	r7, r7, #16
 5722              	.LCFI292:
 5723              		.cfi_def_cfa_offset 8
 5724 00fe BD46     		mov	sp, r7
 5725              	.LCFI293:
 5726              		.cfi_def_cfa_register 13
 5727              		@ sp needed
 5728 0100 80BD     		pop	{r7, pc}
 5729              		.cfi_endproc
 5730              	.LFE183:
 5732              		.global	__aeabi_uldivmod
 5733              		.section	.text.UART_SetConfig,"ax",%progbits
 5734              		.align	1
 5735              		.syntax unified
 5736              		.thumb
 5737              		.thumb_func
 5738              		.fpu fpv4-sp-d16
 5740              	UART_SetConfig:
 5741              	.LFB184:
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5742              		.loc 1 3062 1
 5743              		.cfi_startproc
 5744              		@ args = 0, pretend = 0, frame = 240
 5745              		@ frame_needed = 1, uses_anonymous_args = 0
 5746 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5747              	.LCFI294:
 5748              		.cfi_def_cfa_offset 36
 5749              		.cfi_offset 4, -36
 5750              		.cfi_offset 5, -32
 5751              		.cfi_offset 6, -28
 5752              		.cfi_offset 7, -24
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 154


 5753              		.cfi_offset 8, -20
 5754              		.cfi_offset 9, -16
 5755              		.cfi_offset 10, -12
 5756              		.cfi_offset 11, -8
 5757              		.cfi_offset 14, -4
 5758 0004 BDB0     		sub	sp, sp, #244
 5759              	.LCFI295:
 5760              		.cfi_def_cfa_offset 280
 5761 0006 00AF     		add	r7, sp, #0
 5762              	.LCFI296:
 5763              		.cfi_def_cfa_register 7
 5764 0008 C7F8E400 		str	r0, [r7, #228]
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg;
3064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t pclk;
3065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
3067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      according to huart->Init.StopBits value */
3075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 5765              		.loc 1 3075 3
 5766 000c D7F8E430 		ldr	r3, [r7, #228]
 5767 0010 1B68     		ldr	r3, [r3]
 5768 0012 1B69     		ldr	r3, [r3, #16]
 5769 0014 23F44050 		bic	r0, r3, #12288
 5770 0018 D7F8E430 		ldr	r3, [r7, #228]
 5771 001c D968     		ldr	r1, [r3, #12]
 5772 001e D7F8E430 		ldr	r3, [r7, #228]
 5773 0022 1A68     		ldr	r2, [r3]
 5774 0024 40EA0103 		orr	r3, r0, r1
 5775 0028 1361     		str	r3, [r2, #16]
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 5776              		.loc 1 3084 33
 5777 002a D7F8E430 		ldr	r3, [r7, #228]
 5778 002e 9A68     		ldr	r2, [r3, #8]
 5779              		.loc 1 3084 58
 5780 0030 D7F8E430 		ldr	r3, [r7, #228]
 5781 0034 1B69     		ldr	r3, [r3, #16]
 5782              		.loc 1 3084 45
 5783 0036 1A43     		orrs	r2, r2, r3
 5784              		.loc 1 3084 79
 5785 0038 D7F8E430 		ldr	r3, [r7, #228]
 5786 003c 5B69     		ldr	r3, [r3, #20]
 5787              		.loc 1 3084 66
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 155


 5788 003e 1A43     		orrs	r2, r2, r3
 5789              		.loc 1 3084 98
 5790 0040 D7F8E430 		ldr	r3, [r7, #228]
 5791 0044 DB69     		ldr	r3, [r3, #28]
 5792              		.loc 1 3084 10
 5793 0046 1343     		orrs	r3, r3, r2
 5794 0048 C7F8EC30 		str	r3, [r7, #236]
3085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 5795              		.loc 1 3085 3
 5796 004c D7F8E430 		ldr	r3, [r7, #228]
 5797 0050 1B68     		ldr	r3, [r3]
 5798 0052 DB68     		ldr	r3, [r3, #12]
 5799 0054 23F41641 		bic	r1, r3, #38400
 5800 0058 21F00C01 		bic	r1, r1, #12
 5801 005c D7F8E430 		ldr	r3, [r7, #228]
 5802 0060 1A68     		ldr	r2, [r3]
 5803 0062 D7F8EC30 		ldr	r3, [r7, #236]
 5804 0066 0B43     		orrs	r3, r3, r1
 5805 0068 D360     		str	r3, [r2, #12]
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
3087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              tmpreg);
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 5806              		.loc 1 3091 3
 5807 006a D7F8E430 		ldr	r3, [r7, #228]
 5808 006e 1B68     		ldr	r3, [r3]
 5809 0070 5B69     		ldr	r3, [r3, #20]
 5810 0072 23F44070 		bic	r0, r3, #768
 5811 0076 D7F8E430 		ldr	r3, [r7, #228]
 5812 007a 9969     		ldr	r1, [r3, #24]
 5813 007c D7F8E430 		ldr	r3, [r7, #228]
 5814 0080 1A68     		ldr	r2, [r3]
 5815 0082 40EA0103 		orr	r3, r0, r1
 5816 0086 5361     		str	r3, [r2, #20]
3092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Over Sampling */
3094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 5817              		.loc 1 3094 18
 5818 0088 D7F8E430 		ldr	r3, [r7, #228]
 5819 008c DB69     		ldr	r3, [r3, #28]
 5820              		.loc 1 3094 6
 5821 008e B3F5004F 		cmp	r3, #32768
 5822 0092 40F0A581 		bne	.L225
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
 5823              		.loc 1 3104 15
 5824 0096 D7F8E430 		ldr	r3, [r7, #228]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 156


 5825 009a 1A68     		ldr	r2, [r3]
 5826              		.loc 1 3104 8
 5827 009c CD4B     		ldr	r3, .L233
 5828 009e 9A42     		cmp	r2, r3
 5829 00a0 06D0     		beq	.L226
 5830              		.loc 1 3104 46 discriminator 1
 5831 00a2 D7F8E430 		ldr	r3, [r7, #228]
 5832 00a6 1A68     		ldr	r2, [r3]
 5833              		.loc 1 3104 37 discriminator 1
 5834 00a8 CB4B     		ldr	r3, .L233+4
 5835 00aa 9A42     		cmp	r2, r3
 5836 00ac 40F0CB80 		bne	.L227
 5837              	.L226:
3105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
 5838              		.loc 1 3106 14
 5839 00b0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5840 00b4 C7F8E800 		str	r0, [r7, #232]
3107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 5841              		.loc 1 3107 30
 5842 00b8 D7F8E830 		ldr	r3, [r7, #232]
 5843 00bc 1C46     		mov	r4, r3
 5844 00be 4FF00005 		mov	r5, #0
 5845 00c2 2246     		mov	r2, r4
 5846 00c4 2B46     		mov	r3, r5
 5847 00c6 9118     		adds	r1, r2, r2
 5848 00c8 C7F88810 		str	r1, [r7, #136]
 5849 00cc 5B41     		adcs	r3, r3, r3
 5850 00ce C7F88C30 		str	r3, [r7, #140]
 5851 00d2 D7E92223 		ldrd	r2, [r7, #136]
 5852 00d6 1219     		adds	r2, r2, r4
 5853 00d8 45EB0303 		adc	r3, r5, r3
 5854 00dc 4FF00000 		mov	r0, #0
 5855 00e0 4FF00001 		mov	r1, #0
 5856 00e4 D900     		lsls	r1, r3, #3
 5857 00e6 41EA5271 		orr	r1, r1, r2, lsr #29
 5858 00ea D000     		lsls	r0, r2, #3
 5859 00ec 0246     		mov	r2, r0
 5860 00ee 0B46     		mov	r3, r1
 5861 00f0 1119     		adds	r1, r2, r4
 5862 00f2 C7F8D810 		str	r1, [r7, #216]
 5863 00f6 6B41     		adcs	r3, r3, r5
 5864 00f8 C7F8DC30 		str	r3, [r7, #220]
 5865 00fc D7F8E430 		ldr	r3, [r7, #228]
 5866 0100 5B68     		ldr	r3, [r3, #4]
 5867 0102 1A46     		mov	r2, r3
 5868 0104 4FF00003 		mov	r3, #0
 5869 0108 9118     		adds	r1, r2, r2
 5870 010a C7F88010 		str	r1, [r7, #128]
 5871 010e 5B41     		adcs	r3, r3, r3
 5872 0110 C7F88430 		str	r3, [r7, #132]
 5873 0114 D7E92023 		ldrd	r2, [r7, #128]
 5874 0118 D7E93601 		ldrd	r0, [r7, #216]
 5875 011c FFF7FEFF 		bl	__aeabi_uldivmod
 5876              	.LVL3:
 5877 0120 0246     		mov	r2, r0
 5878 0122 0B46     		mov	r3, r1
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 157


 5879 0124 AD4B     		ldr	r3, .L233+8
 5880 0126 A3FB0223 		umull	r2, r3, r3, r2
 5881 012a 5B09     		lsrs	r3, r3, #5
 5882 012c 1E01     		lsls	r6, r3, #4
 5883 012e D7F8E830 		ldr	r3, [r7, #232]
 5884 0132 1C46     		mov	r4, r3
 5885 0134 4FF00005 		mov	r5, #0
 5886 0138 2246     		mov	r2, r4
 5887 013a 2B46     		mov	r3, r5
 5888 013c 9118     		adds	r1, r2, r2
 5889 013e B967     		str	r1, [r7, #120]
 5890 0140 5B41     		adcs	r3, r3, r3
 5891 0142 FB67     		str	r3, [r7, #124]
 5892 0144 D7E91E23 		ldrd	r2, [r7, #120]
 5893 0148 1219     		adds	r2, r2, r4
 5894 014a 45EB0303 		adc	r3, r5, r3
 5895 014e 4FF00000 		mov	r0, #0
 5896 0152 4FF00001 		mov	r1, #0
 5897 0156 D900     		lsls	r1, r3, #3
 5898 0158 41EA5271 		orr	r1, r1, r2, lsr #29
 5899 015c D000     		lsls	r0, r2, #3
 5900 015e 0246     		mov	r2, r0
 5901 0160 0B46     		mov	r3, r1
 5902 0162 1119     		adds	r1, r2, r4
 5903 0164 C7F8D010 		str	r1, [r7, #208]
 5904 0168 6B41     		adcs	r3, r3, r5
 5905 016a C7F8D430 		str	r3, [r7, #212]
 5906 016e D7F8E430 		ldr	r3, [r7, #228]
 5907 0172 5B68     		ldr	r3, [r3, #4]
 5908 0174 1A46     		mov	r2, r3
 5909 0176 4FF00003 		mov	r3, #0
 5910 017a 9118     		adds	r1, r2, r2
 5911 017c 3967     		str	r1, [r7, #112]
 5912 017e 5B41     		adcs	r3, r3, r3
 5913 0180 7B67     		str	r3, [r7, #116]
 5914 0182 D7E91C23 		ldrd	r2, [r7, #112]
 5915 0186 D7E93401 		ldrd	r0, [r7, #208]
 5916 018a FFF7FEFF 		bl	__aeabi_uldivmod
 5917              	.LVL4:
 5918 018e 0246     		mov	r2, r0
 5919 0190 0B46     		mov	r3, r1
 5920 0192 924B     		ldr	r3, .L233+8
 5921 0194 A3FB0213 		umull	r1, r3, r3, r2
 5922 0198 5B09     		lsrs	r3, r3, #5
 5923 019a 6421     		movs	r1, #100
 5924 019c 01FB03F3 		mul	r3, r1, r3
 5925 01a0 D31A     		subs	r3, r2, r3
 5926 01a2 DB00     		lsls	r3, r3, #3
 5927 01a4 3233     		adds	r3, r3, #50
 5928 01a6 8D4A     		ldr	r2, .L233+8
 5929 01a8 A2FB0323 		umull	r2, r3, r2, r3
 5930 01ac 5B09     		lsrs	r3, r3, #5
 5931 01ae 5B00     		lsls	r3, r3, #1
 5932 01b0 03F4F873 		and	r3, r3, #496
 5933 01b4 1E44     		add	r6, r6, r3
 5934 01b6 D7F8E830 		ldr	r3, [r7, #232]
 5935 01ba 1846     		mov	r0, r3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 158


 5936 01bc 4FF00001 		mov	r1, #0
 5937 01c0 0246     		mov	r2, r0
 5938 01c2 0B46     		mov	r3, r1
 5939 01c4 9418     		adds	r4, r2, r2
 5940 01c6 BC66     		str	r4, [r7, #104]
 5941 01c8 5B41     		adcs	r3, r3, r3
 5942 01ca FB66     		str	r3, [r7, #108]
 5943 01cc D7E91A23 		ldrd	r2, [r7, #104]
 5944 01d0 1218     		adds	r2, r2, r0
 5945 01d2 41EB0303 		adc	r3, r1, r3
 5946 01d6 4FF00004 		mov	r4, #0
 5947 01da 4FF00005 		mov	r5, #0
 5948 01de DD00     		lsls	r5, r3, #3
 5949 01e0 45EA5275 		orr	r5, r5, r2, lsr #29
 5950 01e4 D400     		lsls	r4, r2, #3
 5951 01e6 2246     		mov	r2, r4
 5952 01e8 2B46     		mov	r3, r5
 5953 01ea 1418     		adds	r4, r2, r0
 5954 01ec C7F8C840 		str	r4, [r7, #200]
 5955 01f0 4B41     		adcs	r3, r3, r1
 5956 01f2 C7F8CC30 		str	r3, [r7, #204]
 5957 01f6 D7F8E430 		ldr	r3, [r7, #228]
 5958 01fa 5B68     		ldr	r3, [r3, #4]
 5959 01fc 1A46     		mov	r2, r3
 5960 01fe 4FF00003 		mov	r3, #0
 5961 0202 9118     		adds	r1, r2, r2
 5962 0204 3966     		str	r1, [r7, #96]
 5963 0206 5B41     		adcs	r3, r3, r3
 5964 0208 7B66     		str	r3, [r7, #100]
 5965 020a D7E91823 		ldrd	r2, [r7, #96]
 5966 020e D7E93201 		ldrd	r0, [r7, #200]
 5967 0212 FFF7FEFF 		bl	__aeabi_uldivmod
 5968              	.LVL5:
 5969 0216 0246     		mov	r2, r0
 5970 0218 0B46     		mov	r3, r1
 5971 021a 704B     		ldr	r3, .L233+8
 5972 021c A3FB0213 		umull	r1, r3, r3, r2
 5973 0220 5B09     		lsrs	r3, r3, #5
 5974 0222 6421     		movs	r1, #100
 5975 0224 01FB03F3 		mul	r3, r1, r3
 5976 0228 D31A     		subs	r3, r2, r3
 5977 022a DB00     		lsls	r3, r3, #3
 5978 022c 3233     		adds	r3, r3, #50
 5979 022e 6B4A     		ldr	r2, .L233+8
 5980 0230 A2FB0323 		umull	r2, r3, r2, r3
 5981 0234 5B09     		lsrs	r3, r3, #5
 5982 0236 03F00702 		and	r2, r3, #7
 5983              		.loc 1 3107 12
 5984 023a D7F8E430 		ldr	r3, [r7, #228]
 5985 023e 1B68     		ldr	r3, [r3]
 5986              		.loc 1 3107 30
 5987 0240 3244     		add	r2, r2, r6
 5988              		.loc 1 3107 28
 5989 0242 9A60     		str	r2, [r3, #8]
 5990 0244 6DE2     		b	.L229
 5991              	.L227:
3108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 159


3109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
 5992              		.loc 1 3118 14
 5993 0246 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5994 024a C7F8E800 		str	r0, [r7, #232]
3119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 5995              		.loc 1 3119 30
 5996 024e D7F8E830 		ldr	r3, [r7, #232]
 5997 0252 1C46     		mov	r4, r3
 5998 0254 4FF00005 		mov	r5, #0
 5999 0258 2246     		mov	r2, r4
 6000 025a 2B46     		mov	r3, r5
 6001 025c 9118     		adds	r1, r2, r2
 6002 025e B965     		str	r1, [r7, #88]
 6003 0260 5B41     		adcs	r3, r3, r3
 6004 0262 FB65     		str	r3, [r7, #92]
 6005 0264 D7E91623 		ldrd	r2, [r7, #88]
 6006 0268 1219     		adds	r2, r2, r4
 6007 026a 45EB0303 		adc	r3, r5, r3
 6008 026e 4FF00000 		mov	r0, #0
 6009 0272 4FF00001 		mov	r1, #0
 6010 0276 D900     		lsls	r1, r3, #3
 6011 0278 41EA5271 		orr	r1, r1, r2, lsr #29
 6012 027c D000     		lsls	r0, r2, #3
 6013 027e 0246     		mov	r2, r0
 6014 0280 0B46     		mov	r3, r1
 6015 0282 1119     		adds	r1, r2, r4
 6016 0284 C7F8C010 		str	r1, [r7, #192]
 6017 0288 6B41     		adcs	r3, r3, r5
 6018 028a C7F8C430 		str	r3, [r7, #196]
 6019 028e D7F8E430 		ldr	r3, [r7, #228]
 6020 0292 5B68     		ldr	r3, [r3, #4]
 6021 0294 1A46     		mov	r2, r3
 6022 0296 4FF00003 		mov	r3, #0
 6023 029a 9118     		adds	r1, r2, r2
 6024 029c 3965     		str	r1, [r7, #80]
 6025 029e 5B41     		adcs	r3, r3, r3
 6026 02a0 7B65     		str	r3, [r7, #84]
 6027 02a2 D7E91423 		ldrd	r2, [r7, #80]
 6028 02a6 D7E93001 		ldrd	r0, [r7, #192]
 6029 02aa FFF7FEFF 		bl	__aeabi_uldivmod
 6030              	.LVL6:
 6031 02ae 0246     		mov	r2, r0
 6032 02b0 0B46     		mov	r3, r1
 6033 02b2 4A4B     		ldr	r3, .L233+8
 6034 02b4 A3FB0223 		umull	r2, r3, r3, r2
 6035 02b8 5B09     		lsrs	r3, r3, #5
 6036 02ba 1E01     		lsls	r6, r3, #4
 6037 02bc D7F8E830 		ldr	r3, [r7, #232]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 160


 6038 02c0 1C46     		mov	r4, r3
 6039 02c2 4FF00005 		mov	r5, #0
 6040 02c6 2246     		mov	r2, r4
 6041 02c8 2B46     		mov	r3, r5
 6042 02ca 9118     		adds	r1, r2, r2
 6043 02cc B964     		str	r1, [r7, #72]
 6044 02ce 5B41     		adcs	r3, r3, r3
 6045 02d0 FB64     		str	r3, [r7, #76]
 6046 02d2 D7E91223 		ldrd	r2, [r7, #72]
 6047 02d6 1219     		adds	r2, r2, r4
 6048 02d8 45EB0303 		adc	r3, r5, r3
 6049 02dc 4FF00000 		mov	r0, #0
 6050 02e0 4FF00001 		mov	r1, #0
 6051 02e4 D900     		lsls	r1, r3, #3
 6052 02e6 41EA5271 		orr	r1, r1, r2, lsr #29
 6053 02ea D000     		lsls	r0, r2, #3
 6054 02ec 0246     		mov	r2, r0
 6055 02ee 0B46     		mov	r3, r1
 6056 02f0 1119     		adds	r1, r2, r4
 6057 02f2 C7F8B810 		str	r1, [r7, #184]
 6058 02f6 6B41     		adcs	r3, r3, r5
 6059 02f8 C7F8BC30 		str	r3, [r7, #188]
 6060 02fc D7F8E430 		ldr	r3, [r7, #228]
 6061 0300 5B68     		ldr	r3, [r3, #4]
 6062 0302 1A46     		mov	r2, r3
 6063 0304 4FF00003 		mov	r3, #0
 6064 0308 9118     		adds	r1, r2, r2
 6065 030a 3964     		str	r1, [r7, #64]
 6066 030c 5B41     		adcs	r3, r3, r3
 6067 030e 7B64     		str	r3, [r7, #68]
 6068 0310 D7E91023 		ldrd	r2, [r7, #64]
 6069 0314 D7E92E01 		ldrd	r0, [r7, #184]
 6070 0318 FFF7FEFF 		bl	__aeabi_uldivmod
 6071              	.LVL7:
 6072 031c 0246     		mov	r2, r0
 6073 031e 0B46     		mov	r3, r1
 6074 0320 2E4B     		ldr	r3, .L233+8
 6075 0322 A3FB0213 		umull	r1, r3, r3, r2
 6076 0326 5B09     		lsrs	r3, r3, #5
 6077 0328 6421     		movs	r1, #100
 6078 032a 01FB03F3 		mul	r3, r1, r3
 6079 032e D31A     		subs	r3, r2, r3
 6080 0330 DB00     		lsls	r3, r3, #3
 6081 0332 3233     		adds	r3, r3, #50
 6082 0334 294A     		ldr	r2, .L233+8
 6083 0336 A2FB0323 		umull	r2, r3, r2, r3
 6084 033a 5B09     		lsrs	r3, r3, #5
 6085 033c 5B00     		lsls	r3, r3, #1
 6086 033e 03F4F873 		and	r3, r3, #496
 6087 0342 1E44     		add	r6, r6, r3
 6088 0344 D7F8E830 		ldr	r3, [r7, #232]
 6089 0348 1846     		mov	r0, r3
 6090 034a 4FF00001 		mov	r1, #0
 6091 034e 0246     		mov	r2, r0
 6092 0350 0B46     		mov	r3, r1
 6093 0352 9418     		adds	r4, r2, r2
 6094 0354 BC63     		str	r4, [r7, #56]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 161


 6095 0356 5B41     		adcs	r3, r3, r3
 6096 0358 FB63     		str	r3, [r7, #60]
 6097 035a D7E90E23 		ldrd	r2, [r7, #56]
 6098 035e 1218     		adds	r2, r2, r0
 6099 0360 41EB0303 		adc	r3, r1, r3
 6100 0364 4FF00004 		mov	r4, #0
 6101 0368 4FF00005 		mov	r5, #0
 6102 036c DD00     		lsls	r5, r3, #3
 6103 036e 45EA5275 		orr	r5, r5, r2, lsr #29
 6104 0372 D400     		lsls	r4, r2, #3
 6105 0374 2246     		mov	r2, r4
 6106 0376 2B46     		mov	r3, r5
 6107 0378 1418     		adds	r4, r2, r0
 6108 037a C7F8B040 		str	r4, [r7, #176]
 6109 037e 4B41     		adcs	r3, r3, r1
 6110 0380 C7F8B430 		str	r3, [r7, #180]
 6111 0384 D7F8E430 		ldr	r3, [r7, #228]
 6112 0388 5B68     		ldr	r3, [r3, #4]
 6113 038a 1A46     		mov	r2, r3
 6114 038c 4FF00003 		mov	r3, #0
 6115 0390 9118     		adds	r1, r2, r2
 6116 0392 3963     		str	r1, [r7, #48]
 6117 0394 5B41     		adcs	r3, r3, r3
 6118 0396 7B63     		str	r3, [r7, #52]
 6119 0398 D7E90C23 		ldrd	r2, [r7, #48]
 6120 039c D7E92C01 		ldrd	r0, [r7, #176]
 6121 03a0 FFF7FEFF 		bl	__aeabi_uldivmod
 6122              	.LVL8:
 6123 03a4 0246     		mov	r2, r0
 6124 03a6 0B46     		mov	r3, r1
 6125 03a8 0C4B     		ldr	r3, .L233+8
 6126 03aa A3FB0213 		umull	r1, r3, r3, r2
 6127 03ae 5B09     		lsrs	r3, r3, #5
 6128 03b0 6421     		movs	r1, #100
 6129 03b2 01FB03F3 		mul	r3, r1, r3
 6130 03b6 D31A     		subs	r3, r2, r3
 6131 03b8 DB00     		lsls	r3, r3, #3
 6132 03ba 3233     		adds	r3, r3, #50
 6133 03bc 074A     		ldr	r2, .L233+8
 6134 03be A2FB0323 		umull	r2, r3, r2, r3
 6135 03c2 5B09     		lsrs	r3, r3, #5
 6136 03c4 03F00702 		and	r2, r3, #7
 6137              		.loc 1 3119 12
 6138 03c8 D7F8E430 		ldr	r3, [r7, #228]
 6139 03cc 1B68     		ldr	r3, [r3]
 6140              		.loc 1 3119 30
 6141 03ce 3244     		add	r2, r2, r6
 6142              		.loc 1 3119 28
 6143 03d0 9A60     		str	r2, [r3, #8]
3120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
3125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 162


3128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
3133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6144              		.loc 1 3150 1
 6145 03d2 A6E1     		b	.L232
 6146              	.L234:
 6147              		.align	2
 6148              	.L233:
 6149 03d4 00100140 		.word	1073811456
 6150 03d8 00140140 		.word	1073812480
 6151 03dc 1F85EB51 		.word	1374389535
 6152              	.L225:
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6153              		.loc 1 3132 15
 6154 03e0 D7F8E430 		ldr	r3, [r7, #228]
 6155 03e4 1A68     		ldr	r2, [r3]
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6156              		.loc 1 3132 8
 6157 03e6 D14B     		ldr	r3, .L235
 6158 03e8 9A42     		cmp	r2, r3
 6159 03ea 06D0     		beq	.L230
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6160              		.loc 1 3132 46 discriminator 1
 6161 03ec D7F8E430 		ldr	r3, [r7, #228]
 6162 03f0 1A68     		ldr	r2, [r3]
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6163              		.loc 1 3132 37 discriminator 1
 6164 03f2 CF4B     		ldr	r3, .L235+4
 6165 03f4 9A42     		cmp	r2, r3
 6166 03f6 40F0CA80 		bne	.L231
 6167              	.L230:
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 6168              		.loc 1 3134 14
 6169 03fa FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 6170 03fe C7F8E800 		str	r0, [r7, #232]
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6171              		.loc 1 3135 30
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 163


 6172 0402 D7F8E830 		ldr	r3, [r7, #232]
 6173 0406 1C46     		mov	r4, r3
 6174 0408 4FF00005 		mov	r5, #0
 6175 040c 2246     		mov	r2, r4
 6176 040e 2B46     		mov	r3, r5
 6177 0410 9118     		adds	r1, r2, r2
 6178 0412 B962     		str	r1, [r7, #40]
 6179 0414 5B41     		adcs	r3, r3, r3
 6180 0416 FB62     		str	r3, [r7, #44]
 6181 0418 D7E90A23 		ldrd	r2, [r7, #40]
 6182 041c 1219     		adds	r2, r2, r4
 6183 041e 45EB0303 		adc	r3, r5, r3
 6184 0422 4FF00000 		mov	r0, #0
 6185 0426 4FF00001 		mov	r1, #0
 6186 042a D900     		lsls	r1, r3, #3
 6187 042c 41EA5271 		orr	r1, r1, r2, lsr #29
 6188 0430 D000     		lsls	r0, r2, #3
 6189 0432 0246     		mov	r2, r0
 6190 0434 0B46     		mov	r3, r1
 6191 0436 12EB040A 		adds	r10, r2, r4
 6192 043a 43EB050B 		adc	fp, r3, r5
 6193 043e D7F8E430 		ldr	r3, [r7, #228]
 6194 0442 5B68     		ldr	r3, [r3, #4]
 6195 0444 1846     		mov	r0, r3
 6196 0446 4FF00001 		mov	r1, #0
 6197 044a 4FF00002 		mov	r2, #0
 6198 044e 4FF00003 		mov	r3, #0
 6199 0452 8B00     		lsls	r3, r1, #2
 6200 0454 43EA9073 		orr	r3, r3, r0, lsr #30
 6201 0458 8200     		lsls	r2, r0, #2
 6202 045a 5046     		mov	r0, r10
 6203 045c 5946     		mov	r1, fp
 6204 045e FFF7FEFF 		bl	__aeabi_uldivmod
 6205              	.LVL9:
 6206 0462 0246     		mov	r2, r0
 6207 0464 0B46     		mov	r3, r1
 6208 0466 B34B     		ldr	r3, .L235+8
 6209 0468 A3FB0223 		umull	r2, r3, r3, r2
 6210 046c 5B09     		lsrs	r3, r3, #5
 6211 046e 1E01     		lsls	r6, r3, #4
 6212 0470 D7F8E830 		ldr	r3, [r7, #232]
 6213 0474 1846     		mov	r0, r3
 6214 0476 4FF00001 		mov	r1, #0
 6215 047a 0246     		mov	r2, r0
 6216 047c 0B46     		mov	r3, r1
 6217 047e 9418     		adds	r4, r2, r2
 6218 0480 3C62     		str	r4, [r7, #32]
 6219 0482 5B41     		adcs	r3, r3, r3
 6220 0484 7B62     		str	r3, [r7, #36]
 6221 0486 D7E90823 		ldrd	r2, [r7, #32]
 6222 048a 1218     		adds	r2, r2, r0
 6223 048c 41EB0303 		adc	r3, r1, r3
 6224 0490 4FF00004 		mov	r4, #0
 6225 0494 4FF00005 		mov	r5, #0
 6226 0498 DD00     		lsls	r5, r3, #3
 6227 049a 45EA5275 		orr	r5, r5, r2, lsr #29
 6228 049e D400     		lsls	r4, r2, #3
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 164


 6229 04a0 2246     		mov	r2, r4
 6230 04a2 2B46     		mov	r3, r5
 6231 04a4 1418     		adds	r4, r2, r0
 6232 04a6 C7F8A840 		str	r4, [r7, #168]
 6233 04aa 4B41     		adcs	r3, r3, r1
 6234 04ac C7F8AC30 		str	r3, [r7, #172]
 6235 04b0 D7F8E430 		ldr	r3, [r7, #228]
 6236 04b4 5B68     		ldr	r3, [r3, #4]
 6237 04b6 1846     		mov	r0, r3
 6238 04b8 4FF00001 		mov	r1, #0
 6239 04bc 4FF00002 		mov	r2, #0
 6240 04c0 4FF00003 		mov	r3, #0
 6241 04c4 8B00     		lsls	r3, r1, #2
 6242 04c6 43EA9073 		orr	r3, r3, r0, lsr #30
 6243 04ca 8200     		lsls	r2, r0, #2
 6244 04cc D7E92A01 		ldrd	r0, [r7, #168]
 6245 04d0 FFF7FEFF 		bl	__aeabi_uldivmod
 6246              	.LVL10:
 6247 04d4 0246     		mov	r2, r0
 6248 04d6 0B46     		mov	r3, r1
 6249 04d8 964B     		ldr	r3, .L235+8
 6250 04da A3FB0213 		umull	r1, r3, r3, r2
 6251 04de 5B09     		lsrs	r3, r3, #5
 6252 04e0 6421     		movs	r1, #100
 6253 04e2 01FB03F3 		mul	r3, r1, r3
 6254 04e6 D31A     		subs	r3, r2, r3
 6255 04e8 1B01     		lsls	r3, r3, #4
 6256 04ea 3233     		adds	r3, r3, #50
 6257 04ec 914A     		ldr	r2, .L235+8
 6258 04ee A2FB0323 		umull	r2, r3, r2, r3
 6259 04f2 5B09     		lsrs	r3, r3, #5
 6260 04f4 03F0F003 		and	r3, r3, #240
 6261 04f8 1E44     		add	r6, r6, r3
 6262 04fa D7F8E830 		ldr	r3, [r7, #232]
 6263 04fe 1846     		mov	r0, r3
 6264 0500 4FF00001 		mov	r1, #0
 6265 0504 0246     		mov	r2, r0
 6266 0506 0B46     		mov	r3, r1
 6267 0508 9418     		adds	r4, r2, r2
 6268 050a BC61     		str	r4, [r7, #24]
 6269 050c 5B41     		adcs	r3, r3, r3
 6270 050e FB61     		str	r3, [r7, #28]
 6271 0510 D7E90623 		ldrd	r2, [r7, #24]
 6272 0514 1218     		adds	r2, r2, r0
 6273 0516 41EB0303 		adc	r3, r1, r3
 6274 051a 4FF00004 		mov	r4, #0
 6275 051e 4FF00005 		mov	r5, #0
 6276 0522 DD00     		lsls	r5, r3, #3
 6277 0524 45EA5275 		orr	r5, r5, r2, lsr #29
 6278 0528 D400     		lsls	r4, r2, #3
 6279 052a 2246     		mov	r2, r4
 6280 052c 2B46     		mov	r3, r5
 6281 052e 1418     		adds	r4, r2, r0
 6282 0530 C7F8A040 		str	r4, [r7, #160]
 6283 0534 4B41     		adcs	r3, r3, r1
 6284 0536 C7F8A430 		str	r3, [r7, #164]
 6285 053a D7F8E430 		ldr	r3, [r7, #228]
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 165


 6286 053e 5B68     		ldr	r3, [r3, #4]
 6287 0540 1846     		mov	r0, r3
 6288 0542 4FF00001 		mov	r1, #0
 6289 0546 4FF00002 		mov	r2, #0
 6290 054a 4FF00003 		mov	r3, #0
 6291 054e 8B00     		lsls	r3, r1, #2
 6292 0550 43EA9073 		orr	r3, r3, r0, lsr #30
 6293 0554 8200     		lsls	r2, r0, #2
 6294 0556 D7E92801 		ldrd	r0, [r7, #160]
 6295 055a FFF7FEFF 		bl	__aeabi_uldivmod
 6296              	.LVL11:
 6297 055e 0246     		mov	r2, r0
 6298 0560 0B46     		mov	r3, r1
 6299 0562 744B     		ldr	r3, .L235+8
 6300 0564 A3FB0213 		umull	r1, r3, r3, r2
 6301 0568 5B09     		lsrs	r3, r3, #5
 6302 056a 6421     		movs	r1, #100
 6303 056c 01FB03F3 		mul	r3, r1, r3
 6304 0570 D31A     		subs	r3, r2, r3
 6305 0572 1B01     		lsls	r3, r3, #4
 6306 0574 3233     		adds	r3, r3, #50
 6307 0576 6F4A     		ldr	r2, .L235+8
 6308 0578 A2FB0323 		umull	r2, r3, r2, r3
 6309 057c 5B09     		lsrs	r3, r3, #5
 6310 057e 03F00F02 		and	r2, r3, #15
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6311              		.loc 1 3135 12
 6312 0582 D7F8E430 		ldr	r3, [r7, #228]
 6313 0586 1B68     		ldr	r3, [r3]
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6314              		.loc 1 3135 30
 6315 0588 3244     		add	r2, r2, r6
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6316              		.loc 1 3135 28
 6317 058a 9A60     		str	r2, [r3, #8]
 6318 058c C9E0     		b	.L229
 6319              	.L231:
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 6320              		.loc 1 3146 14
 6321 058e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6322 0592 C7F8E800 		str	r0, [r7, #232]
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6323              		.loc 1 3147 30
 6324 0596 D7F8E830 		ldr	r3, [r7, #232]
 6325 059a 1C46     		mov	r4, r3
 6326 059c 4FF00005 		mov	r5, #0
 6327 05a0 2246     		mov	r2, r4
 6328 05a2 2B46     		mov	r3, r5
 6329 05a4 9118     		adds	r1, r2, r2
 6330 05a6 3961     		str	r1, [r7, #16]
 6331 05a8 5B41     		adcs	r3, r3, r3
 6332 05aa 7B61     		str	r3, [r7, #20]
 6333 05ac D7E90423 		ldrd	r2, [r7, #16]
 6334 05b0 1219     		adds	r2, r2, r4
 6335 05b2 45EB0303 		adc	r3, r5, r3
 6336 05b6 4FF00000 		mov	r0, #0
 6337 05ba 4FF00001 		mov	r1, #0
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 166


 6338 05be D900     		lsls	r1, r3, #3
 6339 05c0 41EA5271 		orr	r1, r1, r2, lsr #29
 6340 05c4 D000     		lsls	r0, r2, #3
 6341 05c6 0246     		mov	r2, r0
 6342 05c8 0B46     		mov	r3, r1
 6343 05ca 12EB0408 		adds	r8, r2, r4
 6344 05ce 43EB0509 		adc	r9, r3, r5
 6345 05d2 D7F8E430 		ldr	r3, [r7, #228]
 6346 05d6 5B68     		ldr	r3, [r3, #4]
 6347 05d8 1846     		mov	r0, r3
 6348 05da 4FF00001 		mov	r1, #0
 6349 05de 4FF00002 		mov	r2, #0
 6350 05e2 4FF00003 		mov	r3, #0
 6351 05e6 8B00     		lsls	r3, r1, #2
 6352 05e8 43EA9073 		orr	r3, r3, r0, lsr #30
 6353 05ec 8200     		lsls	r2, r0, #2
 6354 05ee 4046     		mov	r0, r8
 6355 05f0 4946     		mov	r1, r9
 6356 05f2 FFF7FEFF 		bl	__aeabi_uldivmod
 6357              	.LVL12:
 6358 05f6 0246     		mov	r2, r0
 6359 05f8 0B46     		mov	r3, r1
 6360 05fa 4E4B     		ldr	r3, .L235+8
 6361 05fc A3FB0223 		umull	r2, r3, r3, r2
 6362 0600 5B09     		lsrs	r3, r3, #5
 6363 0602 1E01     		lsls	r6, r3, #4
 6364 0604 D7F8E830 		ldr	r3, [r7, #232]
 6365 0608 1846     		mov	r0, r3
 6366 060a 4FF00001 		mov	r1, #0
 6367 060e 0246     		mov	r2, r0
 6368 0610 0B46     		mov	r3, r1
 6369 0612 9418     		adds	r4, r2, r2
 6370 0614 BC60     		str	r4, [r7, #8]
 6371 0616 5B41     		adcs	r3, r3, r3
 6372 0618 FB60     		str	r3, [r7, #12]
 6373 061a D7E90223 		ldrd	r2, [r7, #8]
 6374 061e 1218     		adds	r2, r2, r0
 6375 0620 41EB0303 		adc	r3, r1, r3
 6376 0624 4FF00004 		mov	r4, #0
 6377 0628 4FF00005 		mov	r5, #0
 6378 062c DD00     		lsls	r5, r3, #3
 6379 062e 45EA5275 		orr	r5, r5, r2, lsr #29
 6380 0632 D400     		lsls	r4, r2, #3
 6381 0634 2246     		mov	r2, r4
 6382 0636 2B46     		mov	r3, r5
 6383 0638 1418     		adds	r4, r2, r0
 6384 063a C7F89840 		str	r4, [r7, #152]
 6385 063e 4B41     		adcs	r3, r3, r1
 6386 0640 C7F89C30 		str	r3, [r7, #156]
 6387 0644 D7F8E430 		ldr	r3, [r7, #228]
 6388 0648 5B68     		ldr	r3, [r3, #4]
 6389 064a 1846     		mov	r0, r3
 6390 064c 4FF00001 		mov	r1, #0
 6391 0650 4FF00002 		mov	r2, #0
 6392 0654 4FF00003 		mov	r3, #0
 6393 0658 8B00     		lsls	r3, r1, #2
 6394 065a 43EA9073 		orr	r3, r3, r0, lsr #30
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 167


 6395 065e 8200     		lsls	r2, r0, #2
 6396 0660 D7E92601 		ldrd	r0, [r7, #152]
 6397 0664 FFF7FEFF 		bl	__aeabi_uldivmod
 6398              	.LVL13:
 6399 0668 0246     		mov	r2, r0
 6400 066a 0B46     		mov	r3, r1
 6401 066c 314B     		ldr	r3, .L235+8
 6402 066e A3FB0213 		umull	r1, r3, r3, r2
 6403 0672 5B09     		lsrs	r3, r3, #5
 6404 0674 6421     		movs	r1, #100
 6405 0676 01FB03F3 		mul	r3, r1, r3
 6406 067a D31A     		subs	r3, r2, r3
 6407 067c 1B01     		lsls	r3, r3, #4
 6408 067e 3233     		adds	r3, r3, #50
 6409 0680 2C4A     		ldr	r2, .L235+8
 6410 0682 A2FB0323 		umull	r2, r3, r2, r3
 6411 0686 5B09     		lsrs	r3, r3, #5
 6412 0688 03F0F003 		and	r3, r3, #240
 6413 068c 1E44     		add	r6, r6, r3
 6414 068e D7F8E830 		ldr	r3, [r7, #232]
 6415 0692 1846     		mov	r0, r3
 6416 0694 4FF00001 		mov	r1, #0
 6417 0698 0246     		mov	r2, r0
 6418 069a 0B46     		mov	r3, r1
 6419 069c 9418     		adds	r4, r2, r2
 6420 069e 3C60     		str	r4, [r7]
 6421 06a0 5B41     		adcs	r3, r3, r3
 6422 06a2 7B60     		str	r3, [r7, #4]
 6423 06a4 D7E90023 		ldrd	r2, [r7]
 6424 06a8 1218     		adds	r2, r2, r0
 6425 06aa 41EB0303 		adc	r3, r1, r3
 6426 06ae 4FF00004 		mov	r4, #0
 6427 06b2 4FF00005 		mov	r5, #0
 6428 06b6 DD00     		lsls	r5, r3, #3
 6429 06b8 45EA5275 		orr	r5, r5, r2, lsr #29
 6430 06bc D400     		lsls	r4, r2, #3
 6431 06be 2246     		mov	r2, r4
 6432 06c0 2B46     		mov	r3, r5
 6433 06c2 1418     		adds	r4, r2, r0
 6434 06c4 C7F89040 		str	r4, [r7, #144]
 6435 06c8 4B41     		adcs	r3, r3, r1
 6436 06ca C7F89430 		str	r3, [r7, #148]
 6437 06ce D7F8E430 		ldr	r3, [r7, #228]
 6438 06d2 5B68     		ldr	r3, [r3, #4]
 6439 06d4 1846     		mov	r0, r3
 6440 06d6 4FF00001 		mov	r1, #0
 6441 06da 4FF00002 		mov	r2, #0
 6442 06de 4FF00003 		mov	r3, #0
 6443 06e2 8B00     		lsls	r3, r1, #2
 6444 06e4 43EA9073 		orr	r3, r3, r0, lsr #30
 6445 06e8 8200     		lsls	r2, r0, #2
 6446 06ea D7E92401 		ldrd	r0, [r7, #144]
 6447 06ee FFF7FEFF 		bl	__aeabi_uldivmod
 6448              	.LVL14:
 6449 06f2 0246     		mov	r2, r0
 6450 06f4 0B46     		mov	r3, r1
 6451 06f6 0F4B     		ldr	r3, .L235+8
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 168


 6452 06f8 A3FB0213 		umull	r1, r3, r3, r2
 6453 06fc 5B09     		lsrs	r3, r3, #5
 6454 06fe 6421     		movs	r1, #100
 6455 0700 01FB03F3 		mul	r3, r1, r3
 6456 0704 D31A     		subs	r3, r2, r3
 6457 0706 1B01     		lsls	r3, r3, #4
 6458 0708 3233     		adds	r3, r3, #50
 6459 070a 0A4A     		ldr	r2, .L235+8
 6460 070c A2FB0323 		umull	r2, r3, r2, r3
 6461 0710 5B09     		lsrs	r3, r3, #5
 6462 0712 03F00F02 		and	r2, r3, #15
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6463              		.loc 1 3147 12
 6464 0716 D7F8E430 		ldr	r3, [r7, #228]
 6465 071a 1B68     		ldr	r3, [r3]
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6466              		.loc 1 3147 30
 6467 071c 3244     		add	r2, r2, r6
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6468              		.loc 1 3147 28
 6469 071e 9A60     		str	r2, [r3, #8]
 6470              		.loc 1 3150 1
 6471 0720 FFE7     		b	.L232
 6472              	.L229:
 6473              	.L232:
 6474 0722 00BF     		nop
 6475 0724 F437     		adds	r7, r7, #244
 6476              	.LCFI297:
 6477              		.cfi_def_cfa_offset 36
 6478 0726 BD46     		mov	sp, r7
 6479              	.LCFI298:
 6480              		.cfi_def_cfa_register 13
 6481              		@ sp needed
 6482 0728 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6483              	.L236:
 6484              		.align	2
 6485              	.L235:
 6486 072c 00100140 		.word	1073811456
 6487 0730 00140140 		.word	1073812480
 6488 0734 1F85EB51 		.word	1374389535
 6489              		.cfi_endproc
 6490              	.LFE184:
 6492              		.text
 6493              	.Letext0:
 6494              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 6495              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 6496              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 6497              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 6498              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 6499              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 6500              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 6501              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 6502              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 6503              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 169


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_uart.c
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:18     .text.HAL_UART_Init:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:26     .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:643    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5740   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:136    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:143    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:260    .text.HAL_LIN_Init:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:267    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:402    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:409    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:555    .text.HAL_UART_DeInit:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:562    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:686    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:636    .text.HAL_UART_MspInit:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:679    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:722    .text.HAL_UART_Transmit:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:729    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4766   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:953    .text.HAL_UART_Receive:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:960    .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:1206   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:1213   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:1324   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:1331   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:1458   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:1465   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:1618   .text.HAL_UART_Transmit_DMA:000000cc $d
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4393   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4472   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4650   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:1625   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:1632   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:1806   .text.HAL_UART_Receive_DMA:000000f4 $d
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4517   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4605   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:1813   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:1820   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:1959   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:1966   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:2084   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:2091   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4884   .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4938   .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:2222   .text.HAL_UART_Abort:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:2229   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:2408   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:2415   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:2520   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:2527   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:2640   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:2647   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3728   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:2874   .text.HAL_UART_Abort_IT:00000140 $d
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5053   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5143   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 170


C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:2880   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:2887   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3771   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3004   .text.HAL_UART_AbortTransmit_IT:0000009c $d
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5233   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3009   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3016   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3814   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3141   .text.HAL_UART_AbortReceive_IT:000000ac $d
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5286   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3146   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3153   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5539   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3685   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5339   .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5484   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3501   .text.HAL_UART_IRQHandler:000001fc $d
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5000   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3506   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3513   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3549   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3556   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3592   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3599   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3635   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3642   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3678   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3721   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3764   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3807   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3850   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3857   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3929   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:3936   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4008   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4015   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4087   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4094   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4180   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4187   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4273   .text.HAL_UART_GetState:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4280   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4341   .text.HAL_UART_GetError:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4348   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4387   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4466   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4511   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4599   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4644   .text.UART_DMAError:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4760   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4878   .text.UART_EndTxTransfer:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4932   .text.UART_EndRxTransfer:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:4994   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5047   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5137   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5227   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5280   .text.UART_DMARxOnlyAbortCallback:00000000 $t
ARM GAS  C:\Users\Robert\AppData\Local\Temp\cclQmkna.s 			page 171


C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5333   .text.UART_Transmit_IT:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5478   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5533   .text.UART_Receive_IT:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:5734   .text.UART_SetConfig:00000000 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:6149   .text.UART_SetConfig:000003d4 $d
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:6154   .text.UART_SetConfig:000003e0 $t
C:\Users\Robert\AppData\Local\Temp\cclQmkna.s:6486   .text.UART_SetConfig:0000072c $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
__aeabi_uldivmod
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
